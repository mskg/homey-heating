{"version":3,"file":"885.js","mappings":"wNAkBA,MAwCA,EAxCqDA,IACnD,MAAOC,EAAMC,GAAW,WAAe,IAMvC,OAJA,aAAgB,KACdA,EAAQ,GAAG,GACV,CAACF,EAAMG,OAGR,gBAAC,IAAM,CAACA,KAAMH,EAAMG,KAAMC,QAAS,KAAQJ,EAAMK,UAAU,EAAKC,oBAAqB,KACnF,gBAAC,IAAW,MAAE,OAAU,gBACxB,gBAAC,IAAa,KACZ,gBAAC,IAAiB,MACf,OAAU,aAAc,CAAEL,KAAMD,EAAMC,QAGzC,gBAAC,IAAS,CACRM,WAAW,EACXC,UAAU,EACVC,OAAO,QACPC,GAAG,OACHC,OAAO,OAAU,oBACjBC,aAAa,OAAU,0BACvBC,MAAOZ,EACPa,SAAWC,IAAUb,EAAQa,EAAIC,OAAOH,MAAM,EAC9CI,WAAW,KAGf,gBAAC,IAAa,KACZ,gBAAC,IAAM,CAACC,QAAS,KAAQlB,EAAMK,UAAU,EAAKc,MAAM,YACjD,OAAU,iBAGb,gBAAC,IAAM,CAACD,QAAS,KAAQlB,EAAMoB,UAAUnB,EAAK,EAAKoB,SAAmB,KAATpB,EAAakB,MAAM,YAC7E,OAAU,cAIlB,C","sources":["webpack:///./dialogs/CloneDialog.tsx"],"sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport Transition from \"../components/Transition\";\nimport translate from \"../i18n/Translation\";\n\ntype Props = {\n  open: boolean;\n  name?: string;\n  onConfirm: (name: string) => void;\n  onCancel: () => void;\n};\n\nconst CloneDialog: React.FunctionComponent<Props> = (props: Props) => {\n  const [name, setName] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setName(\"\");\n  }, [props.open]);\n\n  return (\n    <Dialog open={props.open} onClose={() => { props.onCancel(); }} TransitionComponent={Transition}>\n      <DialogTitle>{translate(\"clone.title\")}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {translate(\"clone.text\", { name: props.name })}\n        </DialogContentText>\n\n        <TextField\n          autoFocus={true}\n          required={true}\n          margin=\"dense\"\n          id=\"name\"\n          label={translate(\"clone.name.label\")}\n          placeholder={translate(\"clone.name.placeholder\")}\n          value={name}\n          onChange={(evt) => { setName(evt.target.value); }}\n          fullWidth={true}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => { props.onCancel(); }} color=\"primary\">\n          {translate(\"clone.cancel\")}\n        </Button>\n\n        <Button onClick={() => { props.onConfirm(name); }} disabled={name === \"\"} color=\"primary\">\n          {translate(\"clone.ok\")}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CloneDialog;\n"],"names":["props","name","setName","open","onClose","onCancel","TransitionComponent","autoFocus","required","margin","id","label","placeholder","value","onChange","evt","target","fullWidth","onClick","color","onConfirm","disabled"],"sourceRoot":""}