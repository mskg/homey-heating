{"version":3,"file":"855.js","mappings":"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","sources":["webpack:///./api/callAPI.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/heating/index.tsx","webpack:///./api/suspendableState.tsx","webpack:///./api/hooks.tsx","webpack:///./api/settings/index.tsx","webpack:///./api/zones/index.tsx","webpack:///./components/AddFab.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/InputContainer.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./components/SubHeader.tsx","webpack:///./layouts/Page.tsx","webpack:///./pages/overview.tsx"],"sourcesContent":["export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\n\nexport type MapType = {[key: string]: any};\n\nexport type HookSetType<T> = Dispatch<SetStateAction<T>>;\nexport type HookReturnType = () => void;\nexport type ProvideState<T extends MapType> = (provideState?: boolean, provideFailed?: boolean) => T;\n\ntype Async<T> = () => Promise<T>;\n\n/***\n * Call the apiMethod asynchronously.\n *\n * If the method fails, throw the exception inside set SetStateAction of the hook.\n * This allows to catch the error \"in the ErrorBoundary.\"\n */\nasync function tryMethod<T>(apiMethod: () => Promise<T>, setStateAction: Dispatch<SetStateAction<T>>): Promise<void> {\n    try {\n        setStateAction(await apiMethod());\n    } catch (e) {\n        // required for the error to popup the hierarchy\n        setStateAction(() => { throw e; });\n    }\n}\n\nconst cache = new Map<string, any>();\nconst LOADING: any = \"Loading...\";\n\n/**\n * Create a \"hook\" that is able to suspend.\n *\n * @param name Must be unique\n * @param method The async method to wait for\n */\nexport function useSuspendableState<T extends MapType>(name: string, method: Async<any>): ProvideState<T> {\n    return (provideState = false, provideFailed = false) => {\n        // this is imporant as it sets the state after the promise resolves\n        const val = cache.get(name);\n        let [state, setState] = [null, null];\n        if (provideState) {\n            // we use instance compare on LOADING to determine non existing value\n            // @ts-ignore\n            [state, setState] = React.useState<any>(val !== LOADING ? val : null);\n        }\n\n        const [failed, setFailed] = React.useState(false);\n\n        function loadValue(force: boolean = false) {\n            if (cache.get(name) == null || force) {\n                cache.set(name, LOADING);\n\n                // this unloads the component and waits for the promise to resolve\n                throw tryMethod(method, (r) => {\n                    if (typeof r === \"function\") {\n                        cache.set(name, (r as any)(cache.get(name)));\n                    } else {\n                        cache.set(name, r);\n                    }\n                }).catch((e) => {\n                    if (!provideFailed) {\n                        // console.error(e);\n                        // check me - this doesn't work\n                        setFailed(() => { throw e; });\n                    } else {\n                        setFailed(true);\n                    }\n                });\n            }\n        }\n\n        loadValue();\n\n        useEffect(() => {\n            // console.log(\"killed value\");\n            return () => { cache.delete(name); };\n        }, []);\n\n        // we tell the DEV that this is not the way to go\n        function failOnNoState() {\n            if (!__PRODUCTION__) {\n                throw new Error(`You must use hooks to save the value ${name}`);\n            }\n        }\n\n        return {\n            [name]: provideState ? state : val,\n            [`set${name.charAt(0).toUpperCase() + name.slice(1)}`]: provideState ? setState : failOnNoState,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}`]: loadValue,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}Failed`]: failed,\n        } as T;\n    };\n}\n","import { IHeatingDevice, IHeatingPlan, IHeatingZone, IScheduleInformation, OperationMode } from \"../../app/model\";\nimport { deviceAPI } from \"./devices\";\nimport { modeAPI, planAPI } from \"./heating\";\nimport { settingsAPI, SettingsHashMap } from \"./settings\";\nimport { HookReturnType, HookSetType, useSuspendableState } from \"./suspendableState\";\nimport { zoneAPI } from \"./zones\";\n\ntype PlansType = {\n    plans: IHeatingPlan[],\n    setPlans: HookSetType<IHeatingPlan[]>,\n    loadPlans(force?: boolean): HookReturnType,\n};\n\ntype DevicesType = {\n    devices: IHeatingDevice[],\n    setDevices: HookSetType<IHeatingDevice[]>,\n    loadDevices: HookReturnType,\n};\n\ntype ZonesType = {\n    zones: IHeatingZone[],\n    setZones: HookSetType<IHeatingZone[]>,\n    loadZones: HookReturnType,\n};\n\ntype ScheduleInformationType = {\n    scheduleInformation: IScheduleInformation,\n    setScheduleInformation: HookSetType<IScheduleInformation>,\n    loadScheduleInformation: HookReturnType,\n};\n\ntype SettingsType = {\n    settings: SettingsHashMap,\n    setSettings: HookSetType<SettingsHashMap>,\n    loadSettings: HookReturnType,\n};\n\ntype ModeType = {\n    mode: OperationMode,\n    setMode: HookSetType<OperationMode>,\n    loadMode: HookReturnType,\n};\n\nexport const usePlans = useSuspendableState<PlansType>(\"plans\", planAPI.fetchPlans);\nexport const useDevices = useSuspendableState<DevicesType>(\"devices\", deviceAPI.fetchHeatingDevices);\nexport const useZones = useSuspendableState<ZonesType>(\"zones\", zoneAPI.fetchHeatingZones);\nexport const useScheduleInformation = useSuspendableState<ScheduleInformationType>(\"scheduleInformation\", planAPI.fetchSchedule);\nexport const useSettings = useSuspendableState<SettingsType>(\"settings\", settingsAPI.fetchSettings);\nexport const useMode = useSuspendableState<ModeType>(\"mode\", modeAPI.fetchMode);\n","import { Settings } from \"../../../app/services/settings-manager/types\";\nimport callAPI from \"../callAPI\";\n\nexport type SettingsHashMap = {\n  [key in keyof typeof Settings]?: string | boolean;\n};\n\nconst fetchSettings = async (): Promise<SettingsHashMap> => {\n  return await callAPI<SettingsHashMap>(\"GET\", \"/settings\");\n};\n\nconst updateSettings = async (settings: {}): Promise<void> => {\n  return await callAPI<any>(\"PUT\", `/settings`, settings);\n};\n\nexport const settingsAPI = {\n  fetchSettings,\n  updateSettings,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","import Fab from \"@material-ui/core/Fab\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback<any, any> = (theme) => ({\n    fabButton: {\n        zIndex: 1,\n        margin: \"0 auto\",\n\n        position: \"absolute\" as \"absolute\",\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n});\n\ntype Props = WithStyles<typeof styles> & {\n    onClick: () => void,\n};\n\nconst AddFabComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n\n    return (\n        <Fab color=\"secondary\" aria-label=\"Add\" className={classes.fabButton} onClick={() => props.onClick()}>\n            <AddIcon />\n        </Fab>\n    );\n};\n\nexport default withStyles(styles)(AddFabComponent);\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback<any, any> = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback<any, any> = (theme) => ({\n    text: {\n        // marginTop: theme.spacing(4),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback<any, any> = (theme) => ({\n    inputContainer: {\n        width: \"100%\",\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(3),\n    },\n});\n\ntype Props = {\n    children: React.ReactElement<any>,\n} & WithStyles<typeof styles>;\n\nconst InputContainer: React.FunctionComponent<Props> = (props) => {\n    return (<div className={props.classes.inputContainer}>{props.children}</div>);\n};\n\nexport default withStyles(styles)(InputContainer);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        // @ts-ignore\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    // @ts-ignore\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        // @ts-ignore\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback<any, any> = (theme) => ({\n    text: {\n        padding: theme.spacing(2),\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing(2),\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback<any, any> = (theme) => ({\n    headline: {\n        marginTop: theme.spacing(4),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback<any, any> = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { forEach, sortBy } from \"lodash\";\nimport { withSnackbar, WithSnackbarProps } from \"notistack\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { IHeatingPlan, OperationMode } from \"../../app/model\";\nimport { modeAPI, planAPI } from \"../api/heating\";\nimport { useDevices, useMode, usePlans, useZones } from \"../api/hooks\";\nimport AddFab from \"../components/AddFab\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport InputContainer from \"../components/InputContainer\";\nimport { AppMenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\n\nconst styles: StyleRulesCallback<any, any> = (theme) => ({\n    list: {\n        marginTop: 0,\n        marginBottom: theme.spacing(2),\n    },\n});\n\ntype Props = WithStyles<typeof styles> & RouteComponentProps & WithSnackbarProps;\n\nconst OverviewPage: React.FunctionComponent<Props> = (props: Props) => {\n    const { classes } = props;\n    const { plans, loadPlans } = usePlans();\n    const { zones } = useZones();\n    const { devices } = useDevices();\n    const { mode, setMode } = useMode(true);\n    const [ updateUI, setUpdateUI ] = React.useState(false);\n\n    function formatAttachments(plan: IHeatingPlan): string {\n        const elements: string[] = [];\n\n        forEach(plan.devices, (d: string) => {\n            const device = devices[d];\n            if (device != null) {\n                elements.push(device.name);\n            }\n        });\n\n        forEach(plan.zones, (d: string) => {\n            const zone = zones[d];\n            if (zone != null) {\n                elements.push(zone.name);\n            }\n        });\n\n        return sortBy(elements, (e) => e).join(\", \");\n    }\n\n    const setHeatingMode = (newMode: string) => {\n        (async () => {\n            const newModeInt: OperationMode = parseInt(newMode, 10);\n\n            setUpdateUI(true);\n\n            await modeAPI.setMode(newModeInt);\n            // change is async, we don't waitfor it as reloading does not\n            // provide the current value\n            setMode(newModeInt);\n\n            props.enqueueSnackbar(translate(\"plans.modechanged\", {\n                name: translate(`Modes.${newMode}`),\n            }));\n\n            setUpdateUI(false);\n        })();\n    };\n\n    const toggleState = (thePlan: IHeatingPlan) => {\n        (async () => {\n            // we need to trigger updates\n            setUpdateUI(true);\n\n            await planAPI.togglePlanState(thePlan);\n            await loadPlans();\n\n            props.enqueueSnackbar(translate(\"plans.toggled\", {\n                name: thePlan.name,\n            }));\n\n            setUpdateUI(false);\n        })();\n    };\n\n    const createNew = () => {\n        props.history.push(`/plans/new`);\n    };\n\n    return (\n        <Page>\n            {{\n                header: (<AppHeader title={translate(\"plans.title\")} button={<AppMenuButton />} />),\n                paddingTop: 50,\n                paddingBottom: 50,\n\n                body: (\n                    <React.Fragment>\n                        <SubHeader text={translate(\"plans.heatingmode.section\")} />\n                        <InputContainer>\n                            <Select\n                                fullWidth={true}\n                                disabled={updateUI}\n                                onChange={(evt) => setHeatingMode(evt.target.value as string)}\n                                value={mode}\n                            >\n                            {\n                                [0, 1, 2, 3, 4, 5].map((m) =>\n                                    (<MenuItem key={m} value={m}>{translate(`Modes.${m}`)}</MenuItem>),\n                                )\n                            }\n                            </Select>\n                        </InputContainer>\n\n                        <SubHeader text={translate(\"plans.plans.section\")} />\n                        { plans.length === 0\n                            ? <BodyText style={{paddingTop: 16}} text={translate(\"plans.plans.empty\")} />\n                            : <List className={classes.list}>\n                                {plans.length > 0 && <Divider key=\"0\" />}\n                                {plans.map((plan) => (\n                                    <React.Fragment key={plan.id}>\n                                        <ListItem {...{ to: `/plans/${plan.id}` }} component={Link as unknown as \"a\"} button={true}>\n                                            <ListItemText\n                                                primary={plan.name}\n                                                secondary={formatAttachments(plan)}\n                                                // secondary = {\n                                                //     <React.Fragment>\n                                                //         {formatAttachments(plan)}\n                                                //         <Chart height={30} legend={false} plan={plan} />\n                                                //     </React.Fragment>\n                                                // }\n                                            />\n\n                                            <ListItemSecondaryAction>\n                                                <Switch\n                                                    onChange={() => toggleState(plan)}\n                                                    checked={plan.enabled}\n                                                />\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                        <Divider />\n                                    </React.Fragment>\n                                ))}\n                            </List>\n                        }\n                        <AddFab onClick={createNew} />\n                    </React.Fragment>\n                ),\n            }}\n        </Page>\n    );\n};\n\n// @ts-ignore\nexport default withSnackbar(withRouter(withStyles(styles)(OverviewPage)));\n"],"names":["callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","deviceAPI","fetchHeatingDevices","devices","sortBy","reduce","map","obj","idx","id","length","updatePlan","newPlan","planCopy","zones","undefined","planAPI","fetchPlans","res","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","cache","Map","LOADING","useSuspendableState","provideState","provideFailed","val","get","state","setState","failed","setFailed","loadValue","force","set","apiMethod","setStateAction","e","tryMethod","r","catch","useEffect","delete","charAt","toUpperCase","slice","usePlans","useDevices","useZones","useScheduleInformation","useSettings","settings","useMode","settingsAPI","fetchSettings","updateSettings","zoneAPI","fetchHeatingZones","theme","fabButton","zIndex","margin","position","bottom","spacing","right","props","classes","color","className","onClick","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","button","title","actions","subBar","children","Fragment","variant","noWrap","text","paddingLeft","paddingRight","otherProps","inputContainer","width","createLink","innerRef","to","toString","match","openURL","ListItem","component","styles","padding","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","AppMenu","open","onClose","MenuButton","first","icon","Menu","withStyles","elements","type","Drawer","Typography","gutterBottom","Divider","List","key","disabled","url","ListItemText","IconButton","headline","marginTop","root","webkitOverflowScrolling","flexFlow","height","backgroundColor","flex","maxWidth","overflowY","header","newPadding","style","list","marginBottom","plans","loadPlans","updateUI","setUpdateUI","formatAttachments","forEach","d","push","zone","join","fullWidth","onChange","evt","setHeatingMode","newMode","target","value","newModeInt","parseInt","enqueueSnackbar","m","secondary","toggleState","thePlan","checked","history"],"sourceRoot":""}