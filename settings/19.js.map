{"version":3,"file":"19.js","mappings":"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","sources":["webpack:///../../node_modules/@material-ui/core/esm/Switch/Switch.js","webpack:///../../node_modules/@material-ui/core/esm/internal/SwitchBase.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);"],"names":["Switch","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","icon","thumb","root","edgeStart","edgeEnd","concat","type","checkedIcon","switchBase","input","checked","disabled","track","propTypes","defaultChecked","disableRipple","id","inputProps","inputRef","onChange","required","value","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","SwitchBase","autoFocus","checkedProp","disabledProp","onBlur","onFocus","readOnly","tabIndex","_useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","role","undefined","event","newChecked","target","cursor","margin"],"sourceRoot":""}