{"version":3,"file":"14.js","mappings":";gOAKIA,EAAqB,kBAMlB,SAASC,IACd,OAAO,aAAiBD,EAC1B,CALEA,EAAmBE,YAAc,qBAMnC,8OCZe,SAASD,IACtB,OAAO,aAAiB,IAC1B,uyBC8BIE,EAA0B,cAAiB,SAAoBC,EAAOC,GACxE,IAAIC,EAAYF,EAAME,UAClBC,EAAcH,EAAMI,QACpBC,EAAcL,EAAMK,YACpBC,EAAUN,EAAMM,QAChBC,EAAYP,EAAMO,UAClBC,EAAiBR,EAAMQ,eACvBC,EAAeT,EAAMU,SACrBC,EAAOX,EAAMW,KACbC,EAAKZ,EAAMY,GACXC,EAAab,EAAMa,WACnBC,EAAWd,EAAMc,SACjBC,EAAOf,EAAMe,KACbC,EAAShB,EAAMgB,OACfC,EAAWjB,EAAMiB,SACjBC,EAAUlB,EAAMkB,QAChBC,EAAWnB,EAAMmB,SACjBC,EAAWpB,EAAMoB,SACjBC,EAAWrB,EAAMqB,SACjBC,EAAOtB,EAAMsB,KACbC,EAAQvB,EAAMuB,MACdC,GAAQ,OAAyBxB,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQyB,GAAiB,OAAc,CACjCC,WAAYvB,EACZwB,QAASC,QAAQpB,GACjBO,KAAM,aACNc,MAAO,YAELC,GAAkB,OAAeL,EAAgB,GACjDrB,EAAU0B,EAAgB,GAC1BC,EAAkBD,EAAgB,GAElCE,GAAiB,SAgCjBtB,EAAWD,EAEXuB,QACsB,IAAbtB,IACTA,EAAWsB,EAAetB,UAI9B,IAAIuB,EAAuB,aAATX,GAAgC,UAATA,EACzC,OAAoB,gBAAoB,KAAY,OAAS,CAC3DY,UAAW,OACX3B,WAAW,OAAKD,EAAQ6B,KAAM5B,EAAWH,GAAWE,EAAQF,QAASM,GAAYJ,EAAQI,UACzFA,SAAUA,EACVW,SAAU,KACVe,UAAMC,EACNnB,QA7CgB,SAAqBoB,GACjCpB,GACFA,EAAQoB,GAGNN,GAAkBA,EAAed,SACnCc,EAAed,QAAQoB,EAE3B,EAsCEtB,OApCe,SAAoBsB,GAC/BtB,GACFA,EAAOsB,GAGLN,GAAkBA,EAAehB,QACnCgB,EAAehB,OAAOsB,EAE1B,EA6BErC,IAAKA,GACJuB,GAAqB,gBAAoB,SAAS,OAAS,CAC5DtB,UAAWA,EACXE,QAASD,EACTK,eAAgBA,EAChBD,UAAWD,EAAQiC,MACnB7B,SAAUA,EACVE,GAAIqB,GAAerB,EACnBG,KAAMA,EACNE,SApCsB,SAA2BqB,GACjD,IAAIE,EAAaF,EAAMG,OAAOrC,QAC9B2B,EAAgBS,GAEZvB,GAEFA,EAASqB,EAAOE,EAEpB,EA6BErB,SAAUA,EACVlB,IAAKa,EACLM,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,GACNV,IAAcT,EAAUC,EAAcM,EAC3C,IAGwCZ,EAAW2C,UAAY,CAI7DxC,UAAW,SAKXE,QAAS,SAKTC,YAAa,oBAMbC,QAAS,sBAKTC,UAAW,WAKXC,eAAgB,SAKhBE,SAAU,SAKVC,KAAM,oBAKNC,GAAI,WAKJC,WAAY,WAKZC,SAAU,IAKVC,KAAM,WAKNC,OAAQ,SAQRC,SAAU,SAKVC,QAAS,SAMTC,SAAU,SAKVC,SAAU,SAKVC,SAAU,cAAoB,CAAC,WAAkB,aAKjDC,KAAM,sBAKNC,MAAO,SAET,SAAe,OAvOK,CAClBY,KAAM,CACJQ,QAAS,GAEXvC,QAAS,CAAC,EACVM,SAAU,CAAC,EACX6B,MAAO,CACLK,OAAQ,UACRC,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRR,QAAS,EACTS,OAAQ,IAuNsB,CAChCrC,KAAM,qBADR,CAEGhB,uKCjPY,SAASsD,EAAWrD,GAC/B,OAAO,gBAAC,EAAAsD,EAAI,iBAAKtD,GACrB,wjCCeA,MA2DA,EA3DuDA,IACrD,MAAOuD,EAAMC,GAAW,WAAsB,IAE9C,aAAgB,KACdA,EAAQ,GAAG,GACV,CAACxD,EAAMyD,OAEV,MAAMC,EAAaC,GAAa,KAC9BH,GAASI,IACQ,MAAXA,IAAmBA,EAAU,IAEjC,MAAMC,GAAQ,IAAAC,MAAKF,GAAUG,GAAMA,IAAMJ,IAQzC,OAPA,IAAAK,QAAOJ,GAAUG,GAAMA,IAAMJ,IAEhB,MAATE,GACFD,EAAQK,KAAKN,GAIR,IAAIC,EAAQ,GACnB,EAGEM,EAAYP,GACuB,OAAhC,IAAAG,MAAKP,GAAOQ,GAAMA,IAAMJ,IAGjC,OACE,gBAAC,IAAM,CAACF,KAAMzD,EAAMyD,KAAMU,QAAS,KAAQnE,EAAMoE,UAAU,EAAKC,oBAAqB,KACnF,gBAAC,IAAW,MAAE,OAAU,eACxB,gBAAC,IAAa,KACZ,gBAAC,IAAiB,MACf,OAAU,cAGb,gBAAC,IAAI,CAACC,OAAO,IACV,IAAAC,KAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAKZ,GAC3B,gBAAC,IAAQ,CAACa,IAAKb,EAAKc,QAAQ,EAAMC,QAAShB,EAAUC,IACnD,gBAAC,IAAY,CAACgB,SAAS,OAAU,QAAQ,KAAIhB,QAC7C,gBAAC,IAAuB,KACtB,gBAAC,IAAQ,CAACvD,QAAS8D,EAASP,GAAMe,QAAShB,EAAUC,WAM/D,gBAAC,IAAa,KACZ,gBAAC,IAAM,CAACe,QAAS,KAAQ1E,EAAMoE,UAAU,EAAKQ,MAAM,YACjD,OAAU,gBAGb,gBAAC,IAAM,CAACF,QAAS,KAAQ1E,EAAM6E,UAAUtB,EAAK,EAAKqB,MAAM,YACtD,OAAU,aAIlB","sources":["webpack:///../../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","webpack:///../../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","webpack:///../../node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack:///./components/Transition.tsx","webpack:///./dialogs/CopyDayDialog.tsx"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import { Zoom } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function Transition(props: any) {\n    return <Zoom {...props} />;\n}\n","import { Checkbox, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { find, map, remove } from \"lodash\";\nimport React from \"react\";\nimport { Day } from \"../../app/model\";\nimport Transition from \"../components/Transition\";\nimport translate from \"../i18n/Translation\";\n\ntype Props = {\n  open: boolean;\n\n  onConfirm: (days: Day[]) => void;\n  onCancel: () => void;\n};\n\nconst CopyDayDialog: React.FunctionComponent<Props> = (props: Props) => {\n  const [days, setDays] = React.useState<Day[]>([]);\n\n  React.useEffect(() => {\n    setDays([]);\n  }, [props.open]);\n\n  const toggleDay = (day: Day) => () => {\n    setDays((oldDays) => {\n      if (oldDays == null) { oldDays = []; }\n\n      const found = find(oldDays, (d) => d === day);\n      remove(oldDays, (d) => d === day);\n\n      if (found == null) {\n        oldDays.push(day);\n      }\n\n      // needs to be a new reference to update\n      return [...oldDays];\n    });\n  };\n\n  const checkDay = (day: Day) => {\n    return find(days, (d) => d === day) != null;\n  };\n\n  return (\n    <Dialog open={props.open} onClose={() => { props.onCancel(); }} TransitionComponent={Transition}>\n      <DialogTitle>{translate(\"copy.title\")}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {translate(\"copy.text\")}\n        </DialogContentText>\n\n        <List dense={true}>\n          {map([1, 2, 3, 4, 5, 6, 0], (day) => (\n            <ListItem key={day} button={true} onClick={toggleDay(day)}>\n              <ListItemText primary={translate(`copy.${Day[day]}`)} />\n              <ListItemSecondaryAction>\n                <Checkbox checked={checkDay(day)} onClick={toggleDay(day)} />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => { props.onCancel(); }} color=\"primary\">\n          {translate(\"copy.cancel\")}\n        </Button>\n\n        <Button onClick={() => { props.onConfirm(days); }} color=\"primary\">\n          {translate(\"copy.ok\")}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CopyDayDialog;\n"],"names":["FormControlContext","useFormControl","displayName","SwitchBase","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","root","role","undefined","event","input","newChecked","target","propTypes","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","Transition","Z","days","setDays","open","toggleDay","day","oldDays","found","find","d","remove","push","checkDay","onClose","onCancel","TransitionComponent","dense","map","key","button","onClick","primary","color","onConfirm"],"sourceRoot":""}