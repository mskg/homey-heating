/*! For license information please see vendors-node_modules_material-ui_core_colors_amber_js-node_modules_material-ui_core_colors_gr-05f7ff.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["vendors-node_modules_material-ui_core_colors_amber_js-node_modules_material-ui_core_colors_gr-05f7ff"],{"../../node_modules/@material-ui/core/colors/amber.js":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default={50:"#fff8e1",100:"#ffecb3",200:"#ffe082",300:"#ffd54f",400:"#ffca28",500:"#ffc107",600:"#ffb300",700:"#ffa000",800:"#ff8f00",900:"#ff6f00",A100:"#ffe57f",A200:"#ffd740",A400:"#ffc400",A700:"#ffab00"}},"../../node_modules/@material-ui/core/colors/green.js":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"}},"../../node_modules/d3-array/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{map:()=>s,slice:()=>o});var r=Array.prototype,o=r.slice,s=r.map},"../../node_modules/d3-array/src/ascending.js":(e,t,n)=>{function r(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/bisect.js":(e,t,n)=>{n.r(t),n.d(t,{bisectLeft:()=>a,bisectRight:()=>s,default:()=>i});var r=n("../../node_modules/d3-array/src/ascending.js"),o=(0,n("../../node_modules/d3-array/src/bisector.js").default)(r.default),s=o.right,a=o.left;const i=s},"../../node_modules/d3-array/src/bisector.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/ascending.js");function o(e){var t;return 1===e.length&&(t=e,e=function(e,n){return(0,r.default)(t(e),n)}),{left:function(t,n,r,o){for(null==r&&(r=0),null==o&&(o=t.length);r<o;){var s=r+o>>>1;e(t[s],n)<0?r=s+1:o=s}return r},right:function(t,n,r,o){for(null==r&&(r=0),null==o&&(o=t.length);r<o;){var s=r+o>>>1;e(t[s],n)>0?o=s:r=s+1}return r}}}},"../../node_modules/d3-array/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/cross.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/pairs.js");function o(e,t,n){var o,s,a,i,d=e.length,u=t.length,c=new Array(d*u);for(null==n&&(n=r.pair),o=a=0;o<d;++o)for(i=e[o],s=0;s<u;++s,++a)c[a]=n(i,t[s]);return c}},"../../node_modules/d3-array/src/descending.js":(e,t,n)=>{function r(e,t){return t<e?-1:t>e?1:t>=e?0:NaN}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/deviation.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/variance.js");function o(e,t){var n=(0,r.default)(e,t);return n?Math.sqrt(n):n}},"../../node_modules/d3-array/src/extent.js":(e,t,n)=>{function r(e,t){var n,r,o,s=e.length,a=-1;if(null==t){for(;++a<s;)if(null!=(n=e[a])&&n>=n)for(r=o=n;++a<s;)null!=(n=e[a])&&(r>n&&(r=n),o<n&&(o=n))}else for(;++a<s;)if(null!=(n=t(e[a],a,e))&&n>=n)for(r=o=n;++a<s;)null!=(n=t(e[a],a,e))&&(r>n&&(r=n),o<n&&(o=n));return[r,o]}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/histogram.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n("../../node_modules/d3-array/src/array.js"),o=n("../../node_modules/d3-array/src/bisect.js"),s=n("../../node_modules/d3-array/src/constant.js"),a=n("../../node_modules/d3-array/src/extent.js"),i=n("../../node_modules/d3-array/src/identity.js"),d=n("../../node_modules/d3-array/src/range.js"),u=n("../../node_modules/d3-array/src/ticks.js"),c=n("../../node_modules/d3-array/src/threshold/sturges.js");function l(){var e=i.default,t=a.default,n=c.default;function l(r){var s,a,i=r.length,c=new Array(i);for(s=0;s<i;++s)c[s]=e(r[s],s,r);var l=t(c),f=l[0],h=l[1],m=n(c,f,h);Array.isArray(m)||(m=(0,u.tickStep)(f,h,m),m=(0,d.default)(Math.ceil(f/m)*m,h,m));for(var p=m.length;m[0]<=f;)m.shift(),--p;for(;m[p-1]>h;)m.pop(),--p;var _,g=new Array(p+1);for(s=0;s<=p;++s)(_=g[s]=[]).x0=s>0?m[s-1]:f,_.x1=s<p?m[s]:h;for(s=0;s<i;++s)f<=(a=c[s])&&a<=h&&g[(0,o.default)(m,a,0,p)].push(r[s]);return g}return l.value=function(t){return arguments.length?(e="function"==typeof t?t:(0,s.default)(t),l):e},l.domain=function(e){return arguments.length?(t="function"==typeof e?e:(0,s.default)([e[0],e[1]]),l):t},l.thresholds=function(e){return arguments.length?(n="function"==typeof e?e:Array.isArray(e)?(0,s.default)(r.slice.call(e)):(0,s.default)(e),l):n},l}},"../../node_modules/d3-array/src/identity.js":(e,t,n)=>{function r(e){return e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{ascending:()=>o.default,bisect:()=>r.default,bisectLeft:()=>r.bisectLeft,bisectRight:()=>r.bisectRight,bisector:()=>s.default,cross:()=>a.default,descending:()=>i.default,deviation:()=>d.default,extent:()=>u.default,histogram:()=>c.default,max:()=>m.default,mean:()=>p.default,median:()=>_.default,merge:()=>g.default,min:()=>v.default,pairs:()=>y.default,permute:()=>j.default,quantile:()=>b.default,range:()=>x.default,scan:()=>w.default,shuffle:()=>M.default,sum:()=>S.default,thresholdFreedmanDiaconis:()=>l.default,thresholdScott:()=>f.default,thresholdSturges:()=>h.default,tickIncrement:()=>k.tickIncrement,tickStep:()=>k.tickStep,ticks:()=>k.default,transpose:()=>E.default,variance:()=>C.default,zip:()=>A.default});var r=n("../../node_modules/d3-array/src/bisect.js"),o=n("../../node_modules/d3-array/src/ascending.js"),s=n("../../node_modules/d3-array/src/bisector.js"),a=n("../../node_modules/d3-array/src/cross.js"),i=n("../../node_modules/d3-array/src/descending.js"),d=n("../../node_modules/d3-array/src/deviation.js"),u=n("../../node_modules/d3-array/src/extent.js"),c=n("../../node_modules/d3-array/src/histogram.js"),l=n("../../node_modules/d3-array/src/threshold/freedmanDiaconis.js"),f=n("../../node_modules/d3-array/src/threshold/scott.js"),h=n("../../node_modules/d3-array/src/threshold/sturges.js"),m=n("../../node_modules/d3-array/src/max.js"),p=n("../../node_modules/d3-array/src/mean.js"),_=n("../../node_modules/d3-array/src/median.js"),g=n("../../node_modules/d3-array/src/merge.js"),v=n("../../node_modules/d3-array/src/min.js"),y=n("../../node_modules/d3-array/src/pairs.js"),j=n("../../node_modules/d3-array/src/permute.js"),b=n("../../node_modules/d3-array/src/quantile.js"),x=n("../../node_modules/d3-array/src/range.js"),w=n("../../node_modules/d3-array/src/scan.js"),M=n("../../node_modules/d3-array/src/shuffle.js"),S=n("../../node_modules/d3-array/src/sum.js"),k=n("../../node_modules/d3-array/src/ticks.js"),E=n("../../node_modules/d3-array/src/transpose.js"),C=n("../../node_modules/d3-array/src/variance.js"),A=n("../../node_modules/d3-array/src/zip.js")},"../../node_modules/d3-array/src/max.js":(e,t,n)=>{function r(e,t){var n,r,o=e.length,s=-1;if(null==t){for(;++s<o;)if(null!=(n=e[s])&&n>=n)for(r=n;++s<o;)null!=(n=e[s])&&n>r&&(r=n)}else for(;++s<o;)if(null!=(n=t(e[s],s,e))&&n>=n)for(r=n;++s<o;)null!=(n=t(e[s],s,e))&&n>r&&(r=n);return r}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/mean.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/number.js");function o(e,t){var n,o=e.length,s=o,a=-1,i=0;if(null==t)for(;++a<o;)isNaN(n=(0,r.default)(e[a]))?--s:i+=n;else for(;++a<o;)isNaN(n=(0,r.default)(t(e[a],a,e)))?--s:i+=n;if(s)return i/s}},"../../node_modules/d3-array/src/median.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-array/src/ascending.js"),o=n("../../node_modules/d3-array/src/number.js"),s=n("../../node_modules/d3-array/src/quantile.js");function a(e,t){var n,a=e.length,i=-1,d=[];if(null==t)for(;++i<a;)isNaN(n=(0,o.default)(e[i]))||d.push(n);else for(;++i<a;)isNaN(n=(0,o.default)(t(e[i],i,e)))||d.push(n);return(0,s.default)(d.sort(r.default),.5)}},"../../node_modules/d3-array/src/merge.js":(e,t,n)=>{function r(e){for(var t,n,r,o=e.length,s=-1,a=0;++s<o;)a+=e[s].length;for(n=new Array(a);--o>=0;)for(t=(r=e[o]).length;--t>=0;)n[--a]=r[t];return n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/min.js":(e,t,n)=>{function r(e,t){var n,r,o=e.length,s=-1;if(null==t){for(;++s<o;)if(null!=(n=e[s])&&n>=n)for(r=n;++s<o;)null!=(n=e[s])&&r>n&&(r=n)}else for(;++s<o;)if(null!=(n=t(e[s],s,e))&&n>=n)for(r=n;++s<o;)null!=(n=t(e[s],s,e))&&r>n&&(r=n);return r}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/number.js":(e,t,n)=>{function r(e){return null===e?NaN:+e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/pairs.js":(e,t,n)=>{function r(e,t){null==t&&(t=o);for(var n=0,r=e.length-1,s=e[0],a=new Array(r<0?0:r);n<r;)a[n]=t(s,s=e[++n]);return a}function o(e,t){return[e,t]}n.r(t),n.d(t,{default:()=>r,pair:()=>o})},"../../node_modules/d3-array/src/permute.js":(e,t,n)=>{function r(e,t){for(var n=t.length,r=new Array(n);n--;)r[n]=e[t[n]];return r}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/quantile.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/number.js");function o(e,t,n){if(null==n&&(n=r.default),o=e.length){if((t=+t)<=0||o<2)return+n(e[0],0,e);if(t>=1)return+n(e[o-1],o-1,e);var o,s=(o-1)*t,a=Math.floor(s),i=+n(e[a],a,e);return i+(+n(e[a+1],a+1,e)-i)*(s-a)}}},"../../node_modules/d3-array/src/range.js":(e,t,n)=>{function r(e,t,n){e=+e,t=+t,n=(o=arguments.length)<2?(t=e,e=0,1):o<3?1:+n;for(var r=-1,o=0|Math.max(0,Math.ceil((t-e)/n)),s=new Array(o);++r<o;)s[r]=e+r*n;return s}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/scan.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/ascending.js");function o(e,t){if(n=e.length){var n,o,s=0,a=0,i=e[a];for(null==t&&(t=r.default);++s<n;)(t(o=e[s],i)<0||0!==t(i,i))&&(i=o,a=s);return 0===t(i,i)?a:void 0}}},"../../node_modules/d3-array/src/shuffle.js":(e,t,n)=>{function r(e,t,n){for(var r,o,s=(null==n?e.length:n)-(t=null==t?0:+t);s;)o=Math.random()*s--|0,r=e[s+t],e[s+t]=e[o+t],e[o+t]=r;return e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/sum.js":(e,t,n)=>{function r(e,t){var n,r=e.length,o=-1,s=0;if(null==t)for(;++o<r;)(n=+e[o])&&(s+=n);else for(;++o<r;)(n=+t(e[o],o,e))&&(s+=n);return s}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/threshold/freedmanDiaconis.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-array/src/array.js"),o=n("../../node_modules/d3-array/src/ascending.js"),s=n("../../node_modules/d3-array/src/number.js"),a=n("../../node_modules/d3-array/src/quantile.js");function i(e,t,n){return e=r.map.call(e,s.default).sort(o.default),Math.ceil((n-t)/(2*((0,a.default)(e,.75)-(0,a.default)(e,.25))*Math.pow(e.length,-1/3)))}},"../../node_modules/d3-array/src/threshold/scott.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/deviation.js");function o(e,t,n){return Math.ceil((n-t)/(3.5*(0,r.default)(e)*Math.pow(e.length,-1/3)))}},"../../node_modules/d3-array/src/threshold/sturges.js":(e,t,n)=>{function r(e){return Math.ceil(Math.log(e.length)/Math.LN2)+1}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-array/src/ticks.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,tickIncrement:()=>i,tickStep:()=>d});var r=Math.sqrt(50),o=Math.sqrt(10),s=Math.sqrt(2);function a(e,t,n){var r,o,s,a,d=-1;if(n=+n,(e=+e)==(t=+t)&&n>0)return[e];if((r=t<e)&&(o=e,e=t,t=o),0===(a=i(e,t,n))||!isFinite(a))return[];if(a>0)for(e=Math.ceil(e/a),t=Math.floor(t/a),s=new Array(o=Math.ceil(t-e+1));++d<o;)s[d]=(e+d)*a;else for(e=Math.floor(e*a),t=Math.ceil(t*a),s=new Array(o=Math.ceil(e-t+1));++d<o;)s[d]=(e-d)/a;return r&&s.reverse(),s}function i(e,t,n){var a=(t-e)/Math.max(0,n),i=Math.floor(Math.log(a)/Math.LN10),d=a/Math.pow(10,i);return i>=0?(d>=r?10:d>=o?5:d>=s?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(d>=r?10:d>=o?5:d>=s?2:1)}function d(e,t,n){var a=Math.abs(t-e)/Math.max(0,n),i=Math.pow(10,Math.floor(Math.log(a)/Math.LN10)),d=a/i;return d>=r?i*=10:d>=o?i*=5:d>=s&&(i*=2),t<e?-i:i}},"../../node_modules/d3-array/src/transpose.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/min.js");function o(e){if(!(a=e.length))return[];for(var t=-1,n=(0,r.default)(e,s),o=new Array(n);++t<n;)for(var a,i=-1,d=o[t]=new Array(a);++i<a;)d[i]=e[i][t];return o}function s(e){return e.length}},"../../node_modules/d3-array/src/variance.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/number.js");function o(e,t){var n,o,s=e.length,a=0,i=-1,d=0,u=0;if(null==t)for(;++i<s;)isNaN(n=(0,r.default)(e[i]))||(u+=(o=n-d)*(n-(d+=o/++a)));else for(;++i<s;)isNaN(n=(0,r.default)(t(e[i],i,e)))||(u+=(o=n-d)*(n-(d+=o/++a)));if(a>1)return u/(a-1)}},"../../node_modules/d3-array/src/zip.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-array/src/transpose.js");function o(){return(0,r.default)(arguments)}},"../../node_modules/d3-axis/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{slice:()=>r});var r=Array.prototype.slice},"../../node_modules/d3-axis/src/axis.js":(e,t,n)=>{n.r(t),n.d(t,{axisBottom:()=>v,axisLeft:()=>y,axisRight:()=>g,axisTop:()=>_});var r=n("../../node_modules/d3-axis/src/array.js"),o=n("../../node_modules/d3-axis/src/identity.js"),s=1,a=2,i=3,d=4,u=1e-6;function c(e){return"translate("+(e+.5)+",0)"}function l(e){return"translate(0,"+(e+.5)+")"}function f(e){return function(t){return+e(t)}}function h(e){var t=Math.max(0,e.bandwidth()-1)/2;return e.round()&&(t=Math.round(t)),function(n){return+e(n)+t}}function m(){return!this.__axis}function p(e,t){var n=[],p=null,_=null,g=6,v=6,y=3,j=e===s||e===d?-1:1,b=e===d||e===a?"x":"y",x=e===s||e===i?c:l;function w(r){var c=null==p?t.ticks?t.ticks.apply(t,n):t.domain():p,l=null==_?t.tickFormat?t.tickFormat.apply(t,n):o.default:_,w=Math.max(g,0)+y,M=t.range(),S=+M[0]+.5,k=+M[M.length-1]+.5,E=(t.bandwidth?h:f)(t.copy()),C=r.selection?r.selection():r,A=C.selectAll(".domain").data([null]),T=C.selectAll(".tick").data(c,t).order(),R=T.exit(),q=T.enter().append("g").attr("class","tick"),N=T.select("line"),P=T.select("text");A=A.merge(A.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),T=T.merge(q),N=N.merge(q.append("line").attr("stroke","currentColor").attr(b+"2",j*g)),P=P.merge(q.append("text").attr("fill","currentColor").attr(b,j*w).attr("dy",e===s?"0em":e===i?"0.71em":"0.32em")),r!==C&&(A=A.transition(r),T=T.transition(r),N=N.transition(r),P=P.transition(r),R=R.transition(r).attr("opacity",u).attr("transform",(function(e){return isFinite(e=E(e))?x(e):this.getAttribute("transform")})),q.attr("opacity",u).attr("transform",(function(e){var t=this.parentNode.__axis;return x(t&&isFinite(t=t(e))?t:E(e))}))),R.remove(),A.attr("d",e===d||e==a?v?"M"+j*v+","+S+"H0.5V"+k+"H"+j*v:"M0.5,"+S+"V"+k:v?"M"+S+","+j*v+"V0.5H"+k+"V"+j*v:"M"+S+",0.5H"+k),T.attr("opacity",1).attr("transform",(function(e){return x(E(e))})),N.attr(b+"2",j*g),P.attr(b,j*w).text(l),C.filter(m).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",e===a?"start":e===d?"end":"middle"),C.each((function(){this.__axis=E}))}return w.scale=function(e){return arguments.length?(t=e,w):t},w.ticks=function(){return n=r.slice.call(arguments),w},w.tickArguments=function(e){return arguments.length?(n=null==e?[]:r.slice.call(e),w):n.slice()},w.tickValues=function(e){return arguments.length?(p=null==e?null:r.slice.call(e),w):p&&p.slice()},w.tickFormat=function(e){return arguments.length?(_=e,w):_},w.tickSize=function(e){return arguments.length?(g=v=+e,w):g},w.tickSizeInner=function(e){return arguments.length?(g=+e,w):g},w.tickSizeOuter=function(e){return arguments.length?(v=+e,w):v},w.tickPadding=function(e){return arguments.length?(y=+e,w):y},w}function _(e){return p(s,e)}function g(e){return p(a,e)}function v(e){return p(i,e)}function y(e){return p(d,e)}},"../../node_modules/d3-axis/src/identity.js":(e,t,n)=>{function r(e){return e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-axis/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{axisBottom:()=>r.axisBottom,axisLeft:()=>r.axisLeft,axisRight:()=>r.axisRight,axisTop:()=>r.axisTop});var r=n("../../node_modules/d3-axis/src/axis.js")},"../../node_modules/d3-brush/src/brush.js":(e,t,n)=>{n.r(t),n.d(t,{brushSelection:()=>N,brushX:()=>P,brushY:()=>B,default:()=>O});var r=n("../../node_modules/d3-dispatch/src/dispatch.js"),o=n("../../node_modules/d3-drag/src/nodrag.js"),s=n("../../node_modules/d3-interpolate/src/value.js"),a=n("../../node_modules/d3-selection/src/touch.js"),i=n("../../node_modules/d3-selection/src/selection/on.js"),d=n("../../node_modules/d3-selection/src/select.js"),u=n("../../node_modules/d3-selection/src/mouse.js"),c=n("../../node_modules/d3-transition/src/index.js"),l=n("../../node_modules/d3-brush/src/constant.js"),f=n("../../node_modules/d3-brush/src/event.js"),h=n("../../node_modules/d3-brush/src/noevent.js"),m={name:"drag"},p={name:"space"},_={name:"handle"},g={name:"center"};function v(e){return[+e[0],+e[1]]}function y(e){return[v(e[0]),v(e[1])]}var j={name:"x",handles:["w","e"].map(C),input:function(e,t){return null==e?null:[[+e[0],t[0][1]],[+e[1],t[1][1]]]},output:function(e){return e&&[e[0][0],e[1][0]]}},b={name:"y",handles:["n","s"].map(C),input:function(e,t){return null==e?null:[[t[0][0],+e[0]],[t[1][0],+e[1]]]},output:function(e){return e&&[e[0][1],e[1][1]]}},x={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(C),input:function(e){return null==e?null:y(e)},output:function(e){return e}},w={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},M={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},S={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},k={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},E={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function C(e){return{type:e}}function A(){return!i.event.ctrlKey&&!i.event.button}function T(){var e=this.ownerSVGElement||this;return e.hasAttribute("viewBox")?[[(e=e.viewBox.baseVal).x,e.y],[e.x+e.width,e.y+e.height]]:[[0,0],[e.width.baseVal.value,e.height.baseVal.value]]}function R(){return navigator.maxTouchPoints||"ontouchstart"in this}function q(e){for(;!e.__brush;)if(!(e=e.parentNode))return;return e.__brush}function N(e){var t=e.__brush;return t?t.dim.output(t.selection):null}function P(){return z(j)}function B(){return z(b)}function O(){return z(x)}function z(e){var t,n=T,v=A,x=R,N=!0,P=(0,r.default)("start","brush","end"),B=6;function O(t){var n=t.property("__brush",G).selectAll(".overlay").data([C("overlay")]);n.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",w.overlay).merge(n).each((function(){var e=q(this).extent;(0,d.default)(this).attr("x",e[0][0]).attr("y",e[0][1]).attr("width",e[1][0]-e[0][0]).attr("height",e[1][1]-e[0][1])})),t.selectAll(".selection").data([C("selection")]).enter().append("rect").attr("class","selection").attr("cursor",w.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=t.selectAll(".handle").data(e.handles,(function(e){return e.type}));r.exit().remove(),r.enter().append("rect").attr("class",(function(e){return"handle handle--"+e.type})).attr("cursor",(function(e){return w[e.type]})),t.each(z).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",L).filter(x).on("touchstart.brush",L).on("touchmove.brush",F).on("touchend.brush touchcancel.brush",Y).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function z(){var e=(0,d.default)(this),t=q(this).selection;t?(e.selectAll(".selection").style("display",null).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1]),e.selectAll(".handle").style("display",null).attr("x",(function(e){return"e"===e.type[e.type.length-1]?t[1][0]-B/2:t[0][0]-B/2})).attr("y",(function(e){return"s"===e.type[0]?t[1][1]-B/2:t[0][1]-B/2})).attr("width",(function(e){return"n"===e.type||"s"===e.type?t[1][0]-t[0][0]+B:B})).attr("height",(function(e){return"e"===e.type||"w"===e.type?t[1][1]-t[0][1]+B:B}))):e.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function D(e,t,n){var r=e.__brush.emitter;return!r||n&&r.clean?new I(e,t,n):r}function I(e,t,n){this.that=e,this.args=t,this.state=e.__brush,this.active=0,this.clean=n}function L(){if((!t||i.event.touches)&&v.apply(this,arguments)){var n,r,s,l,f,y,x,C,A,T,R,P,B=this,O=i.event.target.__data__.type,I="selection"===(N&&i.event.metaKey?O="overlay":O)?m:N&&i.event.altKey?g:_,L=e===b?null:k[O],F=e===j?null:E[O],Y=q(B),G=Y.extent,U=Y.selection,H=G[0][0],V=G[0][1],W=G[1][0],X=G[1][1],Z=0,Q=0,$=L&&F&&N&&i.event.shiftKey,K=i.event.touches?(P=i.event.changedTouches[0].identifier,function(e){return(0,a.default)(e,i.event.touches,P)}):u.default,J=K(B),ee=J,te=D(B,arguments,!0).beforestart();"overlay"===O?(U&&(A=!0),Y.selection=U=[[n=e===b?H:J[0],s=e===j?V:J[1]],[f=e===b?W:n,x=e===j?X:s]]):(n=U[0][0],s=U[0][1],f=U[1][0],x=U[1][1]),r=n,l=s,y=f,C=x;var ne=(0,d.default)(B).attr("pointer-events","none"),re=ne.selectAll(".overlay").attr("cursor",w[O]);if(i.event.touches)te.moved=se,te.ended=ie;else{var oe=(0,d.default)(i.event.view).on("mousemove.brush",se,!0).on("mouseup.brush",ie,!0);N&&oe.on("keydown.brush",(function(){switch(i.event.keyCode){case 16:$=L&&F;break;case 18:I===_&&(L&&(f=y-Z*L,n=r+Z*L),F&&(x=C-Q*F,s=l+Q*F),I=g,ae());break;case 32:I!==_&&I!==g||(L<0?f=y-Z:L>0&&(n=r-Z),F<0?x=C-Q:F>0&&(s=l-Q),I=p,re.attr("cursor",w.selection),ae());break;default:return}(0,h.default)()}),!0).on("keyup.brush",(function(){switch(i.event.keyCode){case 16:$&&(T=R=$=!1,ae());break;case 18:I===g&&(L<0?f=y:L>0&&(n=r),F<0?x=C:F>0&&(s=l),I=_,ae());break;case 32:I===p&&(i.event.altKey?(L&&(f=y-Z*L,n=r+Z*L),F&&(x=C-Q*F,s=l+Q*F),I=g):(L<0?f=y:L>0&&(n=r),F<0?x=C:F>0&&(s=l),I=_),re.attr("cursor",w[O]),ae());break;default:return}(0,h.default)()}),!0),(0,o.default)(i.event.view)}(0,h.nopropagation)(),(0,c.interrupt)(B),z.call(B),te.start()}function se(){var e=K(B);!$||T||R||(Math.abs(e[0]-ee[0])>Math.abs(e[1]-ee[1])?R=!0:T=!0),ee=e,A=!0,(0,h.default)(),ae()}function ae(){var e;switch(Z=ee[0]-J[0],Q=ee[1]-J[1],I){case p:case m:L&&(Z=Math.max(H-n,Math.min(W-f,Z)),r=n+Z,y=f+Z),F&&(Q=Math.max(V-s,Math.min(X-x,Q)),l=s+Q,C=x+Q);break;case _:L<0?(Z=Math.max(H-n,Math.min(W-n,Z)),r=n+Z,y=f):L>0&&(Z=Math.max(H-f,Math.min(W-f,Z)),r=n,y=f+Z),F<0?(Q=Math.max(V-s,Math.min(X-s,Q)),l=s+Q,C=x):F>0&&(Q=Math.max(V-x,Math.min(X-x,Q)),l=s,C=x+Q);break;case g:L&&(r=Math.max(H,Math.min(W,n-Z*L)),y=Math.max(H,Math.min(W,f+Z*L))),F&&(l=Math.max(V,Math.min(X,s-Q*F)),C=Math.max(V,Math.min(X,x+Q*F)))}y<r&&(L*=-1,e=n,n=f,f=e,e=r,r=y,y=e,O in M&&re.attr("cursor",w[O=M[O]])),C<l&&(F*=-1,e=s,s=x,x=e,e=l,l=C,C=e,O in S&&re.attr("cursor",w[O=S[O]])),Y.selection&&(U=Y.selection),T&&(r=U[0][0],y=U[1][0]),R&&(l=U[0][1],C=U[1][1]),U[0][0]===r&&U[0][1]===l&&U[1][0]===y&&U[1][1]===C||(Y.selection=[[r,l],[y,C]],z.call(B),te.brush())}function ie(){if((0,h.nopropagation)(),i.event.touches){if(i.event.touches.length)return;t&&clearTimeout(t),t=setTimeout((function(){t=null}),500)}else(0,o.yesdrag)(i.event.view,A),oe.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);ne.attr("pointer-events","all"),re.attr("cursor",w.overlay),Y.selection&&(U=Y.selection),function(e){return e[0][0]===e[1][0]||e[0][1]===e[1][1]}(U)&&(Y.selection=null,z.call(B)),te.end()}}function F(){D(this,arguments).moved()}function Y(){D(this,arguments).ended()}function G(){var t=this.__brush||{selection:null};return t.extent=y(n.apply(this,arguments)),t.dim=e,t}return O.move=function(t,n){t.selection?t.on("start.brush",(function(){D(this,arguments).beforestart().start()})).on("interrupt.brush end.brush",(function(){D(this,arguments).end()})).tween("brush",(function(){var t=this,r=t.__brush,o=D(t,arguments),a=r.selection,i=e.input("function"==typeof n?n.apply(this,arguments):n,r.extent),d=(0,s.default)(a,i);function u(e){r.selection=1===e&&null===i?null:d(e),z.call(t),o.brush()}return null!==a&&null!==i?u:u(1)})):t.each((function(){var t=this,r=arguments,o=t.__brush,s=e.input("function"==typeof n?n.apply(t,r):n,o.extent),a=D(t,r).beforestart();(0,c.interrupt)(t),o.selection=null===s?null:s,z.call(t),a.start().brush().end()}))},O.clear=function(e){O.move(e,null)},I.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting?(this.starting=!1,this.emit("start")):this.emit("brush"),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){(0,i.customEvent)(new f.default(O,t,e.output(this.state.selection)),P.apply,P,[t,this.that,this.args])}},O.extent=function(e){return arguments.length?(n="function"==typeof e?e:(0,l.default)(y(e)),O):n},O.filter=function(e){return arguments.length?(v="function"==typeof e?e:(0,l.default)(!!e),O):v},O.touchable=function(e){return arguments.length?(x="function"==typeof e?e:(0,l.default)(!!e),O):x},O.handleSize=function(e){return arguments.length?(B=+e,O):B},O.keyModifiers=function(e){return arguments.length?(N=!!e,O):N},O.on=function(){var e=P.on.apply(P,arguments);return e===P?O:e},O}},"../../node_modules/d3-brush/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-brush/src/event.js":(e,t,n)=>{function r(e,t,n){this.target=e,this.type=t,this.selection=n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-brush/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{brush:()=>r.default,brushSelection:()=>r.brushSelection,brushX:()=>r.brushX,brushY:()=>r.brushY});var r=n("../../node_modules/d3-brush/src/brush.js")},"../../node_modules/d3-brush/src/noevent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,nopropagation:()=>o});var r=n("../../node_modules/d3-selection/src/selection/on.js");function o(){r.event.stopImmediatePropagation()}function s(){r.event.preventDefault(),r.event.stopImmediatePropagation()}},"../../node_modules/d3-chord/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{slice:()=>r});var r=Array.prototype.slice},"../../node_modules/d3-chord/src/chord.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-chord/src/math.js");function s(){var e=0,t=null,n=null,s=null;function a(a){var i,d,u,c,l,f,h=a.length,m=[],p=(0,r.range)(h),_=[],g=[],v=g.groups=new Array(h),y=new Array(h*h);for(i=0,l=-1;++l<h;){for(d=0,f=-1;++f<h;)d+=a[l][f];m.push(d),_.push((0,r.range)(h)),i+=d}for(t&&p.sort((function(e,n){return t(m[e],m[n])})),n&&_.forEach((function(e,t){e.sort((function(e,r){return n(a[t][e],a[t][r])}))})),c=(i=(0,o.max)(0,o.tau-e*h)/i)?e:o.tau/h,d=0,l=-1;++l<h;){for(u=d,f=-1;++f<h;){var j=p[l],b=_[j][f],x=a[j][b],w=d,M=d+=x*i;y[b*h+j]={index:j,subindex:b,startAngle:w,endAngle:M,value:x}}v[j]={index:j,startAngle:u,endAngle:d,value:m[j]},d+=c}for(l=-1;++l<h;)for(f=l-1;++f<h;){var S=y[f*h+l],k=y[l*h+f];(S.value||k.value)&&g.push(S.value<k.value?{source:k,target:S}:{source:S,target:k})}return s?g.sort(s):g}return a.padAngle=function(t){return arguments.length?(e=(0,o.max)(0,t),a):e},a.sortGroups=function(e){return arguments.length?(t=e,a):t},a.sortSubgroups=function(e){return arguments.length?(n=e,a):n},a.sortChords=function(e){return arguments.length?(null==e?s=null:(t=e,s=function(e,n){return t(e.source.value+e.target.value,n.source.value+n.target.value)})._=e,a):s&&s._;var t},a}},"../../node_modules/d3-chord/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-chord/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{chord:()=>r.default,ribbon:()=>o.default});var r=n("../../node_modules/d3-chord/src/chord.js"),o=n("../../node_modules/d3-chord/src/ribbon.js")},"../../node_modules/d3-chord/src/math.js":(e,t,n)=>{n.r(t),n.d(t,{cos:()=>r,halfPi:()=>a,max:()=>d,pi:()=>s,sin:()=>o,tau:()=>i});var r=Math.cos,o=Math.sin,s=Math.PI,a=s/2,i=2*s,d=Math.max},"../../node_modules/d3-chord/src/ribbon.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n("../../node_modules/d3-chord/src/array.js"),o=n("../../node_modules/d3-chord/src/constant.js"),s=n("../../node_modules/d3-chord/src/math.js"),a=n("../../node_modules/d3-path/src/path.js");function i(e){return e.source}function d(e){return e.target}function u(e){return e.radius}function c(e){return e.startAngle}function l(e){return e.endAngle}function f(){var e=i,t=d,n=u,f=c,h=l,m=null;function p(){var o,i=r.slice.call(arguments),d=e.apply(this,i),u=t.apply(this,i),c=+n.apply(this,(i[0]=d,i)),l=f.apply(this,i)-s.halfPi,p=h.apply(this,i)-s.halfPi,_=c*(0,s.cos)(l),g=c*(0,s.sin)(l),v=+n.apply(this,(i[0]=u,i)),y=f.apply(this,i)-s.halfPi,j=h.apply(this,i)-s.halfPi;if(m||(m=o=(0,a.default)()),m.moveTo(_,g),m.arc(0,0,c,l,p),l===y&&p===j||(m.quadraticCurveTo(0,0,v*(0,s.cos)(y),v*(0,s.sin)(y)),m.arc(0,0,v,y,j)),m.quadraticCurveTo(0,0,_,g),m.closePath(),o)return m=null,o+""||null}return p.radius=function(e){return arguments.length?(n="function"==typeof e?e:(0,o.default)(+e),p):n},p.startAngle=function(e){return arguments.length?(f="function"==typeof e?e:(0,o.default)(+e),p):f},p.endAngle=function(e){return arguments.length?(h="function"==typeof e?e:(0,o.default)(+e),p):h},p.source=function(t){return arguments.length?(e=t,p):e},p.target=function(e){return arguments.length?(t=e,p):t},p.context=function(e){return arguments.length?(m=null==e?null:e,p):m},p}},"../../node_modules/d3-collection/src/entries.js":(e,t,n)=>{function r(e){var t=[];for(var n in e)t.push({key:n,value:e[n]});return t}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-collection/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{entries:()=>d.default,keys:()=>a.default,map:()=>s.default,nest:()=>r.default,set:()=>o.default,values:()=>i.default});var r=n("../../node_modules/d3-collection/src/nest.js"),o=n("../../node_modules/d3-collection/src/set.js"),s=n("../../node_modules/d3-collection/src/map.js"),a=n("../../node_modules/d3-collection/src/keys.js"),i=n("../../node_modules/d3-collection/src/values.js"),d=n("../../node_modules/d3-collection/src/entries.js")},"../../node_modules/d3-collection/src/keys.js":(e,t,n)=>{function r(e){var t=[];for(var n in e)t.push(n);return t}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-collection/src/map.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,prefix:()=>r});var r="$";function o(){}function s(e,t){var n=new o;if(e instanceof o)e.each((function(e,t){n.set(t,e)}));else if(Array.isArray(e)){var r,s=-1,a=e.length;if(null==t)for(;++s<a;)n.set(s,e[s]);else for(;++s<a;)n.set(t(r=e[s],s,e),r)}else if(e)for(var i in e)n.set(i,e[i]);return n}o.prototype=s.prototype={constructor:o,has:function(e){return r+e in this},get:function(e){return this[r+e]},set:function(e,t){return this[r+e]=t,this},remove:function(e){var t=r+e;return t in this&&delete this[t]},clear:function(){for(var e in this)e[0]===r&&delete this[e]},keys:function(){var e=[];for(var t in this)t[0]===r&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)t[0]===r&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)t[0]===r&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)t[0]===r&&++e;return e},empty:function(){for(var e in this)if(e[0]===r)return!1;return!0},each:function(e){for(var t in this)t[0]===r&&e(this[t],t.slice(1),this)}};const a=s},"../../node_modules/d3-collection/src/nest.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-collection/src/map.js");function o(){var e,t,n,o=[],u=[];function c(n,s,a,i){if(s>=o.length)return null!=e&&n.sort(e),null!=t?t(n):n;for(var d,u,l,f=-1,h=n.length,m=o[s++],p=(0,r.default)(),_=a();++f<h;)(l=p.get(d=m(u=n[f])+""))?l.push(u):p.set(d,[u]);return p.each((function(e,t){i(_,t,c(e,s,a,i))})),_}function l(e,n){if(++n>o.length)return e;var r,s=u[n-1];return null!=t&&n>=o.length?r=e.entries():(r=[],e.each((function(e,t){r.push({key:t,values:l(e,n)})}))),null!=s?r.sort((function(e,t){return s(e.key,t.key)})):r}return n={object:function(e){return c(e,0,s,a)},map:function(e){return c(e,0,i,d)},entries:function(e){return l(c(e,0,i,d),0)},key:function(e){return o.push(e),n},sortKeys:function(e){return u[o.length-1]=e,n},sortValues:function(t){return e=t,n},rollup:function(e){return t=e,n}}}function s(){return{}}function a(e,t,n){e[t]=n}function i(){return(0,r.default)()}function d(e,t,n){e.set(t,n)}},"../../node_modules/d3-collection/src/set.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-collection/src/map.js");function o(){}var s=r.default.prototype;function a(e,t){var n=new o;if(e instanceof o)e.each((function(e){n.add(e)}));else if(e){var r=-1,s=e.length;if(null==t)for(;++r<s;)n.add(e[r]);else for(;++r<s;)n.add(t(e[r],r,e))}return n}o.prototype=a.prototype={constructor:o,has:s.has,add:function(e){return e+="",this[r.prefix+e]=e,this},remove:s.remove,clear:s.clear,values:s.keys,size:s.size,empty:s.empty,each:s.each};const i=a},"../../node_modules/d3-collection/src/values.js":(e,t,n)=>{function r(e){var t=[];for(var n in e)t.push(e[n]);return t}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-color/src/color.js":(e,t,n)=>{n.r(t),n.d(t,{Color:()=>o,Rgb:()=>S,brighter:()=>a,darker:()=>s,default:()=>j,hsl:()=>R,hslConvert:()=>T,rgb:()=>M,rgbConvert:()=>w});var r=n("../../node_modules/d3-color/src/define.js");function o(){}var s=.7,a=1/s,i="\\s*([+-]?\\d+)\\s*",d="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",u="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",c=/^#([0-9a-f]{3,8})$/,l=new RegExp("^rgb\\("+[i,i,i]+"\\)$"),f=new RegExp("^rgb\\("+[u,u,u]+"\\)$"),h=new RegExp("^rgba\\("+[i,i,i,d]+"\\)$"),m=new RegExp("^rgba\\("+[u,u,u,d]+"\\)$"),p=new RegExp("^hsl\\("+[d,u,u]+"\\)$"),_=new RegExp("^hsla\\("+[d,u,u,d]+"\\)$"),g={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function v(){return this.rgb().formatHex()}function y(){return this.rgb().formatRgb()}function j(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=c.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?b(t):3===n?new S(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?x(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?x(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=l.exec(e))?new S(t[1],t[2],t[3],1):(t=f.exec(e))?new S(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=h.exec(e))?x(t[1],t[2],t[3],t[4]):(t=m.exec(e))?x(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=p.exec(e))?A(t[1],t[2]/100,t[3]/100,1):(t=_.exec(e))?A(t[1],t[2]/100,t[3]/100,t[4]):g.hasOwnProperty(e)?b(g[e]):"transparent"===e?new S(NaN,NaN,NaN,0):null}function b(e){return new S(e>>16&255,e>>8&255,255&e,1)}function x(e,t,n,r){return r<=0&&(e=t=n=NaN),new S(e,t,n,r)}function w(e){return e instanceof o||(e=j(e)),e?new S((e=e.rgb()).r,e.g,e.b,e.opacity):new S}function M(e,t,n,r){return 1===arguments.length?w(e):new S(e,t,n,null==r?1:r)}function S(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function k(){return"#"+C(this.r)+C(this.g)+C(this.b)}function E(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function C(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function A(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new q(e,t,n,r)}function T(e){if(e instanceof q)return new q(e.h,e.s,e.l,e.opacity);if(e instanceof o||(e=j(e)),!e)return new q;if(e instanceof q)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,s=Math.min(t,n,r),a=Math.max(t,n,r),i=NaN,d=a-s,u=(a+s)/2;return d?(i=t===a?(n-r)/d+6*(n<r):n===a?(r-t)/d+2:(t-n)/d+4,d/=u<.5?a+s:2-a-s,i*=60):d=u>0&&u<1?0:i,new q(i,d,u,e.opacity)}function R(e,t,n,r){return 1===arguments.length?T(e):new q(e,t,n,null==r?1:r)}function q(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function N(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}(0,r.default)(o,j,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:v,formatHex:v,formatHsl:function(){return T(this).formatHsl()},formatRgb:y,toString:y}),(0,r.default)(S,M,(0,r.extend)(o,{brighter:function(e){return e=null==e?a:Math.pow(a,e),new S(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?s:Math.pow(s,e),new S(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:k,formatHex:k,formatRgb:E,toString:E})),(0,r.default)(q,R,(0,r.extend)(o,{brighter:function(e){return e=null==e?a:Math.pow(a,e),new q(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?s:Math.pow(s,e),new q(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,o=2*n-r;return new S(N(e>=240?e-240:e+120,o,r),N(e,o,r),N(e<120?e+240:e-120,o,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}))},"../../node_modules/d3-color/src/cubehelix.js":(e,t,n)=>{n.r(t),n.d(t,{Cubehelix:()=>p,default:()=>m});var r=n("../../node_modules/d3-color/src/define.js"),o=n("../../node_modules/d3-color/src/color.js"),s=n("../../node_modules/d3-color/src/math.js"),a=-.14861,i=1.78277,d=-.29227,u=-.90649,c=1.97294,l=c*u,f=c*i,h=i*d-u*a;function m(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof p)return new p(e.h,e.s,e.l,e.opacity);e instanceof o.Rgb||(e=(0,o.rgbConvert)(e));var t=e.r/255,n=e.g/255,r=e.b/255,a=(h*r+l*t-f*n)/(h+l-f),i=r-a,m=(c*(n-a)-d*i)/u,_=Math.sqrt(m*m+i*i)/(c*a*(1-a)),g=_?Math.atan2(m,i)*s.rad2deg-120:NaN;return new p(g<0?g+360:g,_,a,e.opacity)}(e):new p(e,t,n,null==r?1:r)}function p(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}(0,r.default)(p,m,(0,r.extend)(o.Color,{brighter:function(e){return e=null==e?o.brighter:Math.pow(o.brighter,e),new p(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?o.darker:Math.pow(o.darker,e),new p(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*s.deg2rad,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(e),l=Math.sin(e);return new o.Rgb(255*(t+n*(a*r+i*l)),255*(t+n*(d*r+u*l)),255*(t+n*(c*r)),this.opacity)}}))},"../../node_modules/d3-color/src/define.js":(e,t,n)=>{function r(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function o(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}n.r(t),n.d(t,{default:()=>r,extend:()=>o})},"../../node_modules/d3-color/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{color:()=>r.default,cubehelix:()=>s.default,gray:()=>o.gray,hcl:()=>o.hcl,hsl:()=>r.hsl,lab:()=>o.default,lch:()=>o.lch,rgb:()=>r.rgb});var r=n("../../node_modules/d3-color/src/color.js"),o=n("../../node_modules/d3-color/src/lab.js"),s=n("../../node_modules/d3-color/src/cubehelix.js")},"../../node_modules/d3-color/src/lab.js":(e,t,n)=>{n.r(t),n.d(t,{Hcl:()=>M,Lab:()=>_,default:()=>p,gray:()=>m,hcl:()=>w,lch:()=>x});var r=n("../../node_modules/d3-color/src/define.js"),o=n("../../node_modules/d3-color/src/color.js"),s=n("../../node_modules/d3-color/src/math.js"),a=.96422,i=1,d=.82521,u=4/29,c=6/29,l=3*c*c,f=c*c*c;function h(e){if(e instanceof _)return new _(e.l,e.a,e.b,e.opacity);if(e instanceof M)return S(e);e instanceof o.Rgb||(e=(0,o.rgbConvert)(e));var t,n,r=j(e.r),s=j(e.g),u=j(e.b),c=g((.2225045*r+.7168786*s+.0606169*u)/i);return r===s&&s===u?t=n=c:(t=g((.4360747*r+.3850649*s+.1430804*u)/a),n=g((.0139322*r+.0971045*s+.7141733*u)/d)),new _(116*c-16,500*(t-c),200*(c-n),e.opacity)}function m(e,t){return new _(e,0,0,null==t?1:t)}function p(e,t,n,r){return 1===arguments.length?h(e):new _(e,t,n,null==r?1:r)}function _(e,t,n,r){this.l=+e,this.a=+t,this.b=+n,this.opacity=+r}function g(e){return e>f?Math.pow(e,1/3):e/l+u}function v(e){return e>c?e*e*e:l*(e-u)}function y(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function j(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function b(e){if(e instanceof M)return new M(e.h,e.c,e.l,e.opacity);if(e instanceof _||(e=h(e)),0===e.a&&0===e.b)return new M(NaN,0<e.l&&e.l<100?0:NaN,e.l,e.opacity);var t=Math.atan2(e.b,e.a)*s.rad2deg;return new M(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function x(e,t,n,r){return 1===arguments.length?b(e):new M(n,t,e,null==r?1:r)}function w(e,t,n,r){return 1===arguments.length?b(e):new M(e,t,n,null==r?1:r)}function M(e,t,n,r){this.h=+e,this.c=+t,this.l=+n,this.opacity=+r}function S(e){if(isNaN(e.h))return new _(e.l,0,0,e.opacity);var t=e.h*s.deg2rad;return new _(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}(0,r.default)(_,p,(0,r.extend)(o.Color,{brighter:function(e){return new _(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new _(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return t=a*v(t),e=i*v(e),n=d*v(n),new o.Rgb(y(3.1338561*t-1.6168667*e-.4906146*n),y(-.9787684*t+1.9161415*e+.033454*n),y(.0719453*t-.2289914*e+1.4052427*n),this.opacity)}})),(0,r.default)(M,w,(0,r.extend)(o.Color,{brighter:function(e){return new M(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new M(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return S(this).rgb()}}))},"../../node_modules/d3-color/src/math.js":(e,t,n)=>{n.r(t),n.d(t,{deg2rad:()=>r,rad2deg:()=>o});var r=Math.PI/180,o=180/Math.PI},"../../node_modules/d3-contour/src/area.js":(e,t,n)=>{function r(e){for(var t=0,n=e.length,r=e[n-1][1]*e[0][0]-e[n-1][0]*e[0][1];++t<n;)r+=e[t-1][1]*e[t][0]-e[t-1][0]*e[t][1];return r}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-contour/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{slice:()=>r});var r=Array.prototype.slice},"../../node_modules/d3-contour/src/ascending.js":(e,t,n)=>{function r(e,t){return e-t}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-contour/src/blur.js":(e,t,n)=>{function r(e,t,n){for(var r=e.width,o=e.height,s=1+(n<<1),a=0;a<o;++a)for(var i=0,d=0;i<r+n;++i)i<r&&(d+=e.data[i+a*r]),i>=n&&(i>=s&&(d-=e.data[i-s+a*r]),t.data[i-n+a*r]=d/Math.min(i+1,r-1+s-i,s))}function o(e,t,n){for(var r=e.width,o=e.height,s=1+(n<<1),a=0;a<r;++a)for(var i=0,d=0;i<o+n;++i)i<o&&(d+=e.data[a+i*r]),i>=n&&(i>=s&&(d-=e.data[a+(i-s)*r]),t.data[a+(i-n)*r]=d/Math.min(i+1,o-1+s-i,s))}n.r(t),n.d(t,{blurX:()=>r,blurY:()=>o})},"../../node_modules/d3-contour/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-contour/src/contains.js":(e,t,n)=>{function r(e,t){for(var n,r=-1,s=t.length;++r<s;)if(n=o(e,t[r]))return n;return 0}function o(e,t){for(var n=t[0],r=t[1],o=-1,a=0,i=e.length,d=i-1;a<i;d=a++){var u=e[a],c=u[0],l=u[1],f=e[d],h=f[0],m=f[1];if(s(u,f,t))return 0;l>r!=m>r&&n<(h-c)*(r-l)/(m-l)+c&&(o=-o)}return o}function s(e,t,n){var r,o,s,a;return function(e,t,n){return(t[0]-e[0])*(n[1]-e[1])==(n[0]-e[0])*(t[1]-e[1])}(e,t,n)&&(o=e[r=+(e[0]===t[0])],s=n[r],a=t[r],o<=s&&s<=a||a<=s&&s<=o)}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-contour/src/contours.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-contour/src/array.js"),s=n("../../node_modules/d3-contour/src/ascending.js"),a=n("../../node_modules/d3-contour/src/area.js"),i=n("../../node_modules/d3-contour/src/constant.js"),d=n("../../node_modules/d3-contour/src/contains.js"),u=n("../../node_modules/d3-contour/src/noop.js"),c=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function l(){var e=1,t=1,n=r.thresholdSturges,l=p;function f(e){var t=n(e);if(Array.isArray(t))t=t.slice().sort(s.default);else{var o=(0,r.extent)(e),a=o[0],i=o[1];t=(0,r.tickStep)(a,i,t),t=(0,r.range)(Math.floor(a/t)*t,Math.floor(i/t)*t,t)}return t.map((function(t){return h(e,t)}))}function h(n,r){var o=[],s=[];return function(n,r,o){var s,a,i,d,u,l,f=new Array,h=new Array;for(s=a=-1,d=n[0]>=r,c[d<<1].forEach(p);++s<e-1;)i=d,d=n[s+1]>=r,c[i|d<<1].forEach(p);for(c[d<<0].forEach(p);++a<t-1;){for(s=-1,d=n[a*e+e]>=r,u=n[a*e]>=r,c[d<<1|u<<2].forEach(p);++s<e-1;)i=d,d=n[a*e+e+s+1]>=r,l=u,u=n[a*e+s+1]>=r,c[i|d<<1|u<<2|l<<3].forEach(p);c[d|u<<3].forEach(p)}for(s=-1,u=n[a*e]>=r,c[u<<2].forEach(p);++s<e-1;)l=u,u=n[a*e+s+1]>=r,c[u<<2|l<<3].forEach(p);function p(e){var t,n,r=[e[0][0]+s,e[0][1]+a],i=[e[1][0]+s,e[1][1]+a],d=m(r),u=m(i);(t=h[d])?(n=f[u])?(delete h[t.end],delete f[n.start],t===n?(t.ring.push(i),o(t.ring)):f[t.start]=h[n.end]={start:t.start,end:n.end,ring:t.ring.concat(n.ring)}):(delete h[t.end],t.ring.push(i),h[t.end=u]=t):(t=f[u])?(n=h[d])?(delete f[t.start],delete h[n.end],t===n?(t.ring.push(i),o(t.ring)):f[n.start]=h[t.end]={start:n.start,end:t.end,ring:n.ring.concat(t.ring)}):(delete f[t.start],t.ring.unshift(r),f[t.start=d]=t):f[d]=h[u]={start:d,end:u,ring:[r,i]}}c[u<<3].forEach(p)}(n,r,(function(e){l(e,n,r),(0,a.default)(e)>0?o.push([e]):s.push(e)})),s.forEach((function(e){for(var t,n=0,r=o.length;n<r;++n)if(-1!==(0,d.default)((t=o[n])[0],e))return void t.push(e)})),{type:"MultiPolygon",value:r,coordinates:o}}function m(t){return 2*t[0]+t[1]*(e+1)*4}function p(n,r,o){n.forEach((function(n){var s,a=n[0],i=n[1],d=0|a,u=0|i,c=r[u*e+d];a>0&&a<e&&d===a&&(s=r[u*e+d-1],n[0]=a+(o-s)/(c-s)-.5),i>0&&i<t&&u===i&&(s=r[(u-1)*e+d],n[1]=i+(o-s)/(c-s)-.5)}))}return f.contour=h,f.size=function(n){if(!arguments.length)return[e,t];var r=Math.ceil(n[0]),o=Math.ceil(n[1]);if(!(r>0&&o>0))throw new Error("invalid size");return e=r,t=o,f},f.thresholds=function(e){return arguments.length?(n="function"==typeof e?e:Array.isArray(e)?(0,i.default)(o.slice.call(e)):(0,i.default)(e),f):n},f.smooth=function(e){return arguments.length?(l=e?p:u.default,f):l===p},f}},"../../node_modules/d3-contour/src/density.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-contour/src/array.js"),s=n("../../node_modules/d3-contour/src/blur.js"),a=n("../../node_modules/d3-contour/src/constant.js"),i=n("../../node_modules/d3-contour/src/contours.js");function d(e){return e[0]}function u(e){return e[1]}function c(){return 1}function l(){var e=d,t=u,n=c,l=960,f=500,h=20,m=2,p=3*h,_=l+2*p>>m,g=f+2*p>>m,v=(0,a.default)(20);function y(o){var a=new Float32Array(_*g),d=new Float32Array(_*g);o.forEach((function(r,o,s){var i=+e(r,o,s)+p>>m,d=+t(r,o,s)+p>>m,u=+n(r,o,s);i>=0&&i<_&&d>=0&&d<g&&(a[i+d*_]+=u)})),(0,s.blurX)({width:_,height:g,data:a},{width:_,height:g,data:d},h>>m),(0,s.blurY)({width:_,height:g,data:d},{width:_,height:g,data:a},h>>m),(0,s.blurX)({width:_,height:g,data:a},{width:_,height:g,data:d},h>>m),(0,s.blurY)({width:_,height:g,data:d},{width:_,height:g,data:a},h>>m),(0,s.blurX)({width:_,height:g,data:a},{width:_,height:g,data:d},h>>m),(0,s.blurY)({width:_,height:g,data:d},{width:_,height:g,data:a},h>>m);var u=v(a);if(!Array.isArray(u)){var c=(0,r.max)(a);u=(0,r.tickStep)(0,c,u),(u=(0,r.range)(0,Math.floor(c/u)*u,u)).shift()}return(0,i.default)().thresholds(u).size([_,g])(a).map(j)}function j(e){return e.value*=Math.pow(2,-2*m),e.coordinates.forEach(b),e}function b(e){e.forEach(x)}function x(e){e.forEach(w)}function w(e){e[0]=e[0]*Math.pow(2,m)-p,e[1]=e[1]*Math.pow(2,m)-p}function M(){return _=l+2*(p=3*h)>>m,g=f+2*p>>m,y}return y.x=function(t){return arguments.length?(e="function"==typeof t?t:(0,a.default)(+t),y):e},y.y=function(e){return arguments.length?(t="function"==typeof e?e:(0,a.default)(+e),y):t},y.weight=function(e){return arguments.length?(n="function"==typeof e?e:(0,a.default)(+e),y):n},y.size=function(e){if(!arguments.length)return[l,f];var t=Math.ceil(e[0]),n=Math.ceil(e[1]);if(!(t>=0||t>=0))throw new Error("invalid size");return l=t,f=n,M()},y.cellSize=function(e){if(!arguments.length)return 1<<m;if(!((e=+e)>=1))throw new Error("invalid cell size");return m=Math.floor(Math.log(e)/Math.LN2),M()},y.thresholds=function(e){return arguments.length?(v="function"==typeof e?e:Array.isArray(e)?(0,a.default)(o.slice.call(e)):(0,a.default)(e),y):v},y.bandwidth=function(e){if(!arguments.length)return Math.sqrt(h*(h+1));if(!((e=+e)>=0))throw new Error("invalid bandwidth");return h=Math.round((Math.sqrt(4*e*e+1)-1)/2),M()},y}},"../../node_modules/d3-contour/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{contourDensity:()=>o.default,contours:()=>r.default});var r=n("../../node_modules/d3-contour/src/contours.js"),o=n("../../node_modules/d3-contour/src/density.js")},"../../node_modules/d3-contour/src/noop.js":(e,t,n)=>{function r(){}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-dispatch/src/dispatch.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r={value:function(){}};function o(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r||/[\s.]/.test(e))throw new Error("illegal type: "+e);r[e]=[]}return new s(r)}function s(e){this._=e}function a(e,t){for(var n,r=0,o=e.length;r<o;++r)if((n=e[r]).name===t)return n.value}function i(e,t,n){for(var o=0,s=e.length;o<s;++o)if(e[o].name===t){e[o]=r,e=e.slice(0,o).concat(e.slice(o+1));break}return null!=n&&e.push({name:t,value:n}),e}s.prototype=o.prototype={constructor:s,on:function(e,t){var n,r,o=this._,s=(r=o,(e+"").trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!r.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}}))),d=-1,u=s.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++d<u;)if(n=(e=s[d]).type)o[n]=i(o[n],e.name,t);else if(null==t)for(n in o)o[n]=i(o[n],e.name,null);return this}for(;++d<u;)if((n=(e=s[d]).type)&&(n=a(o[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new s(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,o=new Array(n),s=0;s<n;++s)o[s]=arguments[s+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(s=0,n=(r=this._[e]).length;s<n;++s)r[s].value.apply(t,o)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],o=0,s=r.length;o<s;++o)r[o].value.apply(t,n)}};const d=o},"../../node_modules/d3-dispatch/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{dispatch:()=>r.default});var r=n("../../node_modules/d3-dispatch/src/dispatch.js")},"../../node_modules/d3-drag/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-drag/src/drag.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>_});var r=n("../../node_modules/d3-dispatch/src/dispatch.js"),o=n("../../node_modules/d3-selection/src/selection/on.js"),s=n("../../node_modules/d3-selection/src/mouse.js"),a=n("../../node_modules/d3-selection/src/select.js"),i=n("../../node_modules/d3-selection/src/touch.js"),d=n("../../node_modules/d3-drag/src/nodrag.js"),u=n("../../node_modules/d3-drag/src/noevent.js"),c=n("../../node_modules/d3-drag/src/constant.js"),l=n("../../node_modules/d3-drag/src/event.js");function f(){return!o.event.ctrlKey&&!o.event.button}function h(){return this.parentNode}function m(e){return null==e?{x:o.event.x,y:o.event.y}:e}function p(){return navigator.maxTouchPoints||"ontouchstart"in this}function _(){var e,t,n,_,g=f,v=h,y=m,j=p,b={},x=(0,r.default)("start","drag","end"),w=0,M=0;function S(e){e.on("mousedown.drag",k).filter(j).on("touchstart.drag",A).on("touchmove.drag",T).on("touchend.drag touchcancel.drag",R).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function k(){if(!_&&g.apply(this,arguments)){var r=q("mouse",v.apply(this,arguments),s.default,this,arguments);r&&((0,a.default)(o.event.view).on("mousemove.drag",E,!0).on("mouseup.drag",C,!0),(0,d.default)(o.event.view),(0,u.nopropagation)(),n=!1,e=o.event.clientX,t=o.event.clientY,r("start"))}}function E(){if((0,u.default)(),!n){var r=o.event.clientX-e,s=o.event.clientY-t;n=r*r+s*s>M}b.mouse("drag")}function C(){(0,a.default)(o.event.view).on("mousemove.drag mouseup.drag",null),(0,d.yesdrag)(o.event.view,n),(0,u.default)(),b.mouse("end")}function A(){if(g.apply(this,arguments)){var e,t,n=o.event.changedTouches,r=v.apply(this,arguments),s=n.length;for(e=0;e<s;++e)(t=q(n[e].identifier,r,i.default,this,arguments))&&((0,u.nopropagation)(),t("start"))}}function T(){var e,t,n=o.event.changedTouches,r=n.length;for(e=0;e<r;++e)(t=b[n[e].identifier])&&((0,u.default)(),t("drag"))}function R(){var e,t,n=o.event.changedTouches,r=n.length;for(_&&clearTimeout(_),_=setTimeout((function(){_=null}),500),e=0;e<r;++e)(t=b[n[e].identifier])&&((0,u.nopropagation)(),t("end"))}function q(e,t,n,r,s){var a,i,d,u=n(t,e),c=x.copy();if((0,o.customEvent)(new l.default(S,"beforestart",a,e,w,u[0],u[1],0,0,c),(function(){return null!=(o.event.subject=a=y.apply(r,s))&&(i=a.x-u[0]||0,d=a.y-u[1]||0,!0)})))return function f(h){var m,p=u;switch(h){case"start":b[e]=f,m=w++;break;case"end":delete b[e],--w;case"drag":u=n(t,e),m=w}(0,o.customEvent)(new l.default(S,h,a,e,m,u[0]+i,u[1]+d,u[0]-p[0],u[1]-p[1],c),c.apply,c,[h,r,s])}}return S.filter=function(e){return arguments.length?(g="function"==typeof e?e:(0,c.default)(!!e),S):g},S.container=function(e){return arguments.length?(v="function"==typeof e?e:(0,c.default)(e),S):v},S.subject=function(e){return arguments.length?(y="function"==typeof e?e:(0,c.default)(e),S):y},S.touchable=function(e){return arguments.length?(j="function"==typeof e?e:(0,c.default)(!!e),S):j},S.on=function(){var e=x.on.apply(x,arguments);return e===x?S:e},S.clickDistance=function(e){return arguments.length?(M=(e=+e)*e,S):Math.sqrt(M)},S}},"../../node_modules/d3-drag/src/event.js":(e,t,n)=>{function r(e,t,n,r,o,s,a,i,d,u){this.target=e,this.type=t,this.subject=n,this.identifier=r,this.active=o,this.x=s,this.y=a,this.dx=i,this.dy=d,this._=u}n.r(t),n.d(t,{default:()=>r}),r.prototype.on=function(){var e=this._.on.apply(this._,arguments);return e===this._?this:e}},"../../node_modules/d3-drag/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{drag:()=>r.default,dragDisable:()=>o.default,dragEnable:()=>o.yesdrag});var r=n("../../node_modules/d3-drag/src/drag.js"),o=n("../../node_modules/d3-drag/src/nodrag.js")},"../../node_modules/d3-drag/src/nodrag.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,yesdrag:()=>a});var r=n("../../node_modules/d3-selection/src/select.js"),o=n("../../node_modules/d3-drag/src/noevent.js");function s(e){var t=e.document.documentElement,n=(0,r.default)(e).on("dragstart.drag",o.default,!0);"onselectstart"in t?n.on("selectstart.drag",o.default,!0):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect="none")}function a(e,t){var n=e.document.documentElement,s=(0,r.default)(e).on("dragstart.drag",null);t&&(s.on("click.drag",o.default,!0),setTimeout((function(){s.on("click.drag",null)}),0)),"onselectstart"in n?s.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}},"../../node_modules/d3-drag/src/noevent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,nopropagation:()=>o});var r=n("../../node_modules/d3-selection/src/selection/on.js");function o(){r.event.stopImmediatePropagation()}function s(){r.event.preventDefault(),r.event.stopImmediatePropagation()}},"../../node_modules/d3-dsv/src/autoType.js":(e,t,n)=>{function r(e){for(var t in e){var n,r,s=e[t].trim();if(s)if("true"===s)s=!0;else if("false"===s)s=!1;else if("NaN"===s)s=NaN;else if(isNaN(n=+s)){if(!(r=s.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;o&&r[4]&&!r[7]&&(s=s.replace(/-/g,"/").replace(/T/," ")),s=new Date(s)}else s=n;else s=null;e[t]=s}return e}n.r(t),n.d(t,{default:()=>r});var o=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours()},"../../node_modules/d3-dsv/src/csv.js":(e,t,n)=>{n.r(t),n.d(t,{csvFormat:()=>a,csvFormatBody:()=>i,csvFormatRow:()=>u,csvFormatRows:()=>d,csvFormatValue:()=>c,csvParse:()=>o,csvParseRows:()=>s});var r=(0,n("../../node_modules/d3-dsv/src/dsv.js").default)(","),o=r.parse,s=r.parseRows,a=r.format,i=r.formatBody,d=r.formatRows,u=r.formatRow,c=r.formatValue},"../../node_modules/d3-dsv/src/dsv.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r={},o={},s=34,a=10,i=13;function d(e){return new Function("d","return {"+e.map((function(e,t){return JSON.stringify(e)+": d["+t+'] || ""'})).join(",")+"}")}function u(e){var t=Object.create(null),n=[];return e.forEach((function(e){for(var r in e)r in t||n.push(t[r]=r)})),n}function c(e,t){var n=e+"",r=n.length;return r<t?new Array(t-r+1).join(0)+n:n}function l(e){var t=new RegExp('["'+e+"\n\r]"),n=e.charCodeAt(0);function l(e,t){var d,u=[],c=e.length,l=0,f=0,h=c<=0,m=!1;function p(){if(h)return o;if(m)return m=!1,r;var t,d,u=l;if(e.charCodeAt(u)===s){for(;l++<c&&e.charCodeAt(l)!==s||e.charCodeAt(++l)===s;);return(t=l)>=c?h=!0:(d=e.charCodeAt(l++))===a?m=!0:d===i&&(m=!0,e.charCodeAt(l)===a&&++l),e.slice(u+1,t-1).replace(/""/g,'"')}for(;l<c;){if((d=e.charCodeAt(t=l++))===a)m=!0;else if(d===i)m=!0,e.charCodeAt(l)===a&&++l;else if(d!==n)continue;return e.slice(u,t)}return h=!0,e.slice(u,c)}for(e.charCodeAt(c-1)===a&&--c,e.charCodeAt(c-1)===i&&--c;(d=p())!==o;){for(var _=[];d!==r&&d!==o;)_.push(d),d=p();t&&null==(_=t(_,f++))||u.push(_)}return u}function f(t,n){return t.map((function(t){return n.map((function(e){return m(t[e])})).join(e)}))}function h(t){return t.map(m).join(e)}function m(e){return null==e?"":e instanceof Date?(o=(n=e).getUTCHours(),s=n.getUTCMinutes(),a=n.getUTCSeconds(),i=n.getUTCMilliseconds(),isNaN(n)?"Invalid Date":((r=n.getUTCFullYear())<0?"-"+c(-r,6):r>9999?"+"+c(r,6):c(r,4))+"-"+c(n.getUTCMonth()+1,2)+"-"+c(n.getUTCDate(),2)+(i?"T"+c(o,2)+":"+c(s,2)+":"+c(a,2)+"."+c(i,3)+"Z":a?"T"+c(o,2)+":"+c(s,2)+":"+c(a,2)+"Z":s||o?"T"+c(o,2)+":"+c(s,2)+"Z":"")):t.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e;var n,r,o,s,a,i}return{parse:function(e,t){var n,r,o=l(e,(function(e,o){if(n)return n(e,o-1);r=e,n=t?function(e,t){var n=d(e);return function(r,o){return t(n(r),o,e)}}(e,t):d(e)}));return o.columns=r||[],o},parseRows:l,format:function(t,n){return null==n&&(n=u(t)),[n.map(m).join(e)].concat(f(t,n)).join("\n")},formatBody:function(e,t){return null==t&&(t=u(e)),f(e,t).join("\n")},formatRows:function(e){return e.map(h).join("\n")},formatRow:h,formatValue:m}}},"../../node_modules/d3-dsv/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{autoType:()=>a.default,csvFormat:()=>o.csvFormat,csvFormatBody:()=>o.csvFormatBody,csvFormatRow:()=>o.csvFormatRow,csvFormatRows:()=>o.csvFormatRows,csvFormatValue:()=>o.csvFormatValue,csvParse:()=>o.csvParse,csvParseRows:()=>o.csvParseRows,dsvFormat:()=>r.default,tsvFormat:()=>s.tsvFormat,tsvFormatBody:()=>s.tsvFormatBody,tsvFormatRow:()=>s.tsvFormatRow,tsvFormatRows:()=>s.tsvFormatRows,tsvFormatValue:()=>s.tsvFormatValue,tsvParse:()=>s.tsvParse,tsvParseRows:()=>s.tsvParseRows});var r=n("../../node_modules/d3-dsv/src/dsv.js"),o=n("../../node_modules/d3-dsv/src/csv.js"),s=n("../../node_modules/d3-dsv/src/tsv.js"),a=n("../../node_modules/d3-dsv/src/autoType.js")},"../../node_modules/d3-dsv/src/tsv.js":(e,t,n)=>{n.r(t),n.d(t,{tsvFormat:()=>a,tsvFormatBody:()=>i,tsvFormatRow:()=>u,tsvFormatRows:()=>d,tsvFormatValue:()=>c,tsvParse:()=>o,tsvParseRows:()=>s});var r=(0,n("../../node_modules/d3-dsv/src/dsv.js").default)("\t"),o=r.parse,s=r.parseRows,a=r.format,i=r.formatBody,d=r.formatRows,u=r.formatRow,c=r.formatValue},"../../node_modules/d3-ease/src/back.js":(e,t,n)=>{n.r(t),n.d(t,{backIn:()=>o,backInOut:()=>a,backOut:()=>s});var r=1.70158,o=function e(t){function n(e){return(e=+e)*e*(t*(e-1)+e)}return t=+t,n.overshoot=e,n}(r),s=function e(t){function n(e){return--e*e*((e+1)*t+e)+1}return t=+t,n.overshoot=e,n}(r),a=function e(t){function n(e){return((e*=2)<1?e*e*((t+1)*e-t):(e-=2)*e*((t+1)*e+t)+2)/2}return t=+t,n.overshoot=e,n}(r)},"../../node_modules/d3-ease/src/bounce.js":(e,t,n)=>{n.r(t),n.d(t,{bounceIn:()=>h,bounceInOut:()=>p,bounceOut:()=>m});var r=4/11,o=6/11,s=8/11,a=3/4,i=9/11,d=10/11,u=15/16,c=21/22,l=63/64,f=1/r/r;function h(e){return 1-m(1-e)}function m(e){return(e=+e)<r?f*e*e:e<s?f*(e-=o)*e+a:e<d?f*(e-=i)*e+u:f*(e-=c)*e+l}function p(e){return((e*=2)<=1?1-m(1-e):m(e-1)+1)/2}},"../../node_modules/d3-ease/src/circle.js":(e,t,n)=>{function r(e){return 1-Math.sqrt(1-e*e)}function o(e){return Math.sqrt(1- --e*e)}function s(e){return((e*=2)<=1?1-Math.sqrt(1-e*e):Math.sqrt(1-(e-=2)*e)+1)/2}n.r(t),n.d(t,{circleIn:()=>r,circleInOut:()=>s,circleOut:()=>o})},"../../node_modules/d3-ease/src/cubic.js":(e,t,n)=>{function r(e){return e*e*e}function o(e){return--e*e*e+1}function s(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}n.r(t),n.d(t,{cubicIn:()=>r,cubicInOut:()=>s,cubicOut:()=>o})},"../../node_modules/d3-ease/src/elastic.js":(e,t,n)=>{n.r(t),n.d(t,{elasticIn:()=>s,elasticInOut:()=>i,elasticOut:()=>a});var r=n("../../node_modules/d3-ease/src/math.js"),o=2*Math.PI,s=function e(t,n){var s=Math.asin(1/(t=Math.max(1,t)))*(n/=o);function a(e){return t*(0,r.tpmt)(- --e)*Math.sin((s-e)/n)}return a.amplitude=function(t){return e(t,n*o)},a.period=function(n){return e(t,n)},a}(1,.3),a=function e(t,n){var s=Math.asin(1/(t=Math.max(1,t)))*(n/=o);function a(e){return 1-t*(0,r.tpmt)(e=+e)*Math.sin((e+s)/n)}return a.amplitude=function(t){return e(t,n*o)},a.period=function(n){return e(t,n)},a}(1,.3),i=function e(t,n){var s=Math.asin(1/(t=Math.max(1,t)))*(n/=o);function a(e){return((e=2*e-1)<0?t*(0,r.tpmt)(-e)*Math.sin((s-e)/n):2-t*(0,r.tpmt)(e)*Math.sin((s+e)/n))/2}return a.amplitude=function(t){return e(t,n*o)},a.period=function(n){return e(t,n)},a}(1,.3)},"../../node_modules/d3-ease/src/exp.js":(e,t,n)=>{n.r(t),n.d(t,{expIn:()=>o,expInOut:()=>a,expOut:()=>s});var r=n("../../node_modules/d3-ease/src/math.js");function o(e){return(0,r.tpmt)(1-+e)}function s(e){return 1-(0,r.tpmt)(e)}function a(e){return((e*=2)<=1?(0,r.tpmt)(1-e):2-(0,r.tpmt)(e-1))/2}},"../../node_modules/d3-ease/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{easeBack:()=>l.backInOut,easeBackIn:()=>l.backIn,easeBackInOut:()=>l.backInOut,easeBackOut:()=>l.backOut,easeBounce:()=>c.bounceOut,easeBounceIn:()=>c.bounceIn,easeBounceInOut:()=>c.bounceInOut,easeBounceOut:()=>c.bounceOut,easeCircle:()=>u.circleInOut,easeCircleIn:()=>u.circleIn,easeCircleInOut:()=>u.circleInOut,easeCircleOut:()=>u.circleOut,easeCubic:()=>s.cubicInOut,easeCubicIn:()=>s.cubicIn,easeCubicInOut:()=>s.cubicInOut,easeCubicOut:()=>s.cubicOut,easeElastic:()=>f.elasticOut,easeElasticIn:()=>f.elasticIn,easeElasticInOut:()=>f.elasticInOut,easeElasticOut:()=>f.elasticOut,easeExp:()=>d.expInOut,easeExpIn:()=>d.expIn,easeExpInOut:()=>d.expInOut,easeExpOut:()=>d.expOut,easeLinear:()=>r.linear,easePoly:()=>a.polyInOut,easePolyIn:()=>a.polyIn,easePolyInOut:()=>a.polyInOut,easePolyOut:()=>a.polyOut,easeQuad:()=>o.quadInOut,easeQuadIn:()=>o.quadIn,easeQuadInOut:()=>o.quadInOut,easeQuadOut:()=>o.quadOut,easeSin:()=>i.sinInOut,easeSinIn:()=>i.sinIn,easeSinInOut:()=>i.sinInOut,easeSinOut:()=>i.sinOut});var r=n("../../node_modules/d3-ease/src/linear.js"),o=n("../../node_modules/d3-ease/src/quad.js"),s=n("../../node_modules/d3-ease/src/cubic.js"),a=n("../../node_modules/d3-ease/src/poly.js"),i=n("../../node_modules/d3-ease/src/sin.js"),d=n("../../node_modules/d3-ease/src/exp.js"),u=n("../../node_modules/d3-ease/src/circle.js"),c=n("../../node_modules/d3-ease/src/bounce.js"),l=n("../../node_modules/d3-ease/src/back.js"),f=n("../../node_modules/d3-ease/src/elastic.js")},"../../node_modules/d3-ease/src/linear.js":(e,t,n)=>{function r(e){return+e}n.r(t),n.d(t,{linear:()=>r})},"../../node_modules/d3-ease/src/math.js":(e,t,n)=>{function r(e){return 1.0009775171065494*(Math.pow(2,-10*e)-.0009765625)}n.r(t),n.d(t,{tpmt:()=>r})},"../../node_modules/d3-ease/src/poly.js":(e,t,n)=>{n.r(t),n.d(t,{polyIn:()=>r,polyInOut:()=>s,polyOut:()=>o});var r=function e(t){function n(e){return Math.pow(e,t)}return t=+t,n.exponent=e,n}(3),o=function e(t){function n(e){return 1-Math.pow(1-e,t)}return t=+t,n.exponent=e,n}(3),s=function e(t){function n(e){return((e*=2)<=1?Math.pow(e,t):2-Math.pow(2-e,t))/2}return t=+t,n.exponent=e,n}(3)},"../../node_modules/d3-ease/src/quad.js":(e,t,n)=>{function r(e){return e*e}function o(e){return e*(2-e)}function s(e){return((e*=2)<=1?e*e:--e*(2-e)+1)/2}n.r(t),n.d(t,{quadIn:()=>r,quadInOut:()=>s,quadOut:()=>o})},"../../node_modules/d3-ease/src/sin.js":(e,t,n)=>{n.r(t),n.d(t,{sinIn:()=>s,sinInOut:()=>i,sinOut:()=>a});var r=Math.PI,o=r/2;function s(e){return 1==+e?1:1-Math.cos(e*o)}function a(e){return Math.sin(e*o)}function i(e){return(1-Math.cos(r*e))/2}},"../../node_modules/d3-fetch/src/blob.js":(e,t,n)=>{function r(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.blob()}function o(e,t){return fetch(e,t).then(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-fetch/src/buffer.js":(e,t,n)=>{function r(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.arrayBuffer()}function o(e,t){return fetch(e,t).then(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-fetch/src/dsv.js":(e,t,n)=>{n.r(t),n.d(t,{csv:()=>u,default:()=>d,tsv:()=>c});var r=n("../../node_modules/d3-dsv/src/dsv.js"),o=n("../../node_modules/d3-dsv/src/csv.js"),s=n("../../node_modules/d3-dsv/src/tsv.js"),a=n("../../node_modules/d3-fetch/src/text.js");function i(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=void 0),(0,a.default)(t,n).then((function(t){return e(t,r)}))}}function d(e,t,n,o){3===arguments.length&&"function"==typeof n&&(o=n,n=void 0);var s=(0,r.default)(e);return(0,a.default)(t,n).then((function(e){return s.parse(e,o)}))}var u=i(o.csvParse),c=i(s.tsvParse)},"../../node_modules/d3-fetch/src/image.js":(e,t,n)=>{function r(e,t){return new Promise((function(n,r){var o=new Image;for(var s in t)o[s]=t[s];o.onerror=r,o.onload=function(){n(o)},o.src=e}))}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-fetch/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{blob:()=>r.default,buffer:()=>o.default,csv:()=>s.csv,dsv:()=>s.default,html:()=>u.html,image:()=>a.default,json:()=>i.default,svg:()=>u.svg,text:()=>d.default,tsv:()=>s.tsv,xml:()=>u.default});var r=n("../../node_modules/d3-fetch/src/blob.js"),o=n("../../node_modules/d3-fetch/src/buffer.js"),s=n("../../node_modules/d3-fetch/src/dsv.js"),a=n("../../node_modules/d3-fetch/src/image.js"),i=n("../../node_modules/d3-fetch/src/json.js"),d=n("../../node_modules/d3-fetch/src/text.js"),u=n("../../node_modules/d3-fetch/src/xml.js")},"../../node_modules/d3-fetch/src/json.js":(e,t,n)=>{function r(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);if(204!==e.status&&205!==e.status)return e.json()}function o(e,t){return fetch(e,t).then(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-fetch/src/text.js":(e,t,n)=>{function r(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.text()}function o(e,t){return fetch(e,t).then(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-fetch/src/xml.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,html:()=>a,svg:()=>i});var r=n("../../node_modules/d3-fetch/src/text.js");function o(e){return function(t,n){return(0,r.default)(t,n).then((function(t){return(new DOMParser).parseFromString(t,e)}))}}const s=o("application/xml");var a=o("text/html"),i=o("image/svg+xml")},"../../node_modules/d3-force/src/center.js":(e,t,n)=>{function r(e,t){var n;function r(){var r,o,s=n.length,a=0,i=0;for(r=0;r<s;++r)a+=(o=n[r]).x,i+=o.y;for(a=a/s-e,i=i/s-t,r=0;r<s;++r)(o=n[r]).x-=a,o.y-=i}return null==e&&(e=0),null==t&&(t=0),r.initialize=function(e){n=e},r.x=function(t){return arguments.length?(e=+t,r):e},r.y=function(e){return arguments.length?(t=+e,r):t},r}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-force/src/collide.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-force/src/constant.js"),o=n("../../node_modules/d3-force/src/jiggle.js"),s=n("../../node_modules/d3-quadtree/src/quadtree.js");function a(e){return e.x+e.vx}function i(e){return e.y+e.vy}function d(e){var t,n,d=1,u=1;function c(){for(var e,r,c,f,h,m,p,_=t.length,g=0;g<u;++g)for(r=(0,s.default)(t,a,i).visitAfter(l),e=0;e<_;++e)c=t[e],m=n[c.index],p=m*m,f=c.x+c.vx,h=c.y+c.vy,r.visit(v);function v(e,t,n,r,s){var a=e.data,i=e.r,u=m+i;if(!a)return t>f+u||r<f-u||n>h+u||s<h-u;if(a.index>c.index){var l=f-a.x-a.vx,_=h-a.y-a.vy,g=l*l+_*_;g<u*u&&(0===l&&(g+=(l=(0,o.default)())*l),0===_&&(g+=(_=(0,o.default)())*_),g=(u-(g=Math.sqrt(g)))/g*d,c.vx+=(l*=g)*(u=(i*=i)/(p+i)),c.vy+=(_*=g)*u,a.vx-=l*(u=1-u),a.vy-=_*u)}}}function l(e){if(e.data)return e.r=n[e.data.index];for(var t=e.r=0;t<4;++t)e[t]&&e[t].r>e.r&&(e.r=e[t].r)}function f(){if(t){var r,o,s=t.length;for(n=new Array(s),r=0;r<s;++r)o=t[r],n[o.index]=+e(o,r,t)}}return"function"!=typeof e&&(e=(0,r.default)(null==e?1:+e)),c.initialize=function(e){t=e,f()},c.iterations=function(e){return arguments.length?(u=+e,c):u},c.strength=function(e){return arguments.length?(d=+e,c):d},c.radius=function(t){return arguments.length?(e="function"==typeof t?t:(0,r.default)(+t),f(),c):e},c}},"../../node_modules/d3-force/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-force/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{forceCenter:()=>r.default,forceCollide:()=>o.default,forceLink:()=>s.default,forceManyBody:()=>a.default,forceRadial:()=>i.default,forceSimulation:()=>d.default,forceX:()=>u.default,forceY:()=>c.default});var r=n("../../node_modules/d3-force/src/center.js"),o=n("../../node_modules/d3-force/src/collide.js"),s=n("../../node_modules/d3-force/src/link.js"),a=n("../../node_modules/d3-force/src/manyBody.js"),i=n("../../node_modules/d3-force/src/radial.js"),d=n("../../node_modules/d3-force/src/simulation.js"),u=n("../../node_modules/d3-force/src/x.js"),c=n("../../node_modules/d3-force/src/y.js")},"../../node_modules/d3-force/src/jiggle.js":(e,t,n)=>{function r(){return 1e-6*(Math.random()-.5)}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-force/src/link.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-force/src/constant.js"),o=n("../../node_modules/d3-force/src/jiggle.js"),s=n("../../node_modules/d3-collection/src/index.js");function a(e){return e.index}function i(e,t){var n=e.get(t);if(!n)throw new Error("missing: "+t);return n}function d(e){var t,n,d,u,c,l=a,f=function(e){return 1/Math.min(u[e.source.index],u[e.target.index])},h=(0,r.default)(30),m=1;function p(r){for(var s=0,a=e.length;s<m;++s)for(var i,d,u,l,f,h,p,_=0;_<a;++_)d=(i=e[_]).source,l=(u=i.target).x+u.vx-d.x-d.vx||(0,o.default)(),f=u.y+u.vy-d.y-d.vy||(0,o.default)(),l*=h=((h=Math.sqrt(l*l+f*f))-n[_])/h*r*t[_],f*=h,u.vx-=l*(p=c[_]),u.vy-=f*p,d.vx+=l*(p=1-p),d.vy+=f*p}function _(){if(d){var r,o,a=d.length,f=e.length,h=(0,s.map)(d,l);for(r=0,u=new Array(a);r<f;++r)(o=e[r]).index=r,"object"!=typeof o.source&&(o.source=i(h,o.source)),"object"!=typeof o.target&&(o.target=i(h,o.target)),u[o.source.index]=(u[o.source.index]||0)+1,u[o.target.index]=(u[o.target.index]||0)+1;for(r=0,c=new Array(f);r<f;++r)o=e[r],c[r]=u[o.source.index]/(u[o.source.index]+u[o.target.index]);t=new Array(f),g(),n=new Array(f),v()}}function g(){if(d)for(var n=0,r=e.length;n<r;++n)t[n]=+f(e[n],n,e)}function v(){if(d)for(var t=0,r=e.length;t<r;++t)n[t]=+h(e[t],t,e)}return null==e&&(e=[]),p.initialize=function(e){d=e,_()},p.links=function(t){return arguments.length?(e=t,_(),p):e},p.id=function(e){return arguments.length?(l=e,p):l},p.iterations=function(e){return arguments.length?(m=+e,p):m},p.strength=function(e){return arguments.length?(f="function"==typeof e?e:(0,r.default)(+e),g(),p):f},p.distance=function(e){return arguments.length?(h="function"==typeof e?e:(0,r.default)(+e),v(),p):h},p}},"../../node_modules/d3-force/src/manyBody.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-force/src/constant.js"),o=n("../../node_modules/d3-force/src/jiggle.js"),s=n("../../node_modules/d3-quadtree/src/quadtree.js"),a=n("../../node_modules/d3-force/src/simulation.js");function i(){var e,t,n,i,d=(0,r.default)(-30),u=1,c=1/0,l=.81;function f(r){var o,i=e.length,d=(0,s.default)(e,a.x,a.y).visitAfter(m);for(n=r,o=0;o<i;++o)t=e[o],d.visit(p)}function h(){if(e){var t,n,r=e.length;for(i=new Array(r),t=0;t<r;++t)n=e[t],i[n.index]=+d(n,t,e)}}function m(e){var t,n,r,o,s,a=0,d=0;if(e.length){for(r=o=s=0;s<4;++s)(t=e[s])&&(n=Math.abs(t.value))&&(a+=t.value,d+=n,r+=n*t.x,o+=n*t.y);e.x=r/d,e.y=o/d}else{(t=e).x=t.data.x,t.y=t.data.y;do{a+=i[t.data.index]}while(t=t.next)}e.value=a}function p(e,r,s,a){if(!e.value)return!0;var d=e.x-t.x,f=e.y-t.y,h=a-r,m=d*d+f*f;if(h*h/l<m)return m<c&&(0===d&&(m+=(d=(0,o.default)())*d),0===f&&(m+=(f=(0,o.default)())*f),m<u&&(m=Math.sqrt(u*m)),t.vx+=d*e.value*n/m,t.vy+=f*e.value*n/m),!0;if(!(e.length||m>=c)){(e.data!==t||e.next)&&(0===d&&(m+=(d=(0,o.default)())*d),0===f&&(m+=(f=(0,o.default)())*f),m<u&&(m=Math.sqrt(u*m)));do{e.data!==t&&(h=i[e.data.index]*n/m,t.vx+=d*h,t.vy+=f*h)}while(e=e.next)}}return f.initialize=function(t){e=t,h()},f.strength=function(e){return arguments.length?(d="function"==typeof e?e:(0,r.default)(+e),h(),f):d},f.distanceMin=function(e){return arguments.length?(u=e*e,f):Math.sqrt(u)},f.distanceMax=function(e){return arguments.length?(c=e*e,f):Math.sqrt(c)},f.theta=function(e){return arguments.length?(l=e*e,f):Math.sqrt(l)},f}},"../../node_modules/d3-force/src/radial.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-force/src/constant.js");function o(e,t,n){var o,s,a,i=(0,r.default)(.1);function d(e){for(var r=0,i=o.length;r<i;++r){var d=o[r],u=d.x-t||1e-6,c=d.y-n||1e-6,l=Math.sqrt(u*u+c*c),f=(a[r]-l)*s[r]*e/l;d.vx+=u*f,d.vy+=c*f}}function u(){if(o){var t,n=o.length;for(s=new Array(n),a=new Array(n),t=0;t<n;++t)a[t]=+e(o[t],t,o),s[t]=isNaN(a[t])?0:+i(o[t],t,o)}}return"function"!=typeof e&&(e=(0,r.default)(+e)),null==t&&(t=0),null==n&&(n=0),d.initialize=function(e){o=e,u()},d.strength=function(e){return arguments.length?(i="function"==typeof e?e:(0,r.default)(+e),u(),d):i},d.radius=function(t){return arguments.length?(e="function"==typeof t?t:(0,r.default)(+t),u(),d):e},d.x=function(e){return arguments.length?(t=+e,d):t},d.y=function(e){return arguments.length?(n=+e,d):n},d}},"../../node_modules/d3-force/src/simulation.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c,x:()=>a,y:()=>i});var r=n("../../node_modules/d3-dispatch/src/dispatch.js"),o=n("../../node_modules/d3-collection/src/index.js"),s=n("../../node_modules/d3-timer/src/timer.js");function a(e){return e.x}function i(e){return e.y}var d=10,u=Math.PI*(3-Math.sqrt(5));function c(e){var t,n=1,a=.001,i=1-Math.pow(a,1/300),c=0,l=.6,f=(0,o.map)(),h=(0,s.timer)(p),m=(0,r.default)("tick","end");function p(){_(),m.call("tick",t),n<a&&(h.stop(),m.call("end",t))}function _(r){var o,s,a=e.length;void 0===r&&(r=1);for(var d=0;d<r;++d)for(n+=(c-n)*i,f.each((function(e){e(n)})),o=0;o<a;++o)null==(s=e[o]).fx?s.x+=s.vx*=l:(s.x=s.fx,s.vx=0),null==s.fy?s.y+=s.vy*=l:(s.y=s.fy,s.vy=0);return t}function g(){for(var t,n=0,r=e.length;n<r;++n){if((t=e[n]).index=n,null!=t.fx&&(t.x=t.fx),null!=t.fy&&(t.y=t.fy),isNaN(t.x)||isNaN(t.y)){var o=d*Math.sqrt(n),s=n*u;t.x=o*Math.cos(s),t.y=o*Math.sin(s)}(isNaN(t.vx)||isNaN(t.vy))&&(t.vx=t.vy=0)}}function v(t){return t.initialize&&t.initialize(e),t}return null==e&&(e=[]),g(),t={tick:_,restart:function(){return h.restart(p),t},stop:function(){return h.stop(),t},nodes:function(n){return arguments.length?(e=n,g(),f.each(v),t):e},alpha:function(e){return arguments.length?(n=+e,t):n},alphaMin:function(e){return arguments.length?(a=+e,t):a},alphaDecay:function(e){return arguments.length?(i=+e,t):+i},alphaTarget:function(e){return arguments.length?(c=+e,t):c},velocityDecay:function(e){return arguments.length?(l=1-e,t):1-l},force:function(e,n){return arguments.length>1?(null==n?f.remove(e):f.set(e,v(n)),t):f.get(e)},find:function(t,n,r){var o,s,a,i,d,u=0,c=e.length;for(null==r?r=1/0:r*=r,u=0;u<c;++u)(a=(o=t-(i=e[u]).x)*o+(s=n-i.y)*s)<r&&(d=i,r=a);return d},on:function(e,n){return arguments.length>1?(m.on(e,n),t):m.on(e)}}}},"../../node_modules/d3-force/src/x.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-force/src/constant.js");function o(e){var t,n,o,s=(0,r.default)(.1);function a(e){for(var r,s=0,a=t.length;s<a;++s)(r=t[s]).vx+=(o[s]-r.x)*n[s]*e}function i(){if(t){var r,a=t.length;for(n=new Array(a),o=new Array(a),r=0;r<a;++r)n[r]=isNaN(o[r]=+e(t[r],r,t))?0:+s(t[r],r,t)}}return"function"!=typeof e&&(e=(0,r.default)(null==e?0:+e)),a.initialize=function(e){t=e,i()},a.strength=function(e){return arguments.length?(s="function"==typeof e?e:(0,r.default)(+e),i(),a):s},a.x=function(t){return arguments.length?(e="function"==typeof t?t:(0,r.default)(+t),i(),a):e},a}},"../../node_modules/d3-force/src/y.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-force/src/constant.js");function o(e){var t,n,o,s=(0,r.default)(.1);function a(e){for(var r,s=0,a=t.length;s<a;++s)(r=t[s]).vy+=(o[s]-r.y)*n[s]*e}function i(){if(t){var r,a=t.length;for(n=new Array(a),o=new Array(a),r=0;r<a;++r)n[r]=isNaN(o[r]=+e(t[r],r,t))?0:+s(t[r],r,t)}}return"function"!=typeof e&&(e=(0,r.default)(null==e?0:+e)),a.initialize=function(e){t=e,i()},a.strength=function(e){return arguments.length?(s="function"==typeof e?e:(0,r.default)(+e),i(),a):s},a.y=function(t){return arguments.length?(e="function"==typeof t?t:(0,r.default)(+t),i(),a):e},a}},"../../node_modules/d3-format/src/defaultLocale.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,format:()=>o,formatPrefix:()=>s});var r,o,s,a=n("../../node_modules/d3-format/src/locale.js");function i(e){return r=(0,a.default)(e),o=r.format,s=r.formatPrefix,r}i({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"})},"../../node_modules/d3-format/src/exponent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-format/src/formatDecimal.js");function o(e){return(e=(0,r.formatDecimalParts)(Math.abs(e)))?e[1]:NaN}},"../../node_modules/d3-format/src/formatDecimal.js":(e,t,n)=>{function r(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)}function o(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}n.r(t),n.d(t,{default:()=>r,formatDecimalParts:()=>o})},"../../node_modules/d3-format/src/formatGroup.js":(e,t,n)=>{function r(e,t){return function(n,r){for(var o=n.length,s=[],a=0,i=e[0],d=0;o>0&&i>0&&(d+i+1>r&&(i=Math.max(1,r-d)),s.push(n.substring(o-=i,o+i)),!((d+=i+1)>r));)i=e[a=(a+1)%e.length];return s.reverse().join(t)}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-format/src/formatNumerals.js":(e,t,n)=>{function r(e){return function(t){return t.replace(/[0-9]/g,(function(t){return e[+t]}))}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-format/src/formatPrefixAuto.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,prefixExponent:()=>r});var r,o=n("../../node_modules/d3-format/src/formatDecimal.js");function s(e,t){var n=(0,o.formatDecimalParts)(e,t);if(!n)return e+"";var s=n[0],a=n[1],i=a-(r=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,d=s.length;return i===d?s:i>d?s+new Array(i-d+1).join("0"):i>0?s.slice(0,i)+"."+s.slice(i):"0."+new Array(1-i).join("0")+(0,o.formatDecimalParts)(e,Math.max(0,t+i-1))[0]}},"../../node_modules/d3-format/src/formatRounded.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-format/src/formatDecimal.js");function o(e,t){var n=(0,r.formatDecimalParts)(e,t);if(!n)return e+"";var o=n[0],s=n[1];return s<0?"0."+new Array(-s).join("0")+o:o.length>s+1?o.slice(0,s+1)+"."+o.slice(s+1):o+new Array(s-o.length+2).join("0")}},"../../node_modules/d3-format/src/formatSpecifier.js":(e,t,n)=>{n.r(t),n.d(t,{FormatSpecifier:()=>s,default:()=>o});var r=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function o(e){if(!(t=r.exec(e)))throw new Error("invalid format: "+e);var t;return new s({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function s(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}o.prototype=s.prototype,s.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type}},"../../node_modules/d3-format/src/formatTrim.js":(e,t,n)=>{function r(e){e:for(var t,n=e.length,r=1,o=-1;r<n;++r)switch(e[r]){case".":o=t=r;break;case"0":0===o&&(o=r),t=r;break;default:if(!+e[r])break e;o>0&&(o=0)}return o>0?e.slice(0,o)+e.slice(t+1):e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-format/src/formatTypes.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-format/src/formatDecimal.js"),o=n("../../node_modules/d3-format/src/formatPrefixAuto.js"),s=n("../../node_modules/d3-format/src/formatRounded.js");const a={"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:r.default,e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return(0,s.default)(100*e,t)},r:s.default,s:o.default,X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}}},"../../node_modules/d3-format/src/identity.js":(e,t,n)=>{function r(e){return e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-format/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{FormatSpecifier:()=>s.FormatSpecifier,format:()=>r.format,formatDefaultLocale:()=>r.default,formatLocale:()=>o.default,formatPrefix:()=>r.formatPrefix,formatSpecifier:()=>s.default,precisionFixed:()=>a.default,precisionPrefix:()=>i.default,precisionRound:()=>d.default});var r=n("../../node_modules/d3-format/src/defaultLocale.js"),o=n("../../node_modules/d3-format/src/locale.js"),s=n("../../node_modules/d3-format/src/formatSpecifier.js"),a=n("../../node_modules/d3-format/src/precisionFixed.js"),i=n("../../node_modules/d3-format/src/precisionPrefix.js"),d=n("../../node_modules/d3-format/src/precisionRound.js")},"../../node_modules/d3-format/src/locale.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var r=n("../../node_modules/d3-format/src/exponent.js"),o=n("../../node_modules/d3-format/src/formatGroup.js"),s=n("../../node_modules/d3-format/src/formatNumerals.js"),a=n("../../node_modules/d3-format/src/formatSpecifier.js"),i=n("../../node_modules/d3-format/src/formatTrim.js"),d=n("../../node_modules/d3-format/src/formatTypes.js"),u=n("../../node_modules/d3-format/src/formatPrefixAuto.js"),c=n("../../node_modules/d3-format/src/identity.js"),l=Array.prototype.map,f=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function h(e){var t=void 0===e.grouping||void 0===e.thousands?c.default:(0,o.default)(l.call(e.grouping,Number),e.thousands+""),n=void 0===e.currency?"":e.currency[0]+"",h=void 0===e.currency?"":e.currency[1]+"",m=void 0===e.decimal?".":e.decimal+"",p=void 0===e.numerals?c.default:(0,s.default)(l.call(e.numerals,String)),_=void 0===e.percent?"%":e.percent+"",g=void 0===e.minus?"-":e.minus+"",v=void 0===e.nan?"NaN":e.nan+"";function y(e){var r=(e=(0,a.default)(e)).fill,o=e.align,s=e.sign,c=e.symbol,l=e.zero,y=e.width,j=e.comma,b=e.precision,x=e.trim,w=e.type;"n"===w?(j=!0,w="g"):d.default[w]||(void 0===b&&(b=12),x=!0,w="g"),(l||"0"===r&&"="===o)&&(l=!0,r="0",o="=");var M="$"===c?n:"#"===c&&/[boxX]/.test(w)?"0"+w.toLowerCase():"",S="$"===c?h:/[%p]/.test(w)?_:"",k=d.default[w],E=/[defgprs%]/.test(w);function C(e){var n,a,d,c=M,h=S;if("c"===w)h=k(e)+h,e="";else{var _=(e=+e)<0||1/e<0;if(e=isNaN(e)?v:k(Math.abs(e),b),x&&(e=(0,i.default)(e)),_&&0==+e&&"+"!==s&&(_=!1),c=(_?"("===s?s:g:"-"===s||"("===s?"":s)+c,h=("s"===w?f[8+u.prefixExponent/3]:"")+h+(_&&"("===s?")":""),E)for(n=-1,a=e.length;++n<a;)if(48>(d=e.charCodeAt(n))||d>57){h=(46===d?m+e.slice(n+1):e.slice(n))+h,e=e.slice(0,n);break}}j&&!l&&(e=t(e,1/0));var C=c.length+e.length+h.length,A=C<y?new Array(y-C+1).join(r):"";switch(j&&l&&(e=t(A+e,A.length?y-h.length:1/0),A=""),o){case"<":e=c+e+h+A;break;case"=":e=c+A+e+h;break;case"^":e=A.slice(0,C=A.length>>1)+c+e+h+A.slice(C);break;default:e=A+c+e+h}return p(e)}return b=void 0===b?6:/[gprs]/.test(w)?Math.max(1,Math.min(21,b)):Math.max(0,Math.min(20,b)),C.toString=function(){return e+""},C}return{format:y,formatPrefix:function(e,t){var n=y(((e=(0,a.default)(e)).type="f",e)),o=3*Math.max(-8,Math.min(8,Math.floor((0,r.default)(t)/3))),s=Math.pow(10,-o),i=f[8+o/3];return function(e){return n(s*e)+i}}}}},"../../node_modules/d3-format/src/precisionFixed.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-format/src/exponent.js");function o(e){return Math.max(0,-(0,r.default)(Math.abs(e)))}},"../../node_modules/d3-format/src/precisionPrefix.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-format/src/exponent.js");function o(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor((0,r.default)(t)/3)))-(0,r.default)(Math.abs(e)))}},"../../node_modules/d3-format/src/precisionRound.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-format/src/exponent.js");function o(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,(0,r.default)(t)-(0,r.default)(e))+1}},"../../node_modules/d3-geo/src/adder.js":(e,t,n)=>{function r(){return new o}function o(){this.reset()}n.r(t),n.d(t,{default:()=>r}),o.prototype={constructor:o,reset:function(){this.s=this.t=0},add:function(e){a(s,e,this.t),a(this,s.s,this.s),this.s?this.t+=s.t:this.s=s.t},valueOf:function(){return this.s}};var s=new o;function a(e,t,n){var r=e.s=t+n,o=r-t,s=r-o;e.t=t-s+(n-o)}},"../../node_modules/d3-geo/src/area.js":(e,t,n)=>{n.r(t),n.d(t,{areaRingSum:()=>f,areaStream:()=>m,default:()=>y});var r,o,s,a,i,d=n("../../node_modules/d3-geo/src/adder.js"),u=n("../../node_modules/d3-geo/src/math.js"),c=n("../../node_modules/d3-geo/src/noop.js"),l=n("../../node_modules/d3-geo/src/stream.js"),f=(0,d.default)(),h=(0,d.default)(),m={point:c.default,lineStart:c.default,lineEnd:c.default,polygonStart:function(){f.reset(),m.lineStart=p,m.lineEnd=_},polygonEnd:function(){var e=+f;h.add(e<0?u.tau+e:e),this.lineStart=this.lineEnd=this.point=c.default},sphere:function(){h.add(u.tau)}};function p(){m.point=g}function _(){v(r,o)}function g(e,t){m.point=v,r=e,o=t,e*=u.radians,t*=u.radians,s=e,a=(0,u.cos)(t=t/2+u.quarterPi),i=(0,u.sin)(t)}function v(e,t){e*=u.radians,t=(t*=u.radians)/2+u.quarterPi;var n=e-s,r=n>=0?1:-1,o=r*n,d=(0,u.cos)(t),c=(0,u.sin)(t),l=i*c,h=a*d+l*(0,u.cos)(o),m=l*r*(0,u.sin)(o);f.add((0,u.atan2)(m,h)),s=e,a=d,i=c}function y(e){return h.reset(),(0,l.default)(e,m),2*h}},"../../node_modules/d3-geo/src/bounds.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>T});var r,o,s,a,i,d,u,c,l,f,h=n("../../node_modules/d3-geo/src/adder.js"),m=n("../../node_modules/d3-geo/src/area.js"),p=n("../../node_modules/d3-geo/src/cartesian.js"),_=n("../../node_modules/d3-geo/src/math.js"),g=n("../../node_modules/d3-geo/src/stream.js"),v=(0,h.default)(),y={point:j,lineStart:x,lineEnd:w,polygonStart:function(){y.point=M,y.lineStart=S,y.lineEnd=k,v.reset(),m.areaStream.polygonStart()},polygonEnd:function(){m.areaStream.polygonEnd(),y.point=j,y.lineStart=x,y.lineEnd=w,m.areaRingSum<0?(r=-(s=180),o=-(a=90)):v>_.epsilon?a=90:v<-_.epsilon&&(o=-90),f[0]=r,f[1]=s},sphere:function(){r=-(s=180),o=-(a=90)}};function j(e,t){l.push(f=[r=e,s=e]),t<o&&(o=t),t>a&&(a=t)}function b(e,t){var n=(0,p.cartesian)([e*_.radians,t*_.radians]);if(c){var d=(0,p.cartesianCross)(c,n),u=[d[1],-d[0],0],h=(0,p.cartesianCross)(u,d);(0,p.cartesianNormalizeInPlace)(h),h=(0,p.spherical)(h);var m,g=e-i,v=g>0?1:-1,y=h[0]*_.degrees*v,j=(0,_.abs)(g)>180;j^(v*i<y&&y<v*e)?(m=h[1]*_.degrees)>a&&(a=m):j^(v*i<(y=(y+360)%360-180)&&y<v*e)?(m=-h[1]*_.degrees)<o&&(o=m):(t<o&&(o=t),t>a&&(a=t)),j?e<i?E(r,e)>E(r,s)&&(s=e):E(e,s)>E(r,s)&&(r=e):s>=r?(e<r&&(r=e),e>s&&(s=e)):e>i?E(r,e)>E(r,s)&&(s=e):E(e,s)>E(r,s)&&(r=e)}else l.push(f=[r=e,s=e]);t<o&&(o=t),t>a&&(a=t),c=n,i=e}function x(){y.point=b}function w(){f[0]=r,f[1]=s,y.point=j,c=null}function M(e,t){if(c){var n=e-i;v.add((0,_.abs)(n)>180?n+(n>0?360:-360):n)}else d=e,u=t;m.areaStream.point(e,t),b(e,t)}function S(){m.areaStream.lineStart()}function k(){M(d,u),m.areaStream.lineEnd(),(0,_.abs)(v)>_.epsilon&&(r=-(s=180)),f[0]=r,f[1]=s,c=null}function E(e,t){return(t-=e)<0?t+360:t}function C(e,t){return e[0]-t[0]}function A(e,t){return e[0]<=e[1]?e[0]<=t&&t<=e[1]:t<e[0]||e[1]<t}function T(e){var t,n,i,d,u,c,h;if(a=s=-(r=o=1/0),l=[],(0,g.default)(e,y),n=l.length){for(l.sort(C),t=1,u=[i=l[0]];t<n;++t)A(i,(d=l[t])[0])||A(i,d[1])?(E(i[0],d[1])>E(i[0],i[1])&&(i[1]=d[1]),E(d[0],i[1])>E(i[0],i[1])&&(i[0]=d[0])):u.push(i=d);for(c=-1/0,t=0,i=u[n=u.length-1];t<=n;i=d,++t)d=u[t],(h=E(i[1],d[0]))>c&&(c=h,r=d[0],s=i[1])}return l=f=null,r===1/0||o===1/0?[[NaN,NaN],[NaN,NaN]]:[[r,o],[s,a]]}},"../../node_modules/d3-geo/src/cartesian.js":(e,t,n)=>{n.r(t),n.d(t,{cartesian:()=>s,cartesianAddInPlace:()=>d,cartesianCross:()=>i,cartesianDot:()=>a,cartesianNormalizeInPlace:()=>c,cartesianScale:()=>u,spherical:()=>o});var r=n("../../node_modules/d3-geo/src/math.js");function o(e){return[(0,r.atan2)(e[1],e[0]),(0,r.asin)(e[2])]}function s(e){var t=e[0],n=e[1],o=(0,r.cos)(n);return[o*(0,r.cos)(t),o*(0,r.sin)(t),(0,r.sin)(n)]}function a(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function i(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function d(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function u(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function c(e){var t=(0,r.sqrt)(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}},"../../node_modules/d3-geo/src/centroid.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>N});var r,o,s,a,i,d,u,c,l,f,h,m,p,_,g,v,y=n("../../node_modules/d3-geo/src/math.js"),j=n("../../node_modules/d3-geo/src/noop.js"),b=n("../../node_modules/d3-geo/src/stream.js"),x={sphere:j.default,point:w,lineStart:S,lineEnd:C,polygonStart:function(){x.lineStart=A,x.lineEnd=T},polygonEnd:function(){x.lineStart=S,x.lineEnd=C}};function w(e,t){e*=y.radians,t*=y.radians;var n=(0,y.cos)(t);M(n*(0,y.cos)(e),n*(0,y.sin)(e),(0,y.sin)(t))}function M(e,t,n){++r,s+=(e-s)/r,a+=(t-a)/r,i+=(n-i)/r}function S(){x.point=k}function k(e,t){e*=y.radians,t*=y.radians;var n=(0,y.cos)(t);_=n*(0,y.cos)(e),g=n*(0,y.sin)(e),v=(0,y.sin)(t),x.point=E,M(_,g,v)}function E(e,t){e*=y.radians,t*=y.radians;var n=(0,y.cos)(t),r=n*(0,y.cos)(e),s=n*(0,y.sin)(e),a=(0,y.sin)(t),i=(0,y.atan2)((0,y.sqrt)((i=g*a-v*s)*i+(i=v*r-_*a)*i+(i=_*s-g*r)*i),_*r+g*s+v*a);o+=i,d+=i*(_+(_=r)),u+=i*(g+(g=s)),c+=i*(v+(v=a)),M(_,g,v)}function C(){x.point=w}function A(){x.point=R}function T(){q(m,p),x.point=w}function R(e,t){m=e,p=t,e*=y.radians,t*=y.radians,x.point=q;var n=(0,y.cos)(t);_=n*(0,y.cos)(e),g=n*(0,y.sin)(e),v=(0,y.sin)(t),M(_,g,v)}function q(e,t){e*=y.radians,t*=y.radians;var n=(0,y.cos)(t),r=n*(0,y.cos)(e),s=n*(0,y.sin)(e),a=(0,y.sin)(t),i=g*a-v*s,m=v*r-_*a,p=_*s-g*r,j=(0,y.sqrt)(i*i+m*m+p*p),b=(0,y.asin)(j),x=j&&-b/j;l+=x*i,f+=x*m,h+=x*p,o+=b,d+=b*(_+(_=r)),u+=b*(g+(g=s)),c+=b*(v+(v=a)),M(_,g,v)}function N(e){r=o=s=a=i=d=u=c=l=f=h=0,(0,b.default)(e,x);var t=l,n=f,m=h,p=t*t+n*n+m*m;return p<y.epsilon2&&(t=d,n=u,m=c,o<y.epsilon&&(t=s,n=a,m=i),(p=t*t+n*n+m*m)<y.epsilon2)?[NaN,NaN]:[(0,y.atan2)(n,t)*y.degrees,(0,y.asin)(m/(0,y.sqrt)(p))*y.degrees]}},"../../node_modules/d3-geo/src/circle.js":(e,t,n)=>{n.r(t),n.d(t,{circleStream:()=>i,default:()=>u});var r=n("../../node_modules/d3-geo/src/cartesian.js"),o=n("../../node_modules/d3-geo/src/constant.js"),s=n("../../node_modules/d3-geo/src/math.js"),a=n("../../node_modules/d3-geo/src/rotation.js");function i(e,t,n,o,a,i){if(n){var u=(0,s.cos)(t),c=(0,s.sin)(t),l=o*n;null==a?(a=t+o*s.tau,i=t-l/2):(a=d(u,a),i=d(u,i),(o>0?a<i:a>i)&&(a+=o*s.tau));for(var f,h=a;o>0?h>i:h<i;h-=l)f=(0,r.spherical)([u,-c*(0,s.cos)(h),-c*(0,s.sin)(h)]),e.point(f[0],f[1])}}function d(e,t){(t=(0,r.cartesian)(t))[0]-=e,(0,r.cartesianNormalizeInPlace)(t);var n=(0,s.acos)(-t[1]);return((-t[2]<0?-n:n)+s.tau-s.epsilon)%s.tau}function u(){var e,t,n=(0,o.default)([0,0]),r=(0,o.default)(90),d=(0,o.default)(6),u={point:function(n,r){e.push(n=t(n,r)),n[0]*=s.degrees,n[1]*=s.degrees}};function c(){var o=n.apply(this,arguments),c=r.apply(this,arguments)*s.radians,l=d.apply(this,arguments)*s.radians;return e=[],t=(0,a.rotateRadians)(-o[0]*s.radians,-o[1]*s.radians,0).invert,i(u,c,l,1),o={type:"Polygon",coordinates:[e]},e=t=null,o}return c.center=function(e){return arguments.length?(n="function"==typeof e?e:(0,o.default)([+e[0],+e[1]]),c):n},c.radius=function(e){return arguments.length?(r="function"==typeof e?e:(0,o.default)(+e),c):r},c.precision=function(e){return arguments.length?(d="function"==typeof e?e:(0,o.default)(+e),c):d},c}},"../../node_modules/d3-geo/src/clip/antimeridian.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-geo/src/clip/index.js"),o=n("../../node_modules/d3-geo/src/math.js");const s=(0,r.default)((function(){return!0}),(function(e){var t,n=NaN,r=NaN,s=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(a,i){var d=a>0?o.pi:-o.pi,u=(0,o.abs)(a-n);(0,o.abs)(u-o.pi)<o.epsilon?(e.point(n,r=(r+i)/2>0?o.halfPi:-o.halfPi),e.point(s,r),e.lineEnd(),e.lineStart(),e.point(d,r),e.point(a,r),t=0):s!==d&&u>=o.pi&&((0,o.abs)(n-s)<o.epsilon&&(n-=s*o.epsilon),(0,o.abs)(a-d)<o.epsilon&&(a-=d*o.epsilon),r=function(e,t,n,r){var s,a,i=(0,o.sin)(e-n);return(0,o.abs)(i)>o.epsilon?(0,o.atan)(((0,o.sin)(t)*(a=(0,o.cos)(r))*(0,o.sin)(n)-(0,o.sin)(r)*(s=(0,o.cos)(t))*(0,o.sin)(e))/(s*a*i)):(t+r)/2}(n,r,a,i),e.point(s,r),e.lineEnd(),e.lineStart(),e.point(d,r),t=0),e.point(n=a,r=i),s=d},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t}}}),(function(e,t,n,r){var s;if(null==e)s=n*o.halfPi,r.point(-o.pi,s),r.point(0,s),r.point(o.pi,s),r.point(o.pi,0),r.point(o.pi,-s),r.point(0,-s),r.point(-o.pi,-s),r.point(-o.pi,0),r.point(-o.pi,s);else if((0,o.abs)(e[0]-t[0])>o.epsilon){var a=e[0]<t[0]?o.pi:-o.pi;s=n*a/2,r.point(-a,s),r.point(0,s),r.point(a,s)}else r.point(t[0],t[1])}),[-o.pi,-o.halfPi])},"../../node_modules/d3-geo/src/clip/buffer.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-geo/src/noop.js");function o(){var e,t=[];return{point:function(t,n,r){e.push([t,n,r])},lineStart:function(){t.push(e=[])},lineEnd:r.default,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}}},"../../node_modules/d3-geo/src/clip/circle.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-geo/src/cartesian.js"),o=n("../../node_modules/d3-geo/src/circle.js"),s=n("../../node_modules/d3-geo/src/math.js"),a=n("../../node_modules/d3-geo/src/pointEqual.js"),i=n("../../node_modules/d3-geo/src/clip/index.js");function d(e){var t=(0,s.cos)(e),n=6*s.radians,d=t>0,u=(0,s.abs)(t)>s.epsilon;function c(e,n){return(0,s.cos)(e)*(0,s.cos)(n)>t}function l(e,n,o){var a=(0,r.cartesian)(e),i=(0,r.cartesian)(n),d=[1,0,0],u=(0,r.cartesianCross)(a,i),c=(0,r.cartesianDot)(u,u),l=u[0],f=c-l*l;if(!f)return!o&&e;var h=t*c/f,m=-t*l/f,p=(0,r.cartesianCross)(d,u),_=(0,r.cartesianScale)(d,h),g=(0,r.cartesianScale)(u,m);(0,r.cartesianAddInPlace)(_,g);var v=p,y=(0,r.cartesianDot)(_,v),j=(0,r.cartesianDot)(v,v),b=y*y-j*((0,r.cartesianDot)(_,_)-1);if(!(b<0)){var x=(0,s.sqrt)(b),w=(0,r.cartesianScale)(v,(-y-x)/j);if((0,r.cartesianAddInPlace)(w,_),w=(0,r.spherical)(w),!o)return w;var M,S=e[0],k=n[0],E=e[1],C=n[1];k<S&&(M=S,S=k,k=M);var A=k-S,T=(0,s.abs)(A-s.pi)<s.epsilon;if(!T&&C<E&&(M=E,E=C,C=M),T||A<s.epsilon?T?E+C>0^w[1]<((0,s.abs)(w[0]-S)<s.epsilon?E:C):E<=w[1]&&w[1]<=C:A>s.pi^(S<=w[0]&&w[0]<=k)){var R=(0,r.cartesianScale)(v,(-y+x)/j);return(0,r.cartesianAddInPlace)(R,_),[w,(0,r.spherical)(R)]}}}function f(t,n){var r=d?e:s.pi-e,o=0;return t<-r?o|=1:t>r&&(o|=2),n<-r?o|=4:n>r&&(o|=8),o}return(0,i.default)(c,(function(e){var t,n,r,o,i;return{lineStart:function(){o=r=!1,i=1},point:function(h,m){var p,_=[h,m],g=c(h,m),v=d?g?0:f(h,m):g?f(h+(h<0?s.pi:-s.pi),m):0;if(!t&&(o=r=g)&&e.lineStart(),g!==r&&(!(p=l(t,_))||(0,a.default)(t,p)||(0,a.default)(_,p))&&(_[2]=1),g!==r)i=0,g?(e.lineStart(),p=l(_,t),e.point(p[0],p[1])):(p=l(t,_),e.point(p[0],p[1],2),e.lineEnd()),t=p;else if(u&&t&&d^g){var y;v&n||!(y=l(_,t,!0))||(i=0,d?(e.lineStart(),e.point(y[0][0],y[0][1]),e.point(y[1][0],y[1][1]),e.lineEnd()):(e.point(y[1][0],y[1][1]),e.lineEnd(),e.lineStart(),e.point(y[0][0],y[0][1],3)))}!g||t&&(0,a.default)(t,_)||e.point(_[0],_[1]),t=_,r=g,n=v},lineEnd:function(){r&&e.lineEnd(),t=null},clean:function(){return i|(o&&r)<<1}}}),(function(t,r,s,a){(0,o.circleStream)(a,e,n,s,t,r)}),d?[0,-e]:[-s.pi,e-s.pi])}},"../../node_modules/d3-geo/src/clip/extent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-geo/src/clip/rectangle.js");function o(){var e,t,n,o=0,s=0,a=960,i=500;return n={stream:function(n){return e&&t===n?e:e=(0,r.default)(o,s,a,i)(t=n)},extent:function(r){return arguments.length?(o=+r[0][0],s=+r[0][1],a=+r[1][0],i=+r[1][1],e=t=null,n):[[o,s],[a,i]]}}}},"../../node_modules/d3-geo/src/clip/index.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-geo/src/clip/buffer.js"),o=n("../../node_modules/d3-geo/src/clip/rejoin.js"),s=n("../../node_modules/d3-geo/src/math.js"),a=n("../../node_modules/d3-geo/src/polygonContains.js"),i=n("../../node_modules/d3-array/src/index.js");function d(e,t,n,s){return function(d){var l,f,h,m=t(d),p=(0,r.default)(),_=t(p),g=!1,v={point:y,lineStart:b,lineEnd:x,polygonStart:function(){v.point=w,v.lineStart=M,v.lineEnd=S,f=[],l=[]},polygonEnd:function(){v.point=y,v.lineStart=b,v.lineEnd=x,f=(0,i.merge)(f);var e=(0,a.default)(l,s);f.length?(g||(d.polygonStart(),g=!0),(0,o.default)(f,c,e,n,d)):e&&(g||(d.polygonStart(),g=!0),d.lineStart(),n(null,null,1,d),d.lineEnd()),g&&(d.polygonEnd(),g=!1),f=l=null},sphere:function(){d.polygonStart(),d.lineStart(),n(null,null,1,d),d.lineEnd(),d.polygonEnd()}};function y(t,n){e(t,n)&&d.point(t,n)}function j(e,t){m.point(e,t)}function b(){v.point=j,m.lineStart()}function x(){v.point=y,m.lineEnd()}function w(e,t){h.push([e,t]),_.point(e,t)}function M(){_.lineStart(),h=[]}function S(){w(h[0][0],h[0][1]),_.lineEnd();var e,t,n,r,o=_.clean(),s=p.result(),a=s.length;if(h.pop(),l.push(h),h=null,a)if(1&o){if((t=(n=s[0]).length-1)>0){for(g||(d.polygonStart(),g=!0),d.lineStart(),e=0;e<t;++e)d.point((r=n[e])[0],r[1]);d.lineEnd()}}else a>1&&2&o&&s.push(s.pop().concat(s.shift())),f.push(s.filter(u))}return v}}function u(e){return e.length>1}function c(e,t){return((e=e.x)[0]<0?e[1]-s.halfPi-s.epsilon:s.halfPi-e[1])-((t=t.x)[0]<0?t[1]-s.halfPi-s.epsilon:s.halfPi-t[1])}},"../../node_modules/d3-geo/src/clip/line.js":(e,t,n)=>{function r(e,t,n,r,o,s){var a,i=e[0],d=e[1],u=0,c=1,l=t[0]-i,f=t[1]-d;if(a=n-i,l||!(a>0)){if(a/=l,l<0){if(a<u)return;a<c&&(c=a)}else if(l>0){if(a>c)return;a>u&&(u=a)}if(a=o-i,l||!(a<0)){if(a/=l,l<0){if(a>c)return;a>u&&(u=a)}else if(l>0){if(a<u)return;a<c&&(c=a)}if(a=r-d,f||!(a>0)){if(a/=f,f<0){if(a<u)return;a<c&&(c=a)}else if(f>0){if(a>c)return;a>u&&(u=a)}if(a=s-d,f||!(a<0)){if(a/=f,f<0){if(a>c)return;a>u&&(u=a)}else if(f>0){if(a<u)return;a<c&&(c=a)}return u>0&&(e[0]=i+u*l,e[1]=d+u*f),c<1&&(t[0]=i+c*l,t[1]=d+c*f),!0}}}}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-geo/src/clip/rectangle.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/clip/buffer.js"),s=n("../../node_modules/d3-geo/src/clip/line.js"),a=n("../../node_modules/d3-geo/src/clip/rejoin.js"),i=n("../../node_modules/d3-array/src/index.js"),d=1e9,u=-d;function c(e,t,n,c){function l(r,o){return e<=r&&r<=n&&t<=o&&o<=c}function f(r,o,s,a){var i=0,d=0;if(null==r||(i=h(r,s))!==(d=h(o,s))||p(r,o)<0^s>0)do{a.point(0===i||3===i?e:n,i>1?c:t)}while((i=(i+s+4)%4)!==d);else a.point(o[0],o[1])}function h(o,s){return(0,r.abs)(o[0]-e)<r.epsilon?s>0?0:3:(0,r.abs)(o[0]-n)<r.epsilon?s>0?2:1:(0,r.abs)(o[1]-t)<r.epsilon?s>0?1:0:s>0?3:2}function m(e,t){return p(e.x,t.x)}function p(e,t){var n=h(e,1),r=h(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(r){var h,p,_,g,v,y,j,b,x,w,M,S=r,k=(0,o.default)(),E={point:C,lineStart:function(){E.point=A,p&&p.push(_=[]),w=!0,x=!1,j=b=NaN},lineEnd:function(){h&&(A(g,v),y&&x&&k.rejoin(),h.push(k.result())),E.point=C,x&&S.lineEnd()},polygonStart:function(){S=k,h=[],p=[],M=!0},polygonEnd:function(){var t=function(){for(var t=0,n=0,r=p.length;n<r;++n)for(var o,s,a=p[n],i=1,d=a.length,u=a[0],l=u[0],f=u[1];i<d;++i)o=l,s=f,l=(u=a[i])[0],f=u[1],s<=c?f>c&&(l-o)*(c-s)>(f-s)*(e-o)&&++t:f<=c&&(l-o)*(c-s)<(f-s)*(e-o)&&--t;return t}(),n=M&&t,o=(h=(0,i.merge)(h)).length;(n||o)&&(r.polygonStart(),n&&(r.lineStart(),f(null,null,1,r),r.lineEnd()),o&&(0,a.default)(h,m,t,f,r),r.polygonEnd()),S=r,h=p=_=null}};function C(e,t){l(e,t)&&S.point(e,t)}function A(r,o){var a=l(r,o);if(p&&_.push([r,o]),w)g=r,v=o,y=a,w=!1,a&&(S.lineStart(),S.point(r,o));else if(a&&x)S.point(r,o);else{var i=[j=Math.max(u,Math.min(d,j)),b=Math.max(u,Math.min(d,b))],f=[r=Math.max(u,Math.min(d,r)),o=Math.max(u,Math.min(d,o))];(0,s.default)(i,f,e,t,n,c)?(x||(S.lineStart(),S.point(i[0],i[1])),S.point(f[0],f[1]),a||S.lineEnd(),M=!1):a&&(S.lineStart(),S.point(r,o),M=!1)}j=r,b=o,x=a}return E}}},"../../node_modules/d3-geo/src/clip/rejoin.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-geo/src/pointEqual.js"),o=n("../../node_modules/d3-geo/src/math.js");function s(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function a(e,t,n,a,d){var u,c,l=[],f=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n,a=e[0],i=e[t];if((0,r.default)(a,i)){if(!a[2]&&!i[2]){for(d.lineStart(),u=0;u<t;++u)d.point((a=e[u])[0],a[1]);return void d.lineEnd()}i[0]+=2*o.epsilon}l.push(n=new s(a,e,null,!0)),f.push(n.o=new s(a,null,n,!1)),l.push(n=new s(i,e,null,!1)),f.push(n.o=new s(i,null,n,!0))}})),l.length){for(f.sort(t),i(l),i(f),u=0,c=f.length;u<c;++u)f[u].e=n=!n;for(var h,m,p=l[0];;){for(var _=p,g=!0;_.v;)if((_=_.n)===p)return;h=_.z,d.lineStart();do{if(_.v=_.o.v=!0,_.e){if(g)for(u=0,c=h.length;u<c;++u)d.point((m=h[u])[0],m[1]);else a(_.x,_.n.x,1,d);_=_.n}else{if(g)for(h=_.p.z,u=h.length-1;u>=0;--u)d.point((m=h[u])[0],m[1]);else a(_.x,_.p.x,-1,d);_=_.p}h=(_=_.o).z,g=!g}while(!_.v);d.lineEnd()}}}function i(e){if(t=e.length){for(var t,n,r=0,o=e[0];++r<t;)o.n=n=e[r],n.p=o,o=n;o.n=n=e[0],n.p=o}}},"../../node_modules/d3-geo/src/compose.js":(e,t,n)=>{function r(e,t){function n(n,r){return n=e(n,r),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-geo/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-geo/src/contains.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var r=n("../../node_modules/d3-geo/src/polygonContains.js"),o=n("../../node_modules/d3-geo/src/distance.js"),s=n("../../node_modules/d3-geo/src/math.js"),a={Feature:function(e,t){return d(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,o=n.length;++r<o;)if(d(n[r].geometry,t))return!0;return!1}},i={Sphere:function(){return!0},Point:function(e,t){return u(e.coordinates,t)},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)if(u(n[r],t))return!0;return!1},LineString:function(e,t){return c(e.coordinates,t)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)if(c(n[r],t))return!0;return!1},Polygon:function(e,t){return l(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)if(l(n[r],t))return!0;return!1},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,o=n.length;++r<o;)if(d(n[r],t))return!0;return!1}};function d(e,t){return!(!e||!i.hasOwnProperty(e.type))&&i[e.type](e,t)}function u(e,t){return 0===(0,o.default)(e,t)}function c(e,t){for(var n,r,a,i=0,d=e.length;i<d;i++){if(0===(r=(0,o.default)(e[i],t)))return!0;if(i>0&&(a=(0,o.default)(e[i],e[i-1]))>0&&n<=a&&r<=a&&(n+r-a)*(1-Math.pow((n-r)/a,2))<s.epsilon2*a)return!0;n=r}return!1}function l(e,t){return!!(0,r.default)(e.map(f),h(t))}function f(e){return(e=e.map(h)).pop(),e}function h(e){return[e[0]*s.radians,e[1]*s.radians]}function m(e,t){return(e&&a.hasOwnProperty(e.type)?a[e.type]:d)(e,t)}},"../../node_modules/d3-geo/src/distance.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-geo/src/length.js"),o=[null,null],s={type:"LineString",coordinates:o};function a(e,t){return o[0]=e,o[1]=t,(0,r.default)(s)}},"../../node_modules/d3-geo/src/graticule.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,graticule10:()=>d});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-geo/src/math.js");function s(e,t,n){var s=(0,r.range)(e,t-o.epsilon,n).concat(t);return function(e){return s.map((function(t){return[e,t]}))}}function a(e,t,n){var s=(0,r.range)(e,t-o.epsilon,n).concat(t);return function(e){return s.map((function(t){return[t,e]}))}}function i(){var e,t,n,i,d,u,c,l,f,h,m,p,_=10,g=_,v=90,y=360,j=2.5;function b(){return{type:"MultiLineString",coordinates:x()}}function x(){return(0,r.range)((0,o.ceil)(i/v)*v,n,v).map(m).concat((0,r.range)((0,o.ceil)(l/y)*y,c,y).map(p)).concat((0,r.range)((0,o.ceil)(t/_)*_,e,_).filter((function(e){return(0,o.abs)(e%v)>o.epsilon})).map(f)).concat((0,r.range)((0,o.ceil)(u/g)*g,d,g).filter((function(e){return(0,o.abs)(e%y)>o.epsilon})).map(h))}return b.lines=function(){return x().map((function(e){return{type:"LineString",coordinates:e}}))},b.outline=function(){return{type:"Polygon",coordinates:[m(i).concat(p(c).slice(1),m(n).reverse().slice(1),p(l).reverse().slice(1))]}},b.extent=function(e){return arguments.length?b.extentMajor(e).extentMinor(e):b.extentMinor()},b.extentMajor=function(e){return arguments.length?(i=+e[0][0],n=+e[1][0],l=+e[0][1],c=+e[1][1],i>n&&(e=i,i=n,n=e),l>c&&(e=l,l=c,c=e),b.precision(j)):[[i,l],[n,c]]},b.extentMinor=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],u=+n[0][1],d=+n[1][1],t>e&&(n=t,t=e,e=n),u>d&&(n=u,u=d,d=n),b.precision(j)):[[t,u],[e,d]]},b.step=function(e){return arguments.length?b.stepMajor(e).stepMinor(e):b.stepMinor()},b.stepMajor=function(e){return arguments.length?(v=+e[0],y=+e[1],b):[v,y]},b.stepMinor=function(e){return arguments.length?(_=+e[0],g=+e[1],b):[_,g]},b.precision=function(r){return arguments.length?(j=+r,f=s(u,d,90),h=a(t,e,j),m=s(l,c,90),p=a(i,n,j),b):j},b.extentMajor([[-180,-90+o.epsilon],[180,90-o.epsilon]]).extentMinor([[-180,-80-o.epsilon],[180,80+o.epsilon]])}function d(){return i()()}},"../../node_modules/d3-geo/src/identity.js":(e,t,n)=>{function r(e){return e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-geo/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{geoAlbers:()=>g.default,geoAlbersUsa:()=>v.default,geoArea:()=>r.default,geoAzimuthalEqualArea:()=>y.default,geoAzimuthalEqualAreaRaw:()=>y.azimuthalEqualAreaRaw,geoAzimuthalEquidistant:()=>j.default,geoAzimuthalEquidistantRaw:()=>j.azimuthalEquidistantRaw,geoBounds:()=>o.default,geoCentroid:()=>s.default,geoCircle:()=>a.default,geoClipAntimeridian:()=>i.default,geoClipCircle:()=>d.default,geoClipExtent:()=>u.default,geoClipRectangle:()=>c.default,geoConicConformal:()=>b.default,geoConicConformalRaw:()=>b.conicConformalRaw,geoConicEqualArea:()=>x.default,geoConicEqualAreaRaw:()=>x.conicEqualAreaRaw,geoConicEquidistant:()=>w.default,geoConicEquidistantRaw:()=>w.conicEquidistantRaw,geoContains:()=>l.default,geoDistance:()=>f.default,geoEqualEarth:()=>M.default,geoEqualEarthRaw:()=>M.equalEarthRaw,geoEquirectangular:()=>S.default,geoEquirectangularRaw:()=>S.equirectangularRaw,geoGnomonic:()=>k.default,geoGnomonicRaw:()=>k.gnomonicRaw,geoGraticule:()=>h.default,geoGraticule10:()=>h.graticule10,geoIdentity:()=>E.default,geoInterpolate:()=>m.default,geoLength:()=>p.default,geoMercator:()=>A.default,geoMercatorRaw:()=>A.mercatorRaw,geoNaturalEarth1:()=>T.default,geoNaturalEarth1Raw:()=>T.naturalEarth1Raw,geoOrthographic:()=>R.default,geoOrthographicRaw:()=>R.orthographicRaw,geoPath:()=>_.default,geoProjection:()=>C.default,geoProjectionMutator:()=>C.projectionMutator,geoRotation:()=>P.default,geoStereographic:()=>q.default,geoStereographicRaw:()=>q.stereographicRaw,geoStream:()=>B.default,geoTransform:()=>O.default,geoTransverseMercator:()=>N.default,geoTransverseMercatorRaw:()=>N.transverseMercatorRaw});var r=n("../../node_modules/d3-geo/src/area.js"),o=n("../../node_modules/d3-geo/src/bounds.js"),s=n("../../node_modules/d3-geo/src/centroid.js"),a=n("../../node_modules/d3-geo/src/circle.js"),i=n("../../node_modules/d3-geo/src/clip/antimeridian.js"),d=n("../../node_modules/d3-geo/src/clip/circle.js"),u=n("../../node_modules/d3-geo/src/clip/extent.js"),c=n("../../node_modules/d3-geo/src/clip/rectangle.js"),l=n("../../node_modules/d3-geo/src/contains.js"),f=n("../../node_modules/d3-geo/src/distance.js"),h=n("../../node_modules/d3-geo/src/graticule.js"),m=n("../../node_modules/d3-geo/src/interpolate.js"),p=n("../../node_modules/d3-geo/src/length.js"),_=n("../../node_modules/d3-geo/src/path/index.js"),g=n("../../node_modules/d3-geo/src/projection/albers.js"),v=n("../../node_modules/d3-geo/src/projection/albersUsa.js"),y=n("../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js"),j=n("../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js"),b=n("../../node_modules/d3-geo/src/projection/conicConformal.js"),x=n("../../node_modules/d3-geo/src/projection/conicEqualArea.js"),w=n("../../node_modules/d3-geo/src/projection/conicEquidistant.js"),M=n("../../node_modules/d3-geo/src/projection/equalEarth.js"),S=n("../../node_modules/d3-geo/src/projection/equirectangular.js"),k=n("../../node_modules/d3-geo/src/projection/gnomonic.js"),E=n("../../node_modules/d3-geo/src/projection/identity.js"),C=n("../../node_modules/d3-geo/src/projection/index.js"),A=n("../../node_modules/d3-geo/src/projection/mercator.js"),T=n("../../node_modules/d3-geo/src/projection/naturalEarth1.js"),R=n("../../node_modules/d3-geo/src/projection/orthographic.js"),q=n("../../node_modules/d3-geo/src/projection/stereographic.js"),N=n("../../node_modules/d3-geo/src/projection/transverseMercator.js"),P=n("../../node_modules/d3-geo/src/rotation.js"),B=n("../../node_modules/d3-geo/src/stream.js"),O=n("../../node_modules/d3-geo/src/transform.js")},"../../node_modules/d3-geo/src/interpolate.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-geo/src/math.js");function o(e,t){var n=e[0]*r.radians,o=e[1]*r.radians,s=t[0]*r.radians,a=t[1]*r.radians,i=(0,r.cos)(o),d=(0,r.sin)(o),u=(0,r.cos)(a),c=(0,r.sin)(a),l=i*(0,r.cos)(n),f=i*(0,r.sin)(n),h=u*(0,r.cos)(s),m=u*(0,r.sin)(s),p=2*(0,r.asin)((0,r.sqrt)((0,r.haversin)(a-o)+i*u*(0,r.haversin)(s-n))),_=(0,r.sin)(p),g=p?function(e){var t=(0,r.sin)(e*=p)/_,n=(0,r.sin)(p-e)/_,o=n*l+t*h,s=n*f+t*m,a=n*d+t*c;return[(0,r.atan2)(s,o)*r.degrees,(0,r.atan2)(a,(0,r.sqrt)(o*o+s*s))*r.degrees]}:function(){return[n*r.degrees,o*r.degrees]};return g.distance=p,g}},"../../node_modules/d3-geo/src/length.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var r,o,s,a=n("../../node_modules/d3-geo/src/adder.js"),i=n("../../node_modules/d3-geo/src/math.js"),d=n("../../node_modules/d3-geo/src/noop.js"),u=n("../../node_modules/d3-geo/src/stream.js"),c=(0,a.default)(),l={sphere:d.default,point:d.default,lineStart:function(){l.point=h,l.lineEnd=f},lineEnd:d.default,polygonStart:d.default,polygonEnd:d.default};function f(){l.point=l.lineEnd=d.default}function h(e,t){e*=i.radians,t*=i.radians,r=e,o=(0,i.sin)(t),s=(0,i.cos)(t),l.point=m}function m(e,t){e*=i.radians,t*=i.radians;var n=(0,i.sin)(t),a=(0,i.cos)(t),d=(0,i.abs)(e-r),u=(0,i.cos)(d),l=a*(0,i.sin)(d),f=s*n-o*a*u,h=o*n+s*a*u;c.add((0,i.atan2)((0,i.sqrt)(l*l+f*f),h)),r=e,o=n,s=a}function p(e){return c.reset(),(0,u.default)(e,l),+c}},"../../node_modules/d3-geo/src/math.js":(e,t,n)=>{n.r(t),n.d(t,{abs:()=>l,acos:()=>M,asin:()=>S,atan:()=>f,atan2:()=>h,ceil:()=>p,cos:()=>m,degrees:()=>u,epsilon:()=>r,epsilon2:()=>o,exp:()=>_,floor:()=>g,halfPi:()=>a,haversin:()=>k,log:()=>v,pi:()=>s,pow:()=>y,quarterPi:()=>i,radians:()=>c,sign:()=>b,sin:()=>j,sqrt:()=>x,tan:()=>w,tau:()=>d});var r=1e-6,o=1e-12,s=Math.PI,a=s/2,i=s/4,d=2*s,u=180/s,c=s/180,l=Math.abs,f=Math.atan,h=Math.atan2,m=Math.cos,p=Math.ceil,_=Math.exp,g=Math.floor,v=Math.log,y=Math.pow,j=Math.sin,b=Math.sign||function(e){return e>0?1:e<0?-1:0},x=Math.sqrt,w=Math.tan;function M(e){return e>1?0:e<-1?s:Math.acos(e)}function S(e){return e>1?a:e<-1?-a:Math.asin(e)}function k(e){return(e=j(e/2))*e}},"../../node_modules/d3-geo/src/noop.js":(e,t,n)=>{function r(){}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-geo/src/path/area.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>g});var r,o,s,a,i=n("../../node_modules/d3-geo/src/adder.js"),d=n("../../node_modules/d3-geo/src/math.js"),u=n("../../node_modules/d3-geo/src/noop.js"),c=(0,i.default)(),l=(0,i.default)(),f={point:u.default,lineStart:u.default,lineEnd:u.default,polygonStart:function(){f.lineStart=h,f.lineEnd=_},polygonEnd:function(){f.lineStart=f.lineEnd=f.point=u.default,c.add((0,d.abs)(l)),l.reset()},result:function(){var e=c/2;return c.reset(),e}};function h(){f.point=m}function m(e,t){f.point=p,r=s=e,o=a=t}function p(e,t){l.add(a*e-s*t),s=e,a=t}function _(){p(r,o)}const g=f},"../../node_modules/d3-geo/src/path/bounds.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-geo/src/noop.js"),o=1/0,s=o,a=-o,i=a;const d={point:function(e,t){e<o&&(o=e),e>a&&(a=e),t<s&&(s=t),t>i&&(i=t)},lineStart:r.default,lineEnd:r.default,polygonStart:r.default,polygonEnd:r.default,result:function(){var e=[[o,s],[a,i]];return a=i=-(s=o=1/0),e}}},"../../node_modules/d3-geo/src/path/centroid.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>E});var r,o,s,a,i=n("../../node_modules/d3-geo/src/math.js"),d=0,u=0,c=0,l=0,f=0,h=0,m=0,p=0,_=0,g={point:v,lineStart:y,lineEnd:x,polygonStart:function(){g.lineStart=w,g.lineEnd=M},polygonEnd:function(){g.point=v,g.lineStart=y,g.lineEnd=x},result:function(){var e=_?[m/_,p/_]:h?[l/h,f/h]:c?[d/c,u/c]:[NaN,NaN];return d=u=c=l=f=h=m=p=_=0,e}};function v(e,t){d+=e,u+=t,++c}function y(){g.point=j}function j(e,t){g.point=b,v(s=e,a=t)}function b(e,t){var n=e-s,r=t-a,o=(0,i.sqrt)(n*n+r*r);l+=o*(s+e)/2,f+=o*(a+t)/2,h+=o,v(s=e,a=t)}function x(){g.point=v}function w(){g.point=S}function M(){k(r,o)}function S(e,t){g.point=k,v(r=s=e,o=a=t)}function k(e,t){var n=e-s,r=t-a,o=(0,i.sqrt)(n*n+r*r);l+=o*(s+e)/2,f+=o*(a+t)/2,h+=o,m+=(o=a*e-s*t)*(s+e),p+=o*(a+t),_+=3*o,v(s=e,a=t)}const E=g},"../../node_modules/d3-geo/src/path/context.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/noop.js");function s(e){this._context=e}s.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._context.moveTo(e,t),this._point=1;break;case 1:this._context.lineTo(e,t);break;default:this._context.moveTo(e+this._radius,t),this._context.arc(e,t,this._radius,0,r.tau)}},result:o.default}},"../../node_modules/d3-geo/src/path/index.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n("../../node_modules/d3-geo/src/identity.js"),o=n("../../node_modules/d3-geo/src/stream.js"),s=n("../../node_modules/d3-geo/src/path/area.js"),a=n("../../node_modules/d3-geo/src/path/bounds.js"),i=n("../../node_modules/d3-geo/src/path/centroid.js"),d=n("../../node_modules/d3-geo/src/path/context.js"),u=n("../../node_modules/d3-geo/src/path/measure.js"),c=n("../../node_modules/d3-geo/src/path/string.js");function l(e,t){var n,l,f=4.5;function h(e){return e&&("function"==typeof f&&l.pointRadius(+f.apply(this,arguments)),(0,o.default)(e,n(l))),l.result()}return h.area=function(e){return(0,o.default)(e,n(s.default)),s.default.result()},h.measure=function(e){return(0,o.default)(e,n(u.default)),u.default.result()},h.bounds=function(e){return(0,o.default)(e,n(a.default)),a.default.result()},h.centroid=function(e){return(0,o.default)(e,n(i.default)),i.default.result()},h.projection=function(t){return arguments.length?(n=null==t?(e=null,r.default):(e=t).stream,h):e},h.context=function(e){return arguments.length?(l=null==e?(t=null,new c.default):new d.default(t=e),"function"!=typeof f&&l.pointRadius(f),h):t},h.pointRadius=function(e){return arguments.length?(f="function"==typeof e?e:(l.pointRadius(+e),+e),h):f},h.projection(e).context(t)}},"../../node_modules/d3-geo/src/path/measure.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var r,o,s,a,i,d=n("../../node_modules/d3-geo/src/adder.js"),u=n("../../node_modules/d3-geo/src/math.js"),c=n("../../node_modules/d3-geo/src/noop.js"),l=(0,d.default)(),f={point:c.default,lineStart:function(){f.point=h},lineEnd:function(){r&&m(o,s),f.point=c.default},polygonStart:function(){r=!0},polygonEnd:function(){r=null},result:function(){var e=+l;return l.reset(),e}};function h(e,t){f.point=m,o=a=e,s=i=t}function m(e,t){a-=e,i-=t,l.add((0,u.sqrt)(a*a+i*i)),a=e,i=t}const p=f},"../../node_modules/d3-geo/src/path/string.js":(e,t,n)=>{function r(){this._string=[]}function o(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}n.r(t),n.d(t,{default:()=>r}),r.prototype={_radius:4.5,_circle:o(4.5),pointRadius:function(e){return(e=+e)!==this._radius&&(this._radius=e,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._string.push("M",e,",",t),this._point=1;break;case 1:this._string.push("L",e,",",t);break;default:null==this._circle&&(this._circle=o(this._radius)),this._string.push("M",e,",",t,this._circle)}},result:function(){if(this._string.length){var e=this._string.join("");return this._string=[],e}return null}}},"../../node_modules/d3-geo/src/pointEqual.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-geo/src/math.js");function o(e,t){return(0,r.abs)(e[0]-t[0])<r.epsilon&&(0,r.abs)(e[1]-t[1])<r.epsilon}},"../../node_modules/d3-geo/src/polygonContains.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-geo/src/adder.js"),o=n("../../node_modules/d3-geo/src/cartesian.js"),s=n("../../node_modules/d3-geo/src/math.js"),a=(0,r.default)();function i(e){return(0,s.abs)(e[0])<=s.pi?e[0]:(0,s.sign)(e[0])*(((0,s.abs)(e[0])+s.pi)%s.tau-s.pi)}function d(e,t){var n=i(t),r=t[1],d=(0,s.sin)(r),u=[(0,s.sin)(n),-(0,s.cos)(n),0],c=0,l=0;a.reset(),1===d?r=s.halfPi+s.epsilon:-1===d&&(r=-s.halfPi-s.epsilon);for(var f=0,h=e.length;f<h;++f)if(p=(m=e[f]).length)for(var m,p,_=m[p-1],g=i(_),v=_[1]/2+s.quarterPi,y=(0,s.sin)(v),j=(0,s.cos)(v),b=0;b<p;++b,g=w,y=S,j=k,_=x){var x=m[b],w=i(x),M=x[1]/2+s.quarterPi,S=(0,s.sin)(M),k=(0,s.cos)(M),E=w-g,C=E>=0?1:-1,A=C*E,T=A>s.pi,R=y*S;if(a.add((0,s.atan2)(R*C*(0,s.sin)(A),j*k+R*(0,s.cos)(A))),c+=T?E+C*s.tau:E,T^g>=n^w>=n){var q=(0,o.cartesianCross)((0,o.cartesian)(_),(0,o.cartesian)(x));(0,o.cartesianNormalizeInPlace)(q);var N=(0,o.cartesianCross)(u,q);(0,o.cartesianNormalizeInPlace)(N);var P=(T^E>=0?-1:1)*(0,s.asin)(N[2]);(r>P||r===P&&(q[0]||q[1]))&&(l+=T^E>=0?1:-1)}}return(c<-s.epsilon||c<s.epsilon&&a<-s.epsilon)^1&l}},"../../node_modules/d3-geo/src/projection/albers.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-geo/src/projection/conicEqualArea.js");function o(){return(0,r.default)().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}},"../../node_modules/d3-geo/src/projection/albersUsa.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/albers.js"),s=n("../../node_modules/d3-geo/src/projection/conicEqualArea.js"),a=n("../../node_modules/d3-geo/src/projection/fit.js");function i(){var e,t,n,i,d,u,c=(0,o.default)(),l=(0,s.default)().rotate([154,0]).center([-2,58.5]).parallels([55,65]),f=(0,s.default)().rotate([157,0]).center([-3,19.9]).parallels([8,18]),h={point:function(e,t){u=[e,t]}};function m(e){var t=e[0],r=e[1];return u=null,n.point(t,r),u||(i.point(t,r),u)||(d.point(t,r),u)}function p(){return e=t=null,m}return m.invert=function(e){var t=c.scale(),n=c.translate(),r=(e[0]-n[0])/t,o=(e[1]-n[1])/t;return(o>=.12&&o<.234&&r>=-.425&&r<-.214?l:o>=.166&&o<.234&&r>=-.214&&r<-.115?f:c).invert(e)},m.stream=function(n){return e&&t===n?e:(r=[c.stream(t=n),l.stream(n),f.stream(n)],o=r.length,e={point:function(e,t){for(var n=-1;++n<o;)r[n].point(e,t)},sphere:function(){for(var e=-1;++e<o;)r[e].sphere()},lineStart:function(){for(var e=-1;++e<o;)r[e].lineStart()},lineEnd:function(){for(var e=-1;++e<o;)r[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<o;)r[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<o;)r[e].polygonEnd()}});var r,o},m.precision=function(e){return arguments.length?(c.precision(e),l.precision(e),f.precision(e),p()):c.precision()},m.scale=function(e){return arguments.length?(c.scale(e),l.scale(.35*e),f.scale(e),m.translate(c.translate())):c.scale()},m.translate=function(e){if(!arguments.length)return c.translate();var t=c.scale(),o=+e[0],s=+e[1];return n=c.translate(e).clipExtent([[o-.455*t,s-.238*t],[o+.455*t,s+.238*t]]).stream(h),i=l.translate([o-.307*t,s+.201*t]).clipExtent([[o-.425*t+r.epsilon,s+.12*t+r.epsilon],[o-.214*t-r.epsilon,s+.234*t-r.epsilon]]).stream(h),d=f.translate([o-.205*t,s+.212*t]).clipExtent([[o-.214*t+r.epsilon,s+.166*t+r.epsilon],[o-.115*t-r.epsilon,s+.234*t-r.epsilon]]).stream(h),p()},m.fitExtent=function(e,t){return(0,a.fitExtent)(m,e,t)},m.fitSize=function(e,t){return(0,a.fitSize)(m,e,t)},m.fitWidth=function(e,t){return(0,a.fitWidth)(m,e,t)},m.fitHeight=function(e,t){return(0,a.fitHeight)(m,e,t)},m.scale(1070)}},"../../node_modules/d3-geo/src/projection/azimuthal.js":(e,t,n)=>{n.r(t),n.d(t,{azimuthalInvert:()=>s,azimuthalRaw:()=>o});var r=n("../../node_modules/d3-geo/src/math.js");function o(e){return function(t,n){var o=(0,r.cos)(t),s=(0,r.cos)(n),a=e(o*s);return[a*s*(0,r.sin)(t),a*(0,r.sin)(n)]}}function s(e){return function(t,n){var o=(0,r.sqrt)(t*t+n*n),s=e(o),a=(0,r.sin)(s),i=(0,r.cos)(s);return[(0,r.atan2)(t*a,o*i),(0,r.asin)(o&&n*a/o)]}}},"../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js":(e,t,n)=>{n.r(t),n.d(t,{azimuthalEqualAreaRaw:()=>a,default:()=>i});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/azimuthal.js"),s=n("../../node_modules/d3-geo/src/projection/index.js"),a=(0,o.azimuthalRaw)((function(e){return(0,r.sqrt)(2/(1+e))}));function i(){return(0,s.default)(a).scale(124.75).clipAngle(179.999)}a.invert=(0,o.azimuthalInvert)((function(e){return 2*(0,r.asin)(e/2)}))},"../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js":(e,t,n)=>{n.r(t),n.d(t,{azimuthalEquidistantRaw:()=>a,default:()=>i});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/azimuthal.js"),s=n("../../node_modules/d3-geo/src/projection/index.js"),a=(0,o.azimuthalRaw)((function(e){return(e=(0,r.acos)(e))&&e/(0,r.sin)(e)}));function i(){return(0,s.default)(a).scale(79.4188).clipAngle(179.999)}a.invert=(0,o.azimuthalInvert)((function(e){return e}))},"../../node_modules/d3-geo/src/projection/conic.js":(e,t,n)=>{n.r(t),n.d(t,{conicProjection:()=>s});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/index.js");function s(e){var t=0,n=r.pi/3,s=(0,o.projectionMutator)(e),a=s(t,n);return a.parallels=function(e){return arguments.length?s(t=e[0]*r.radians,n=e[1]*r.radians):[t*r.degrees,n*r.degrees]},a}},"../../node_modules/d3-geo/src/projection/conicConformal.js":(e,t,n)=>{n.r(t),n.d(t,{conicConformalRaw:()=>i,default:()=>d});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/conic.js"),s=n("../../node_modules/d3-geo/src/projection/mercator.js");function a(e){return(0,r.tan)((r.halfPi+e)/2)}function i(e,t){var n=(0,r.cos)(e),o=e===t?(0,r.sin)(e):(0,r.log)(n/(0,r.cos)(t))/(0,r.log)(a(t)/a(e)),i=n*(0,r.pow)(a(e),o)/o;if(!o)return s.mercatorRaw;function d(e,t){i>0?t<-r.halfPi+r.epsilon&&(t=-r.halfPi+r.epsilon):t>r.halfPi-r.epsilon&&(t=r.halfPi-r.epsilon);var n=i/(0,r.pow)(a(t),o);return[n*(0,r.sin)(o*e),i-n*(0,r.cos)(o*e)]}return d.invert=function(e,t){var n=i-t,s=(0,r.sign)(o)*(0,r.sqrt)(e*e+n*n),a=(0,r.atan2)(e,(0,r.abs)(n))*(0,r.sign)(n);return n*o<0&&(a-=r.pi*(0,r.sign)(e)*(0,r.sign)(n)),[a/o,2*(0,r.atan)((0,r.pow)(i/s,1/o))-r.halfPi]},d}function d(){return(0,o.conicProjection)(i).scale(109.5).parallels([30,30])}},"../../node_modules/d3-geo/src/projection/conicEqualArea.js":(e,t,n)=>{n.r(t),n.d(t,{conicEqualAreaRaw:()=>a,default:()=>i});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/conic.js"),s=n("../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js");function a(e,t){var n=(0,r.sin)(e),o=(n+(0,r.sin)(t))/2;if((0,r.abs)(o)<r.epsilon)return(0,s.cylindricalEqualAreaRaw)(e);var a=1+n*(2*o-n),i=(0,r.sqrt)(a)/o;function d(e,t){var n=(0,r.sqrt)(a-2*o*(0,r.sin)(t))/o;return[n*(0,r.sin)(e*=o),i-n*(0,r.cos)(e)]}return d.invert=function(e,t){var n=i-t,s=(0,r.atan2)(e,(0,r.abs)(n))*(0,r.sign)(n);return n*o<0&&(s-=r.pi*(0,r.sign)(e)*(0,r.sign)(n)),[s/o,(0,r.asin)((a-(e*e+n*n)*o*o)/(2*o))]},d}function i(){return(0,o.conicProjection)(a).scale(155.424).center([0,33.6442])}},"../../node_modules/d3-geo/src/projection/conicEquidistant.js":(e,t,n)=>{n.r(t),n.d(t,{conicEquidistantRaw:()=>a,default:()=>i});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/conic.js"),s=n("../../node_modules/d3-geo/src/projection/equirectangular.js");function a(e,t){var n=(0,r.cos)(e),o=e===t?(0,r.sin)(e):(n-(0,r.cos)(t))/(t-e),a=n/o+e;if((0,r.abs)(o)<r.epsilon)return s.equirectangularRaw;function i(e,t){var n=a-t,s=o*e;return[n*(0,r.sin)(s),a-n*(0,r.cos)(s)]}return i.invert=function(e,t){var n=a-t,s=(0,r.atan2)(e,(0,r.abs)(n))*(0,r.sign)(n);return n*o<0&&(s-=r.pi*(0,r.sign)(e)*(0,r.sign)(n)),[s/o,a-(0,r.sign)(o)*(0,r.sqrt)(e*e+n*n)]},i}function i(){return(0,o.conicProjection)(a).scale(131.154).center([0,13.9389])}},"../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js":(e,t,n)=>{n.r(t),n.d(t,{cylindricalEqualAreaRaw:()=>o});var r=n("../../node_modules/d3-geo/src/math.js");function o(e){var t=(0,r.cos)(e);function n(e,n){return[e*t,(0,r.sin)(n)/t]}return n.invert=function(e,n){return[e/t,(0,r.asin)(n*t)]},n}},"../../node_modules/d3-geo/src/projection/equalEarth.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l,equalEarthRaw:()=>c});var r=n("../../node_modules/d3-geo/src/projection/index.js"),o=n("../../node_modules/d3-geo/src/math.js"),s=1.340264,a=-.081106,i=893e-6,d=.003796,u=(0,o.sqrt)(3)/2;function c(e,t){var n=(0,o.asin)(u*(0,o.sin)(t)),r=n*n,c=r*r*r;return[e*(0,o.cos)(n)/(u*(s+3*a*r+c*(7*i+9*d*r))),n*(s+a*r+c*(i+d*r))]}function l(){return(0,r.default)(c).scale(177.158)}c.invert=function(e,t){for(var n,r=t,c=r*r,l=c*c*c,f=0;f<12&&(l=(c=(r-=n=(r*(s+a*c+l*(i+d*c))-t)/(s+3*a*c+l*(7*i+9*d*c)))*r)*c*c,!((0,o.abs)(n)<o.epsilon2));++f);return[u*e*(s+3*a*c+l*(7*i+9*d*c))/(0,o.cos)(r),(0,o.asin)((0,o.sin)(r)/u)]}},"../../node_modules/d3-geo/src/projection/equirectangular.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,equirectangularRaw:()=>o});var r=n("../../node_modules/d3-geo/src/projection/index.js");function o(e,t){return[e,t]}function s(){return(0,r.default)(o).scale(152.63)}o.invert=o},"../../node_modules/d3-geo/src/projection/fit.js":(e,t,n)=>{n.r(t),n.d(t,{fitExtent:()=>a,fitHeight:()=>u,fitSize:()=>i,fitWidth:()=>d});var r=n("../../node_modules/d3-geo/src/stream.js"),o=n("../../node_modules/d3-geo/src/path/bounds.js");function s(e,t,n){var s=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=s&&e.clipExtent(null),(0,r.default)(n,e.stream(o.default)),t(o.default.result()),null!=s&&e.clipExtent(s),e}function a(e,t,n){return s(e,(function(n){var r=t[1][0]-t[0][0],o=t[1][1]-t[0][1],s=Math.min(r/(n[1][0]-n[0][0]),o/(n[1][1]-n[0][1])),a=+t[0][0]+(r-s*(n[1][0]+n[0][0]))/2,i=+t[0][1]+(o-s*(n[1][1]+n[0][1]))/2;e.scale(150*s).translate([a,i])}),n)}function i(e,t,n){return a(e,[[0,0],t],n)}function d(e,t,n){return s(e,(function(n){var r=+t,o=r/(n[1][0]-n[0][0]),s=(r-o*(n[1][0]+n[0][0]))/2,a=-o*n[0][1];e.scale(150*o).translate([s,a])}),n)}function u(e,t,n){return s(e,(function(n){var r=+t,o=r/(n[1][1]-n[0][1]),s=-o*n[0][0],a=(r-o*(n[1][1]+n[0][1]))/2;e.scale(150*o).translate([s,a])}),n)}},"../../node_modules/d3-geo/src/projection/gnomonic.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,gnomonicRaw:()=>a});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/azimuthal.js"),s=n("../../node_modules/d3-geo/src/projection/index.js");function a(e,t){var n=(0,r.cos)(t),o=(0,r.cos)(e)*n;return[n*(0,r.sin)(e)/o,(0,r.sin)(t)/o]}function i(){return(0,s.default)(a).scale(144.049).clipAngle(60)}a.invert=(0,o.azimuthalInvert)(r.atan)},"../../node_modules/d3-geo/src/projection/identity.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-geo/src/clip/rectangle.js"),o=n("../../node_modules/d3-geo/src/identity.js"),s=n("../../node_modules/d3-geo/src/transform.js"),a=n("../../node_modules/d3-geo/src/projection/fit.js"),i=n("../../node_modules/d3-geo/src/math.js");function d(){var e,t,n,d,u,c,l,f=1,h=0,m=0,p=1,_=1,g=0,v=null,y=1,j=1,b=(0,s.transformer)({point:function(e,t){var n=M([e,t]);this.stream.point(n[0],n[1])}}),x=o.default;function w(){return y=f*p,j=f*_,c=l=null,M}function M(n){var r=n[0]*y,o=n[1]*j;if(g){var s=o*e-r*t;r=r*e+o*t,o=s}return[r+h,o+m]}return M.invert=function(n){var r=n[0]-h,o=n[1]-m;if(g){var s=o*e+r*t;r=r*e-o*t,o=s}return[r/y,o/j]},M.stream=function(e){return c&&l===e?c:c=b(x(l=e))},M.postclip=function(e){return arguments.length?(x=e,v=n=d=u=null,w()):x},M.clipExtent=function(e){return arguments.length?(x=null==e?(v=n=d=u=null,o.default):(0,r.default)(v=+e[0][0],n=+e[0][1],d=+e[1][0],u=+e[1][1]),w()):null==v?null:[[v,n],[d,u]]},M.scale=function(e){return arguments.length?(f=+e,w()):f},M.translate=function(e){return arguments.length?(h=+e[0],m=+e[1],w()):[h,m]},M.angle=function(n){return arguments.length?(g=n%360*i.radians,t=(0,i.sin)(g),e=(0,i.cos)(g),w()):g*i.degrees},M.reflectX=function(e){return arguments.length?(p=e?-1:1,w()):p<0},M.reflectY=function(e){return arguments.length?(_=e?-1:1,w()):_<0},M.fitExtent=function(e,t){return(0,a.fitExtent)(M,e,t)},M.fitSize=function(e,t){return(0,a.fitSize)(M,e,t)},M.fitWidth=function(e,t){return(0,a.fitWidth)(M,e,t)},M.fitHeight=function(e,t){return(0,a.fitHeight)(M,e,t)},M}},"../../node_modules/d3-geo/src/projection/index.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>_,projectionMutator:()=>g});var r=n("../../node_modules/d3-geo/src/clip/antimeridian.js"),o=n("../../node_modules/d3-geo/src/clip/circle.js"),s=n("../../node_modules/d3-geo/src/clip/rectangle.js"),a=n("../../node_modules/d3-geo/src/compose.js"),i=n("../../node_modules/d3-geo/src/identity.js"),d=n("../../node_modules/d3-geo/src/math.js"),u=n("../../node_modules/d3-geo/src/rotation.js"),c=n("../../node_modules/d3-geo/src/transform.js"),l=n("../../node_modules/d3-geo/src/projection/fit.js"),f=n("../../node_modules/d3-geo/src/projection/resample.js"),h=(0,c.transformer)({point:function(e,t){this.stream.point(e*d.radians,t*d.radians)}});function m(e,t,n,r,o){function s(s,a){return[t+e*(s*=r),n-e*(a*=o)]}return s.invert=function(s,a){return[(s-t)/e*r,(n-a)/e*o]},s}function p(e,t,n,r,o,s){var a=(0,d.cos)(s),i=(0,d.sin)(s),u=a*e,c=i*e,l=a/e,f=i/e,h=(i*n-a*t)/e,m=(i*t+a*n)/e;function p(e,s){return[u*(e*=r)-c*(s*=o)+t,n-c*e-u*s]}return p.invert=function(e,t){return[r*(l*e-f*t+h),o*(m-f*e-l*t)]},p}function _(e){return g((function(){return e}))()}function g(e){var t,n,_,g,v,y,j,b,x,w,M=150,S=480,k=250,E=0,C=0,A=0,T=0,R=0,q=0,N=1,P=1,B=null,O=r.default,z=null,D=i.default,I=.5;function L(e){return b(e[0]*d.radians,e[1]*d.radians)}function F(e){return(e=b.invert(e[0],e[1]))&&[e[0]*d.degrees,e[1]*d.degrees]}function Y(){var e=p(M,0,0,N,P,q).apply(null,t(E,C)),r=(q?p:m)(M,S-e[0],k-e[1],N,P,q);return n=(0,u.rotateRadians)(A,T,R),j=(0,a.default)(t,r),b=(0,a.default)(n,j),y=(0,f.default)(j,I),G()}function G(){return x=w=null,L}return L.stream=function(e){return x&&w===e?x:x=h(function(e){return(0,c.transformer)({point:function(t,n){var r=e(t,n);return this.stream.point(r[0],r[1])}})}(n)(O(y(D(w=e)))))},L.preclip=function(e){return arguments.length?(O=e,B=void 0,G()):O},L.postclip=function(e){return arguments.length?(D=e,z=_=g=v=null,G()):D},L.clipAngle=function(e){return arguments.length?(O=+e?(0,o.default)(B=e*d.radians):(B=null,r.default),G()):B*d.degrees},L.clipExtent=function(e){return arguments.length?(D=null==e?(z=_=g=v=null,i.default):(0,s.default)(z=+e[0][0],_=+e[0][1],g=+e[1][0],v=+e[1][1]),G()):null==z?null:[[z,_],[g,v]]},L.scale=function(e){return arguments.length?(M=+e,Y()):M},L.translate=function(e){return arguments.length?(S=+e[0],k=+e[1],Y()):[S,k]},L.center=function(e){return arguments.length?(E=e[0]%360*d.radians,C=e[1]%360*d.radians,Y()):[E*d.degrees,C*d.degrees]},L.rotate=function(e){return arguments.length?(A=e[0]%360*d.radians,T=e[1]%360*d.radians,R=e.length>2?e[2]%360*d.radians:0,Y()):[A*d.degrees,T*d.degrees,R*d.degrees]},L.angle=function(e){return arguments.length?(q=e%360*d.radians,Y()):q*d.degrees},L.reflectX=function(e){return arguments.length?(N=e?-1:1,Y()):N<0},L.reflectY=function(e){return arguments.length?(P=e?-1:1,Y()):P<0},L.precision=function(e){return arguments.length?(y=(0,f.default)(j,I=e*e),G()):(0,d.sqrt)(I)},L.fitExtent=function(e,t){return(0,l.fitExtent)(L,e,t)},L.fitSize=function(e,t){return(0,l.fitSize)(L,e,t)},L.fitWidth=function(e,t){return(0,l.fitWidth)(L,e,t)},L.fitHeight=function(e,t){return(0,l.fitHeight)(L,e,t)},function(){return t=e.apply(this,arguments),L.invert=t.invert&&F,Y()}}},"../../node_modules/d3-geo/src/projection/mercator.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,mercatorProjection:()=>d,mercatorRaw:()=>a});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/rotation.js"),s=n("../../node_modules/d3-geo/src/projection/index.js");function a(e,t){return[e,(0,r.log)((0,r.tan)((r.halfPi+t)/2))]}function i(){return d(a).scale(961/r.tau)}function d(e){var t,n,i,d=(0,s.default)(e),u=d.center,c=d.scale,l=d.translate,f=d.clipExtent,h=null;function m(){var s=r.pi*c(),u=d((0,o.default)(d.rotate()).invert([0,0]));return f(null==h?[[u[0]-s,u[1]-s],[u[0]+s,u[1]+s]]:e===a?[[Math.max(u[0]-s,h),t],[Math.min(u[0]+s,n),i]]:[[h,Math.max(u[1]-s,t)],[n,Math.min(u[1]+s,i)]])}return d.scale=function(e){return arguments.length?(c(e),m()):c()},d.translate=function(e){return arguments.length?(l(e),m()):l()},d.center=function(e){return arguments.length?(u(e),m()):u()},d.clipExtent=function(e){return arguments.length?(null==e?h=t=n=i=null:(h=+e[0][0],t=+e[0][1],n=+e[1][0],i=+e[1][1]),m()):null==h?null:[[h,t],[n,i]]},m()}a.invert=function(e,t){return[e,2*(0,r.atan)((0,r.exp)(t))-r.halfPi]}},"../../node_modules/d3-geo/src/projection/naturalEarth1.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,naturalEarth1Raw:()=>s});var r=n("../../node_modules/d3-geo/src/projection/index.js"),o=n("../../node_modules/d3-geo/src/math.js");function s(e,t){var n=t*t,r=n*n;return[e*(.8707-.131979*n+r*(r*(.003971*n-.001529*r)-.013791)),t*(1.007226+n*(.015085+r*(.028874*n-.044475-.005916*r)))]}function a(){return(0,r.default)(s).scale(175.295)}s.invert=function(e,t){var n,r=t,s=25;do{var a=r*r,i=a*a;r-=n=(r*(1.007226+a*(.015085+i*(.028874*a-.044475-.005916*i)))-t)/(1.007226+a*(.045255+i*(.259866*a-.311325-.005916*11*i)))}while((0,o.abs)(n)>o.epsilon&&--s>0);return[e/(.8707+(a=r*r)*(a*(a*a*a*(.003971-.001529*a)-.013791)-.131979)),r]}},"../../node_modules/d3-geo/src/projection/orthographic.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,orthographicRaw:()=>a});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/azimuthal.js"),s=n("../../node_modules/d3-geo/src/projection/index.js");function a(e,t){return[(0,r.cos)(t)*(0,r.sin)(e),(0,r.sin)(t)]}function i(){return(0,s.default)(a).scale(249.5).clipAngle(90+r.epsilon)}a.invert=(0,o.azimuthalInvert)(r.asin)},"../../node_modules/d3-geo/src/projection/resample.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-geo/src/cartesian.js"),o=n("../../node_modules/d3-geo/src/math.js"),s=n("../../node_modules/d3-geo/src/transform.js"),a=16,i=(0,o.cos)(30*o.radians);function d(e,t){return+t?function(e,t){function n(r,s,a,d,u,c,l,f,h,m,p,_,g,v){var y=l-r,j=f-s,b=y*y+j*j;if(b>4*t&&g--){var x=d+m,w=u+p,M=c+_,S=(0,o.sqrt)(x*x+w*w+M*M),k=(0,o.asin)(M/=S),E=(0,o.abs)((0,o.abs)(M)-1)<o.epsilon||(0,o.abs)(a-h)<o.epsilon?(a+h)/2:(0,o.atan2)(w,x),C=e(E,k),A=C[0],T=C[1],R=A-r,q=T-s,N=j*R-y*q;(N*N/b>t||(0,o.abs)((y*R+j*q)/b-.5)>.3||d*m+u*p+c*_<i)&&(n(r,s,a,d,u,c,A,T,E,x/=S,w/=S,M,g,v),v.point(A,T),n(A,T,E,x,w,M,l,f,h,m,p,_,g,v))}}return function(t){var o,s,i,d,u,c,l,f,h,m,p,_,g={point:v,lineStart:y,lineEnd:b,polygonStart:function(){t.polygonStart(),g.lineStart=x},polygonEnd:function(){t.polygonEnd(),g.lineStart=y}};function v(n,r){n=e(n,r),t.point(n[0],n[1])}function y(){f=NaN,g.point=j,t.lineStart()}function j(o,s){var i=(0,r.cartesian)([o,s]),d=e(o,s);n(f,h,l,m,p,_,f=d[0],h=d[1],l=o,m=i[0],p=i[1],_=i[2],a,t),t.point(f,h)}function b(){g.point=v,t.lineEnd()}function x(){y(),g.point=w,g.lineEnd=M}function w(e,t){j(o=e,t),s=f,i=h,d=m,u=p,c=_,g.point=j}function M(){n(f,h,l,m,p,_,s,i,o,d,u,c,a,t),g.lineEnd=b,b()}return g}}(e,t):function(e){return(0,s.transformer)({point:function(t,n){t=e(t,n),this.stream.point(t[0],t[1])}})}(e)}},"../../node_modules/d3-geo/src/projection/stereographic.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,stereographicRaw:()=>a});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/azimuthal.js"),s=n("../../node_modules/d3-geo/src/projection/index.js");function a(e,t){var n=(0,r.cos)(t),o=1+(0,r.cos)(e)*n;return[n*(0,r.sin)(e)/o,(0,r.sin)(t)/o]}function i(){return(0,s.default)(a).scale(250).clipAngle(142)}a.invert=(0,o.azimuthalInvert)((function(e){return 2*(0,r.atan)(e)}))},"../../node_modules/d3-geo/src/projection/transverseMercator.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,transverseMercatorRaw:()=>s});var r=n("../../node_modules/d3-geo/src/math.js"),o=n("../../node_modules/d3-geo/src/projection/mercator.js");function s(e,t){return[(0,r.log)((0,r.tan)((r.halfPi+t)/2)),-e]}function a(){var e=(0,o.mercatorProjection)(s),t=e.center,n=e.rotate;return e.center=function(e){return arguments.length?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return arguments.length?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90]).scale(159.155)}s.invert=function(e,t){return[-t,2*(0,r.atan)((0,r.exp)(e))-r.halfPi]}},"../../node_modules/d3-geo/src/rotation.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c,rotateRadians:()=>a});var r=n("../../node_modules/d3-geo/src/compose.js"),o=n("../../node_modules/d3-geo/src/math.js");function s(e,t){return[(0,o.abs)(e)>o.pi?e+Math.round(-e/o.tau)*o.tau:e,t]}function a(e,t,n){return(e%=o.tau)?t||n?(0,r.default)(d(e),u(t,n)):d(e):t||n?u(t,n):s}function i(e){return function(t,n){return[(t+=e)>o.pi?t-o.tau:t<-o.pi?t+o.tau:t,n]}}function d(e){var t=i(e);return t.invert=i(-e),t}function u(e,t){var n=(0,o.cos)(e),r=(0,o.sin)(e),s=(0,o.cos)(t),a=(0,o.sin)(t);function i(e,t){var i=(0,o.cos)(t),d=(0,o.cos)(e)*i,u=(0,o.sin)(e)*i,c=(0,o.sin)(t),l=c*n+d*r;return[(0,o.atan2)(u*s-l*a,d*n-c*r),(0,o.asin)(l*s+u*a)]}return i.invert=function(e,t){var i=(0,o.cos)(t),d=(0,o.cos)(e)*i,u=(0,o.sin)(e)*i,c=(0,o.sin)(t),l=c*s-u*a;return[(0,o.atan2)(u*s+c*a,d*n+l*r),(0,o.asin)(l*n-d*r)]},i}function c(e){function t(t){return(t=e(t[0]*o.radians,t[1]*o.radians))[0]*=o.degrees,t[1]*=o.degrees,t}return e=a(e[0]*o.radians,e[1]*o.radians,e.length>2?e[2]*o.radians:0),t.invert=function(t){return(t=e.invert(t[0]*o.radians,t[1]*o.radians))[0]*=o.degrees,t[1]*=o.degrees,t},t}s.invert=s},"../../node_modules/d3-geo/src/stream.js":(e,t,n)=>{function r(e,t){e&&s.hasOwnProperty(e.type)&&s[e.type](e,t)}n.r(t),n.d(t,{default:()=>d});var o={Feature:function(e,t){r(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,o=-1,s=n.length;++o<s;)r(n[o].geometry,t)}},s={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){a(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)a(n[r],t,0)},Polygon:function(e,t){i(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)i(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,o=-1,s=n.length;++o<s;)r(n[o],t)}};function a(e,t,n){var r,o=-1,s=e.length-n;for(t.lineStart();++o<s;)r=e[o],t.point(r[0],r[1],r[2]);t.lineEnd()}function i(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)a(e[n],t,1);t.polygonEnd()}function d(e,t){e&&o.hasOwnProperty(e.type)?o[e.type](e,t):r(e,t)}},"../../node_modules/d3-geo/src/transform.js":(e,t,n)=>{function r(e){return{stream:o(e)}}function o(e){return function(t){var n=new s;for(var r in e)n[r]=e[r];return n.stream=t,n}}function s(){}n.r(t),n.d(t,{default:()=>r,transformer:()=>o}),s.prototype={constructor:s,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}}},"../../node_modules/d3-hierarchy/src/accessors.js":(e,t,n)=>{function r(e){return null==e?null:o(e)}function o(e){if("function"!=typeof e)throw new Error;return e}n.r(t),n.d(t,{optional:()=>r,required:()=>o})},"../../node_modules/d3-hierarchy/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{shuffle:()=>o,slice:()=>r});var r=Array.prototype.slice;function o(e){for(var t,n,r=e.length;r;)n=Math.random()*r--|0,t=e[r],e[r]=e[n],e[n]=t;return e}},"../../node_modules/d3-hierarchy/src/cluster.js":(e,t,n)=>{function r(e,t){return e.parent===t.parent?1:2}function o(e,t){return e+t.x}function s(e,t){return Math.max(e,t.y)}function a(){var e=r,t=1,n=1,a=!1;function i(r){var i,d=0;r.eachAfter((function(t){var n=t.children;n?(t.x=function(e){return e.reduce(o,0)/e.length}(n),t.y=function(e){return 1+e.reduce(s,0)}(n)):(t.x=i?d+=e(t,i):0,t.y=0,i=t)}));var u=function(e){for(var t;t=e.children;)e=t[0];return e}(r),c=function(e){for(var t;t=e.children;)e=t[t.length-1];return e}(r),l=u.x-e(u,c)/2,f=c.x+e(c,u)/2;return r.eachAfter(a?function(e){e.x=(e.x-r.x)*t,e.y=(r.y-e.y)*n}:function(e){e.x=(e.x-l)/(f-l)*t,e.y=(1-(r.y?e.y/r.y:1))*n})}return i.separation=function(t){return arguments.length?(e=t,i):e},i.size=function(e){return arguments.length?(a=!1,t=+e[0],n=+e[1],i):a?null:[t,n]},i.nodeSize=function(e){return arguments.length?(a=!0,t=+e[0],n=+e[1],i):a?[t,n]:null},i}n.r(t),n.d(t,{default:()=>a})},"../../node_modules/d3-hierarchy/src/constant.js":(e,t,n)=>{function r(){return 0}function o(e){return function(){return e}}n.r(t),n.d(t,{constantZero:()=>r,default:()=>o})},"../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js":(e,t,n)=>{function r(){for(var e=this,t=[e];e=e.parent;)t.push(e);return t}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/count.js":(e,t,n)=>{function r(e){var t=0,n=e.children,r=n&&n.length;if(r)for(;--r>=0;)t+=n[r].value;else t=1;e.value=t}function o(){return this.eachAfter(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-hierarchy/src/hierarchy/descendants.js":(e,t,n)=>{function r(){var e=[];return this.each((function(t){e.push(t)})),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/each.js":(e,t,n)=>{function r(e){var t,n,r,o,s=this,a=[s];do{for(t=a.reverse(),a=[];s=t.pop();)if(e(s),n=s.children)for(r=0,o=n.length;r<o;++r)a.push(n[r])}while(a.length);return this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":(e,t,n)=>{function r(e){for(var t,n,r,o=this,s=[o],a=[];o=s.pop();)if(a.push(o),t=o.children)for(n=0,r=t.length;n<r;++n)s.push(t[n]);for(;o=a.pop();)e(o);return this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":(e,t,n)=>{function r(e){for(var t,n,r=this,o=[r];r=o.pop();)if(e(r),t=r.children)for(n=t.length-1;n>=0;--n)o.push(t[n]);return this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/index.js":(e,t,n)=>{n.r(t),n.d(t,{Node:()=>v,computeHeight:()=>g,default:()=>m});var r=n("../../node_modules/d3-hierarchy/src/hierarchy/count.js"),o=n("../../node_modules/d3-hierarchy/src/hierarchy/each.js"),s=n("../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js"),a=n("../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js"),i=n("../../node_modules/d3-hierarchy/src/hierarchy/sum.js"),d=n("../../node_modules/d3-hierarchy/src/hierarchy/sort.js"),u=n("../../node_modules/d3-hierarchy/src/hierarchy/path.js"),c=n("../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js"),l=n("../../node_modules/d3-hierarchy/src/hierarchy/descendants.js"),f=n("../../node_modules/d3-hierarchy/src/hierarchy/leaves.js"),h=n("../../node_modules/d3-hierarchy/src/hierarchy/links.js");function m(e,t){var n,r,o,s,a,i=new v(e),d=+e.value&&(i.value=e.value),u=[i];for(null==t&&(t=p);n=u.pop();)if(d&&(n.value=+n.data.value),(o=t(n.data))&&(a=o.length))for(n.children=new Array(a),s=a-1;s>=0;--s)u.push(r=n.children[s]=new v(o[s])),r.parent=n,r.depth=n.depth+1;return i.eachBefore(g)}function p(e){return e.children}function _(e){e.data=e.data.data}function g(e){var t=0;do{e.height=t}while((e=e.parent)&&e.height<++t)}function v(e){this.data=e,this.depth=this.height=0,this.parent=null}v.prototype=m.prototype={constructor:v,count:r.default,each:o.default,eachAfter:a.default,eachBefore:s.default,sum:i.default,sort:d.default,path:u.default,ancestors:c.default,descendants:l.default,leaves:f.default,links:h.default,copy:function(){return m(this).eachBefore(_)}}},"../../node_modules/d3-hierarchy/src/hierarchy/leaves.js":(e,t,n)=>{function r(){var e=[];return this.eachBefore((function(t){t.children||e.push(t)})),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/links.js":(e,t,n)=>{function r(){var e=this,t=[];return e.each((function(n){n!==e&&t.push({source:n.parent,target:n})})),t}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/path.js":(e,t,n)=>{function r(e){for(var t=this,n=function(e,t){if(e===t)return e;var n=e.ancestors(),r=t.ancestors(),o=null;for(e=n.pop(),t=r.pop();e===t;)o=e,e=n.pop(),t=r.pop();return o}(t,e),r=[t];t!==n;)t=t.parent,r.push(t);for(var o=r.length;e!==n;)r.splice(o,0,e),e=e.parent;return r}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/sort.js":(e,t,n)=>{function r(e){return this.eachBefore((function(t){t.children&&t.children.sort(e)}))}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/hierarchy/sum.js":(e,t,n)=>{function r(e){return this.eachAfter((function(t){for(var n=+e(t.data)||0,r=t.children,o=r&&r.length;--o>=0;)n+=r[o].value;t.value=n}))}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{cluster:()=>r.default,hierarchy:()=>o.default,pack:()=>s.default,packEnclose:()=>i.default,packSiblings:()=>a.default,partition:()=>d.default,stratify:()=>u.default,tree:()=>c.default,treemap:()=>l.default,treemapBinary:()=>f.default,treemapDice:()=>h.default,treemapResquarify:()=>g.default,treemapSlice:()=>m.default,treemapSliceDice:()=>p.default,treemapSquarify:()=>_.default});var r=n("../../node_modules/d3-hierarchy/src/cluster.js"),o=n("../../node_modules/d3-hierarchy/src/hierarchy/index.js"),s=n("../../node_modules/d3-hierarchy/src/pack/index.js"),a=n("../../node_modules/d3-hierarchy/src/pack/siblings.js"),i=n("../../node_modules/d3-hierarchy/src/pack/enclose.js"),d=n("../../node_modules/d3-hierarchy/src/partition.js"),u=n("../../node_modules/d3-hierarchy/src/stratify.js"),c=n("../../node_modules/d3-hierarchy/src/tree.js"),l=n("../../node_modules/d3-hierarchy/src/treemap/index.js"),f=n("../../node_modules/d3-hierarchy/src/treemap/binary.js"),h=n("../../node_modules/d3-hierarchy/src/treemap/dice.js"),m=n("../../node_modules/d3-hierarchy/src/treemap/slice.js"),p=n("../../node_modules/d3-hierarchy/src/treemap/sliceDice.js"),_=n("../../node_modules/d3-hierarchy/src/treemap/squarify.js"),g=n("../../node_modules/d3-hierarchy/src/treemap/resquarify.js")},"../../node_modules/d3-hierarchy/src/pack/enclose.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-hierarchy/src/array.js");function o(e){for(var t,n,o=0,a=(e=(0,r.shuffle)(r.slice.call(e))).length,d=[];o<a;)t=e[o],n&&i(n,t)?++o:(n=u(d=s(d,t)),o=0);return n}function s(e,t){var n,r;if(d(t,e))return[t];for(n=0;n<e.length;++n)if(a(t,e[n])&&d(c(e[n],t),e))return[e[n],t];for(n=0;n<e.length-1;++n)for(r=n+1;r<e.length;++r)if(a(c(e[n],e[r]),t)&&a(c(e[n],t),e[r])&&a(c(e[r],t),e[n])&&d(l(e[n],e[r],t),e))return[e[n],e[r],t];throw new Error}function a(e,t){var n=e.r-t.r,r=t.x-e.x,o=t.y-e.y;return n<0||n*n<r*r+o*o}function i(e,t){var n=e.r-t.r+1e-6,r=t.x-e.x,o=t.y-e.y;return n>0&&n*n>r*r+o*o}function d(e,t){for(var n=0;n<t.length;++n)if(!i(e,t[n]))return!1;return!0}function u(e){switch(e.length){case 1:return{x:(t=e[0]).x,y:t.y,r:t.r};case 2:return c(e[0],e[1]);case 3:return l(e[0],e[1],e[2])}var t}function c(e,t){var n=e.x,r=e.y,o=e.r,s=t.x,a=t.y,i=t.r,d=s-n,u=a-r,c=i-o,l=Math.sqrt(d*d+u*u);return{x:(n+s+d/l*c)/2,y:(r+a+u/l*c)/2,r:(l+o+i)/2}}function l(e,t,n){var r=e.x,o=e.y,s=e.r,a=t.x,i=t.y,d=t.r,u=n.x,c=n.y,l=n.r,f=r-a,h=r-u,m=o-i,p=o-c,_=d-s,g=l-s,v=r*r+o*o-s*s,y=v-a*a-i*i+d*d,j=v-u*u-c*c+l*l,b=h*m-f*p,x=(m*j-p*y)/(2*b)-r,w=(p*_-m*g)/b,M=(h*y-f*j)/(2*b)-o,S=(f*g-h*_)/b,k=w*w+S*S-1,E=2*(s+x*w+M*S),C=x*x+M*M-s*s,A=-(k?(E+Math.sqrt(E*E-4*k*C))/(2*k):C/E);return{x:r+x+w*A,y:o+M+S*A,r:A}}},"../../node_modules/d3-hierarchy/src/pack/index.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-hierarchy/src/pack/siblings.js"),o=n("../../node_modules/d3-hierarchy/src/accessors.js"),s=n("../../node_modules/d3-hierarchy/src/constant.js");function a(e){return Math.sqrt(e.value)}function i(){var e=null,t=1,n=1,r=s.constantZero;function i(o){return o.x=t/2,o.y=n/2,e?o.eachBefore(d(e)).eachAfter(u(r,.5)).eachBefore(c(1)):o.eachBefore(d(a)).eachAfter(u(s.constantZero,1)).eachAfter(u(r,o.r/Math.min(t,n))).eachBefore(c(Math.min(t,n)/(2*o.r))),o}return i.radius=function(t){return arguments.length?(e=(0,o.optional)(t),i):e},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(e){return arguments.length?(r="function"==typeof e?e:(0,s.default)(+e),i):r},i}function d(e){return function(t){t.children||(t.r=Math.max(0,+e(t)||0))}}function u(e,t){return function(n){if(o=n.children){var o,s,a,i=o.length,d=e(n)*t||0;if(d)for(s=0;s<i;++s)o[s].r+=d;if(a=(0,r.packEnclose)(o),d)for(s=0;s<i;++s)o[s].r-=d;n.r=a+d}}}function c(e){return function(t){var n=t.parent;t.r*=e,n&&(t.x=n.x+e*t.x,t.y=n.y+e*t.y)}}},"../../node_modules/d3-hierarchy/src/pack/siblings.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u,packEnclose:()=>d});var r=n("../../node_modules/d3-hierarchy/src/pack/enclose.js");function o(e,t,n){var r,o,s,a,i=e.x-t.x,d=e.y-t.y,u=i*i+d*d;u?(o=t.r+n.r,o*=o,a=e.r+n.r,o>(a*=a)?(r=(u+a-o)/(2*u),s=Math.sqrt(Math.max(0,a/u-r*r)),n.x=e.x-r*i-s*d,n.y=e.y-r*d+s*i):(r=(u+o-a)/(2*u),s=Math.sqrt(Math.max(0,o/u-r*r)),n.x=t.x+r*i-s*d,n.y=t.y+r*d+s*i)):(n.x=t.x+n.r,n.y=t.y)}function s(e,t){var n=e.r+t.r-1e-6,r=t.x-e.x,o=t.y-e.y;return n>0&&n*n>r*r+o*o}function a(e){var t=e._,n=e.next._,r=t.r+n.r,o=(t.x*n.r+n.x*t.r)/r,s=(t.y*n.r+n.y*t.r)/r;return o*o+s*s}function i(e){this._=e,this.next=null,this.previous=null}function d(e){if(!(u=e.length))return 0;var t,n,d,u,c,l,f,h,m,p,_;if((t=e[0]).x=0,t.y=0,!(u>1))return t.r;if(n=e[1],t.x=-n.r,n.x=t.r,n.y=0,!(u>2))return t.r+n.r;o(n,t,d=e[2]),t=new i(t),n=new i(n),d=new i(d),t.next=d.previous=n,n.next=t.previous=d,d.next=n.previous=t;e:for(f=3;f<u;++f){o(t._,n._,d=e[f]),d=new i(d),h=n.next,m=t.previous,p=n._.r,_=t._.r;do{if(p<=_){if(s(h._,d._)){n=h,t.next=n,n.previous=t,--f;continue e}p+=h._.r,h=h.next}else{if(s(m._,d._)){(t=m).next=n,n.previous=t,--f;continue e}_+=m._.r,m=m.previous}}while(h!==m.next);for(d.previous=t,d.next=n,t.next=n.previous=n=d,c=a(t);(d=d.next)!==n;)(l=a(d))<c&&(t=d,c=l);n=t.next}for(t=[n._],d=n;(d=d.next)!==n;)t.push(d._);for(d=(0,r.default)(t),f=0;f<u;++f)(t=e[f]).x-=d.x,t.y-=d.y;return d.r}function u(e){return d(e),e}},"../../node_modules/d3-hierarchy/src/partition.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-hierarchy/src/treemap/round.js"),o=n("../../node_modules/d3-hierarchy/src/treemap/dice.js");function s(){var e=1,t=1,n=0,s=!1;function a(a){var i=a.height+1;return a.x0=a.y0=n,a.x1=e,a.y1=t/i,a.eachBefore(function(e,t){return function(r){r.children&&(0,o.default)(r,r.x0,e*(r.depth+1)/t,r.x1,e*(r.depth+2)/t);var s=r.x0,a=r.y0,i=r.x1-n,d=r.y1-n;i<s&&(s=i=(s+i)/2),d<a&&(a=d=(a+d)/2),r.x0=s,r.y0=a,r.x1=i,r.y1=d}}(t,i)),s&&a.eachBefore(r.default),a}return a.round=function(e){return arguments.length?(s=!!e,a):s},a.size=function(n){return arguments.length?(e=+n[0],t=+n[1],a):[e,t]},a.padding=function(e){return arguments.length?(n=+e,a):n},a}},"../../node_modules/d3-hierarchy/src/stratify.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var r=n("../../node_modules/d3-hierarchy/src/accessors.js"),o=n("../../node_modules/d3-hierarchy/src/hierarchy/index.js"),s="$",a={depth:-1},i={};function d(e){return e.id}function u(e){return e.parentId}function c(){var e=d,t=u;function n(n){var r,d,u,c,l,f,h,m=n.length,p=new Array(m),_={};for(d=0;d<m;++d)r=n[d],l=p[d]=new o.Node(r),null!=(f=e(r,d,n))&&(f+="")&&(_[h=s+(l.id=f)]=h in _?i:l);for(d=0;d<m;++d)if(l=p[d],null!=(f=t(n[d],d,n))&&(f+="")){if(!(c=_[s+f]))throw new Error("missing: "+f);if(c===i)throw new Error("ambiguous: "+f);c.children?c.children.push(l):c.children=[l],l.parent=c}else{if(u)throw new Error("multiple roots");u=l}if(!u)throw new Error("no root");if(u.parent=a,u.eachBefore((function(e){e.depth=e.parent.depth+1,--m})).eachBefore(o.computeHeight),u.parent=null,m>0)throw new Error("cycle");return u}return n.id=function(t){return arguments.length?(e=(0,r.required)(t),n):e},n.parentId=function(e){return arguments.length?(t=(0,r.required)(e),n):t},n}},"../../node_modules/d3-hierarchy/src/tree.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var r=n("../../node_modules/d3-hierarchy/src/hierarchy/index.js");function o(e,t){return e.parent===t.parent?1:2}function s(e){var t=e.children;return t?t[0]:e.t}function a(e){var t=e.children;return t?t[t.length-1]:e.t}function i(e,t,n){var r=n/(t.i-e.i);t.c-=r,t.s+=n,e.c+=r,t.z+=n,t.m+=n}function d(e,t,n){return e.a.parent===t.parent?e.a:n}function u(e,t){this._=e,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=t}function c(){var e=o,t=1,n=1,r=null;function c(o){var s=function(e){for(var t,n,r,o,s,a=new u(e,0),i=[a];t=i.pop();)if(r=t._.children)for(t.children=new Array(s=r.length),o=s-1;o>=0;--o)i.push(n=t.children[o]=new u(r[o],o)),n.parent=t;return(a.parent=new u(null,0)).children=[a],a}(o);if(s.eachAfter(l),s.parent.m=-s.z,s.eachBefore(f),r)o.eachBefore(h);else{var a=o,i=o,d=o;o.eachBefore((function(e){e.x<a.x&&(a=e),e.x>i.x&&(i=e),e.depth>d.depth&&(d=e)}));var c=a===i?1:e(a,i)/2,m=c-a.x,p=t/(i.x+c+m),_=n/(d.depth||1);o.eachBefore((function(e){e.x=(e.x+m)*p,e.y=e.depth*_}))}return o}function l(t){var n=t.children,r=t.parent.children,o=t.i?r[t.i-1]:null;if(n){!function(e){for(var t,n=0,r=0,o=e.children,s=o.length;--s>=0;)(t=o[s]).z+=n,t.m+=n,n+=t.s+(r+=t.c)}(t);var u=(n[0].z+n[n.length-1].z)/2;o?(t.z=o.z+e(t._,o._),t.m=t.z-u):t.z=u}else o&&(t.z=o.z+e(t._,o._));t.parent.A=function(t,n,r){if(n){for(var o,u=t,c=t,l=n,f=u.parent.children[0],h=u.m,m=c.m,p=l.m,_=f.m;l=a(l),u=s(u),l&&u;)f=s(f),(c=a(c)).a=t,(o=l.z+p-u.z-h+e(l._,u._))>0&&(i(d(l,t,r),t,o),h+=o,m+=o),p+=l.m,h+=u.m,_+=f.m,m+=c.m;l&&!a(c)&&(c.t=l,c.m+=p-m),u&&!s(f)&&(f.t=u,f.m+=h-_,r=t)}return r}(t,o,t.parent.A||r[0])}function f(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function h(e){e.x*=t,e.y=e.depth*n}return c.separation=function(t){return arguments.length?(e=t,c):e},c.size=function(e){return arguments.length?(r=!1,t=+e[0],n=+e[1],c):r?null:[t,n]},c.nodeSize=function(e){return arguments.length?(r=!0,t=+e[0],n=+e[1],c):r?[t,n]:null},c}u.prototype=Object.create(r.Node.prototype)},"../../node_modules/d3-hierarchy/src/treemap/binary.js":(e,t,n)=>{function r(e,t,n,r,o){var s,a,i=e.children,d=i.length,u=new Array(d+1);for(u[0]=a=s=0;s<d;++s)u[s+1]=a+=i[s].value;!function e(t,n,r,o,s,a,d){if(t>=n-1){var c=i[t];return c.x0=o,c.y0=s,c.x1=a,void(c.y1=d)}for(var l=u[t],f=r/2+l,h=t+1,m=n-1;h<m;){var p=h+m>>>1;u[p]<f?h=p+1:m=p}f-u[h-1]<u[h]-f&&t+1<h&&--h;var _=u[h]-l,g=r-_;if(a-o>d-s){var v=(o*g+a*_)/r;e(t,h,_,o,s,v,d),e(h,n,g,v,s,a,d)}else{var y=(s*g+d*_)/r;e(t,h,_,o,s,a,y),e(h,n,g,o,y,a,d)}}(0,d,e.value,t,n,r,o)}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/treemap/dice.js":(e,t,n)=>{function r(e,t,n,r,o){for(var s,a=e.children,i=-1,d=a.length,u=e.value&&(r-t)/e.value;++i<d;)(s=a[i]).y0=n,s.y1=o,s.x0=t,s.x1=t+=s.value*u}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/treemap/index.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-hierarchy/src/treemap/round.js"),o=n("../../node_modules/d3-hierarchy/src/treemap/squarify.js"),s=n("../../node_modules/d3-hierarchy/src/accessors.js"),a=n("../../node_modules/d3-hierarchy/src/constant.js");function i(){var e=o.default,t=!1,n=1,i=1,d=[0],u=a.constantZero,c=a.constantZero,l=a.constantZero,f=a.constantZero,h=a.constantZero;function m(e){return e.x0=e.y0=0,e.x1=n,e.y1=i,e.eachBefore(p),d=[0],t&&e.eachBefore(r.default),e}function p(t){var n=d[t.depth],r=t.x0+n,o=t.y0+n,s=t.x1-n,a=t.y1-n;s<r&&(r=s=(r+s)/2),a<o&&(o=a=(o+a)/2),t.x0=r,t.y0=o,t.x1=s,t.y1=a,t.children&&(n=d[t.depth+1]=u(t)/2,r+=h(t)-n,o+=c(t)-n,(s-=l(t)-n)<r&&(r=s=(r+s)/2),(a-=f(t)-n)<o&&(o=a=(o+a)/2),e(t,r,o,s,a))}return m.round=function(e){return arguments.length?(t=!!e,m):t},m.size=function(e){return arguments.length?(n=+e[0],i=+e[1],m):[n,i]},m.tile=function(t){return arguments.length?(e=(0,s.required)(t),m):e},m.padding=function(e){return arguments.length?m.paddingInner(e).paddingOuter(e):m.paddingInner()},m.paddingInner=function(e){return arguments.length?(u="function"==typeof e?e:(0,a.default)(+e),m):u},m.paddingOuter=function(e){return arguments.length?m.paddingTop(e).paddingRight(e).paddingBottom(e).paddingLeft(e):m.paddingTop()},m.paddingTop=function(e){return arguments.length?(c="function"==typeof e?e:(0,a.default)(+e),m):c},m.paddingRight=function(e){return arguments.length?(l="function"==typeof e?e:(0,a.default)(+e),m):l},m.paddingBottom=function(e){return arguments.length?(f="function"==typeof e?e:(0,a.default)(+e),m):f},m.paddingLeft=function(e){return arguments.length?(h="function"==typeof e?e:(0,a.default)(+e),m):h},m}},"../../node_modules/d3-hierarchy/src/treemap/resquarify.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-hierarchy/src/treemap/dice.js"),o=n("../../node_modules/d3-hierarchy/src/treemap/slice.js"),s=n("../../node_modules/d3-hierarchy/src/treemap/squarify.js");const a=function e(t){function n(e,n,a,i,d){if((u=e._squarify)&&u.ratio===t)for(var u,c,l,f,h,m=-1,p=u.length,_=e.value;++m<p;){for(l=(c=u[m]).children,f=c.value=0,h=l.length;f<h;++f)c.value+=l[f].value;c.dice?(0,r.default)(c,n,a,i,a+=(d-a)*c.value/_):(0,o.default)(c,n,a,n+=(i-n)*c.value/_,d),_-=c.value}else e._squarify=u=(0,s.squarifyRatio)(t,e,n,a,i,d),u.ratio=t}return n.ratio=function(t){return e((t=+t)>1?t:1)},n}(s.phi)},"../../node_modules/d3-hierarchy/src/treemap/round.js":(e,t,n)=>{function r(e){e.x0=Math.round(e.x0),e.y0=Math.round(e.y0),e.x1=Math.round(e.x1),e.y1=Math.round(e.y1)}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/treemap/slice.js":(e,t,n)=>{function r(e,t,n,r,o){for(var s,a=e.children,i=-1,d=a.length,u=e.value&&(o-n)/e.value;++i<d;)(s=a[i]).x0=t,s.x1=r,s.y0=n,s.y1=n+=s.value*u}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-hierarchy/src/treemap/sliceDice.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-hierarchy/src/treemap/dice.js"),o=n("../../node_modules/d3-hierarchy/src/treemap/slice.js");function s(e,t,n,s,a){(1&e.depth?o.default:r.default)(e,t,n,s,a)}},"../../node_modules/d3-hierarchy/src/treemap/squarify.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,phi:()=>s,squarifyRatio:()=>a});var r=n("../../node_modules/d3-hierarchy/src/treemap/dice.js"),o=n("../../node_modules/d3-hierarchy/src/treemap/slice.js"),s=(1+Math.sqrt(5))/2;function a(e,t,n,s,a,i){for(var d,u,c,l,f,h,m,p,_,g,v,y=[],j=t.children,b=0,x=0,w=j.length,M=t.value;b<w;){c=a-n,l=i-s;do{f=j[x++].value}while(!f&&x<w);for(h=m=f,v=f*f*(g=Math.max(l/c,c/l)/(M*e)),_=Math.max(m/v,v/h);x<w;++x){if(f+=u=j[x].value,u<h&&(h=u),u>m&&(m=u),v=f*f*g,(p=Math.max(m/v,v/h))>_){f-=u;break}_=p}y.push(d={value:f,dice:c<l,children:j.slice(b,x)}),d.dice?(0,r.default)(d,n,s,a,M?s+=l*f/M:i):(0,o.default)(d,n,s,M?n+=c*f/M:a,i),M-=f,b=x}return y}const i=function e(t){function n(e,n,r,o,s){a(t,e,n,r,o,s)}return n.ratio=function(t){return e((t=+t)>1?t:1)},n}(s)},"../../node_modules/d3-interpolate/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,genericArray:()=>a});var r=n("../../node_modules/d3-interpolate/src/value.js"),o=n("../../node_modules/d3-interpolate/src/numberArray.js");function s(e,t){return((0,o.isNumberArray)(t)?o.default:a)(e,t)}function a(e,t){var n,o=t?t.length:0,s=e?Math.min(o,e.length):0,a=new Array(s),i=new Array(o);for(n=0;n<s;++n)a[n]=(0,r.default)(e[n],t[n]);for(;n<o;++n)i[n]=t[n];return function(e){for(n=0;n<s;++n)i[n]=a[n](e);return i}}},"../../node_modules/d3-interpolate/src/basis.js":(e,t,n)=>{function r(e,t,n,r,o){var s=e*e,a=s*e;return((1-3*e+3*s-a)*t+(4-6*s+3*a)*n+(1+3*e+3*s-3*a)*r+a*o)/6}function o(e){var t=e.length-1;return function(n){var o=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),s=e[o],a=e[o+1],i=o>0?e[o-1]:2*s-a,d=o<t-1?e[o+2]:2*a-s;return r((n-o/t)*t,i,s,a,d)}}n.r(t),n.d(t,{basis:()=>r,default:()=>o})},"../../node_modules/d3-interpolate/src/basisClosed.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-interpolate/src/basis.js");function o(e){var t=e.length;return function(n){var o=Math.floor(((n%=1)<0?++n:n)*t),s=e[(o+t-1)%t],a=e[o%t],i=e[(o+1)%t],d=e[(o+2)%t];return(0,r.basis)((n-o/t)*t,s,a,i,d)}}},"../../node_modules/d3-interpolate/src/color.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,gamma:()=>a,hue:()=>s});var r=n("../../node_modules/d3-interpolate/src/constant.js");function o(e,t){return function(n){return e+n*t}}function s(e,t){var n=t-e;return n?o(e,n>180||n<-180?n-360*Math.round(n/360):n):(0,r.default)(isNaN(e)?t:e)}function a(e){return 1==(e=+e)?i:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):(0,r.default)(isNaN(t)?n:t)}}function i(e,t){var n=t-e;return n?o(e,n):(0,r.default)(isNaN(e)?t:e)}},"../../node_modules/d3-interpolate/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/cubehelix.js":(e,t,n)=>{n.r(t),n.d(t,{cubehelixLong:()=>i,default:()=>a});var r=n("../../node_modules/d3-color/src/cubehelix.js"),o=n("../../node_modules/d3-interpolate/src/color.js");function s(e){return function t(n){function s(t,s){var a=e((t=(0,r.default)(t)).h,(s=(0,r.default)(s)).h),i=(0,o.default)(t.s,s.s),d=(0,o.default)(t.l,s.l),u=(0,o.default)(t.opacity,s.opacity);return function(e){return t.h=a(e),t.s=i(e),t.l=d(Math.pow(e,n)),t.opacity=u(e),t+""}}return n=+n,s.gamma=t,s}(1)}const a=s(o.hue);var i=s(o.default)},"../../node_modules/d3-interpolate/src/date.js":(e,t,n)=>{function r(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/discrete.js":(e,t,n)=>{function r(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/hcl.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,hclLong:()=>i});var r=n("../../node_modules/d3-color/src/lab.js"),o=n("../../node_modules/d3-interpolate/src/color.js");function s(e){return function(t,n){var s=e((t=(0,r.hcl)(t)).h,(n=(0,r.hcl)(n)).h),a=(0,o.default)(t.c,n.c),i=(0,o.default)(t.l,n.l),d=(0,o.default)(t.opacity,n.opacity);return function(e){return t.h=s(e),t.c=a(e),t.l=i(e),t.opacity=d(e),t+""}}}const a=s(o.hue);var i=s(o.default)},"../../node_modules/d3-interpolate/src/hsl.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,hslLong:()=>i});var r=n("../../node_modules/d3-color/src/color.js"),o=n("../../node_modules/d3-interpolate/src/color.js");function s(e){return function(t,n){var s=e((t=(0,r.hsl)(t)).h,(n=(0,r.hsl)(n)).h),a=(0,o.default)(t.s,n.s),i=(0,o.default)(t.l,n.l),d=(0,o.default)(t.opacity,n.opacity);return function(e){return t.h=s(e),t.s=a(e),t.l=i(e),t.opacity=d(e),t+""}}}const a=s(o.hue);var i=s(o.default)},"../../node_modules/d3-interpolate/src/hue.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-interpolate/src/color.js");function o(e,t){var n=(0,r.hue)(+e,+t);return function(e){var t=n(e);return t-360*Math.floor(t/360)}}},"../../node_modules/d3-interpolate/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{interpolate:()=>r.default,interpolateArray:()=>o.default,interpolateBasis:()=>s.default,interpolateBasisClosed:()=>a.default,interpolateCubehelix:()=>b.default,interpolateCubehelixLong:()=>b.cubehelixLong,interpolateDate:()=>i.default,interpolateDiscrete:()=>d.default,interpolateHcl:()=>j.default,interpolateHclLong:()=>j.hclLong,interpolateHsl:()=>v.default,interpolateHslLong:()=>v.hslLong,interpolateHue:()=>u.default,interpolateLab:()=>y.default,interpolateNumber:()=>c.default,interpolateNumberArray:()=>l.default,interpolateObject:()=>f.default,interpolateRgb:()=>g.default,interpolateRgbBasis:()=>g.rgbBasis,interpolateRgbBasisClosed:()=>g.rgbBasisClosed,interpolateRound:()=>h.default,interpolateString:()=>m.default,interpolateTransformCss:()=>p.interpolateTransformCss,interpolateTransformSvg:()=>p.interpolateTransformSvg,interpolateZoom:()=>_.default,piecewise:()=>x.default,quantize:()=>w.default});var r=n("../../node_modules/d3-interpolate/src/value.js"),o=n("../../node_modules/d3-interpolate/src/array.js"),s=n("../../node_modules/d3-interpolate/src/basis.js"),a=n("../../node_modules/d3-interpolate/src/basisClosed.js"),i=n("../../node_modules/d3-interpolate/src/date.js"),d=n("../../node_modules/d3-interpolate/src/discrete.js"),u=n("../../node_modules/d3-interpolate/src/hue.js"),c=n("../../node_modules/d3-interpolate/src/number.js"),l=n("../../node_modules/d3-interpolate/src/numberArray.js"),f=n("../../node_modules/d3-interpolate/src/object.js"),h=n("../../node_modules/d3-interpolate/src/round.js"),m=n("../../node_modules/d3-interpolate/src/string.js"),p=n("../../node_modules/d3-interpolate/src/transform/index.js"),_=n("../../node_modules/d3-interpolate/src/zoom.js"),g=n("../../node_modules/d3-interpolate/src/rgb.js"),v=n("../../node_modules/d3-interpolate/src/hsl.js"),y=n("../../node_modules/d3-interpolate/src/lab.js"),j=n("../../node_modules/d3-interpolate/src/hcl.js"),b=n("../../node_modules/d3-interpolate/src/cubehelix.js"),x=n("../../node_modules/d3-interpolate/src/piecewise.js"),w=n("../../node_modules/d3-interpolate/src/quantize.js")},"../../node_modules/d3-interpolate/src/lab.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-color/src/lab.js"),o=n("../../node_modules/d3-interpolate/src/color.js");function s(e,t){var n=(0,o.default)((e=(0,r.default)(e)).l,(t=(0,r.default)(t)).l),s=(0,o.default)(e.a,t.a),a=(0,o.default)(e.b,t.b),i=(0,o.default)(e.opacity,t.opacity);return function(t){return e.l=n(t),e.a=s(t),e.b=a(t),e.opacity=i(t),e+""}}},"../../node_modules/d3-interpolate/src/number.js":(e,t,n)=>{function r(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/numberArray.js":(e,t,n)=>{function r(e,t){t||(t=[]);var n,r=e?Math.min(t.length,e.length):0,o=t.slice();return function(s){for(n=0;n<r;++n)o[n]=e[n]*(1-s)+t[n]*s;return o}}function o(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}n.r(t),n.d(t,{default:()=>r,isNumberArray:()=>o})},"../../node_modules/d3-interpolate/src/object.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-interpolate/src/value.js");function o(e,t){var n,o={},s={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?o[n]=(0,r.default)(e[n],t[n]):s[n]=t[n];return function(e){for(n in o)s[n]=o[n](e);return s}}},"../../node_modules/d3-interpolate/src/piecewise.js":(e,t,n)=>{function r(e,t){for(var n=0,r=t.length-1,o=t[0],s=new Array(r<0?0:r);n<r;)s[n]=e(o,o=t[++n]);return function(e){var t=Math.max(0,Math.min(r-1,Math.floor(e*=r)));return s[t](e-t)}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/quantize.js":(e,t,n)=>{function r(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e(r/(t-1));return n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/rgb.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,rgbBasis:()=>u,rgbBasisClosed:()=>c});var r=n("../../node_modules/d3-color/src/color.js"),o=n("../../node_modules/d3-interpolate/src/basis.js"),s=n("../../node_modules/d3-interpolate/src/basisClosed.js"),a=n("../../node_modules/d3-interpolate/src/color.js");const i=function e(t){var n=(0,a.gamma)(t);function o(e,t){var o=n((e=(0,r.rgb)(e)).r,(t=(0,r.rgb)(t)).r),s=n(e.g,t.g),i=n(e.b,t.b),d=(0,a.default)(e.opacity,t.opacity);return function(t){return e.r=o(t),e.g=s(t),e.b=i(t),e.opacity=d(t),e+""}}return o.gamma=e,o}(1);function d(e){return function(t){var n,o,s=t.length,a=new Array(s),i=new Array(s),d=new Array(s);for(n=0;n<s;++n)o=(0,r.rgb)(t[n]),a[n]=o.r||0,i[n]=o.g||0,d[n]=o.b||0;return a=e(a),i=e(i),d=e(d),o.opacity=1,function(e){return o.r=a(e),o.g=i(e),o.b=d(e),o+""}}}var u=d(o.default),c=d(s.default)},"../../node_modules/d3-interpolate/src/round.js":(e,t,n)=>{function r(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-interpolate/src/string.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-interpolate/src/number.js"),o=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,s=new RegExp(o.source,"g");function a(e,t){var n,a,i,d=o.lastIndex=s.lastIndex=0,u=-1,c=[],l=[];for(e+="",t+="";(n=o.exec(e))&&(a=s.exec(t));)(i=a.index)>d&&(i=t.slice(d,i),c[u]?c[u]+=i:c[++u]=i),(n=n[0])===(a=a[0])?c[u]?c[u]+=a:c[++u]=a:(c[++u]=null,l.push({i:u,x:(0,r.default)(n,a)})),d=s.lastIndex;return d<t.length&&(i=t.slice(d),c[u]?c[u]+=i:c[++u]=i),c.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var n,r=0;r<t;++r)c[(n=l[r]).i]=n.x(e);return c.join("")})}},"../../node_modules/d3-interpolate/src/transform/decompose.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,identity:()=>o});var r=180/Math.PI,o={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function s(e,t,n,o,s,a){var i,d,u;return(i=Math.sqrt(e*e+t*t))&&(e/=i,t/=i),(u=e*n+t*o)&&(n-=e*u,o-=t*u),(d=Math.sqrt(n*n+o*o))&&(n/=d,o/=d,u/=d),e*o<t*n&&(e=-e,t=-t,u=-u,i=-i),{translateX:s,translateY:a,rotate:Math.atan2(t,e)*r,skewX:Math.atan(u)*r,scaleX:i,scaleY:d}}},"../../node_modules/d3-interpolate/src/transform/index.js":(e,t,n)=>{n.r(t),n.d(t,{interpolateTransformCss:()=>a,interpolateTransformSvg:()=>i});var r=n("../../node_modules/d3-interpolate/src/number.js"),o=n("../../node_modules/d3-interpolate/src/transform/parse.js");function s(e,t,n,o){function s(e){return e.length?e.pop()+" ":""}return function(a,i){var d=[],u=[];return a=e(a),i=e(i),function(e,o,s,a,i,d){if(e!==s||o!==a){var u=i.push("translate(",null,t,null,n);d.push({i:u-4,x:(0,r.default)(e,s)},{i:u-2,x:(0,r.default)(o,a)})}else(s||a)&&i.push("translate("+s+t+a+n)}(a.translateX,a.translateY,i.translateX,i.translateY,d,u),function(e,t,n,a){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),a.push({i:n.push(s(n)+"rotate(",null,o)-2,x:(0,r.default)(e,t)})):t&&n.push(s(n)+"rotate("+t+o)}(a.rotate,i.rotate,d,u),function(e,t,n,a){e!==t?a.push({i:n.push(s(n)+"skewX(",null,o)-2,x:(0,r.default)(e,t)}):t&&n.push(s(n)+"skewX("+t+o)}(a.skewX,i.skewX,d,u),function(e,t,n,o,a,i){if(e!==n||t!==o){var d=a.push(s(a)+"scale(",null,",",null,")");i.push({i:d-4,x:(0,r.default)(e,n)},{i:d-2,x:(0,r.default)(t,o)})}else 1===n&&1===o||a.push(s(a)+"scale("+n+","+o+")")}(a.scaleX,a.scaleY,i.scaleX,i.scaleY,d,u),a=i=null,function(e){for(var t,n=-1,r=u.length;++n<r;)d[(t=u[n]).i]=t.x(e);return d.join("")}}}var a=s(o.parseCss,"px, ","px)","deg)"),i=s(o.parseSvg,", ",")",")")},"../../node_modules/d3-interpolate/src/transform/parse.js":(e,t,n)=>{n.r(t),n.d(t,{parseCss:()=>d,parseSvg:()=>u});var r,o,s,a,i=n("../../node_modules/d3-interpolate/src/transform/decompose.js");function d(e){return"none"===e?i.identity:(r||(r=document.createElement("DIV"),o=document.documentElement,s=document.defaultView),r.style.transform=e,e=s.getComputedStyle(o.appendChild(r),null).getPropertyValue("transform"),o.removeChild(r),e=e.slice(7,-1).split(","),(0,i.default)(+e[0],+e[1],+e[2],+e[3],+e[4],+e[5]))}function u(e){return null==e?i.identity:(a||(a=document.createElementNS("http://www.w3.org/2000/svg","g")),a.setAttribute("transform",e),(e=a.transform.baseVal.consolidate())?(e=e.matrix,(0,i.default)(e.a,e.b,e.c,e.d,e.e,e.f)):i.identity)}},"../../node_modules/d3-interpolate/src/value.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n("../../node_modules/d3-color/src/color.js"),o=n("../../node_modules/d3-interpolate/src/rgb.js"),s=n("../../node_modules/d3-interpolate/src/array.js"),a=n("../../node_modules/d3-interpolate/src/date.js"),i=n("../../node_modules/d3-interpolate/src/number.js"),d=n("../../node_modules/d3-interpolate/src/object.js"),u=n("../../node_modules/d3-interpolate/src/string.js"),c=n("../../node_modules/d3-interpolate/src/constant.js"),l=n("../../node_modules/d3-interpolate/src/numberArray.js");function f(e,t){var n,f=typeof t;return null==t||"boolean"===f?(0,c.default)(t):("number"===f?i.default:"string"===f?(n=(0,r.default)(t))?(t=n,o.default):u.default:t instanceof r.default?o.default:t instanceof Date?a.default:(0,l.isNumberArray)(t)?l.default:Array.isArray(t)?s.genericArray:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?d.default:i.default)(e,t)}},"../../node_modules/d3-interpolate/src/zoom.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=Math.SQRT2,o=2,s=4,a=1e-12;function i(e){return((e=Math.exp(e))+1/e)/2}function d(e,t){var n,d,u=e[0],c=e[1],l=e[2],f=t[0],h=t[1],m=t[2],p=f-u,_=h-c,g=p*p+_*_;if(g<a)d=Math.log(m/l)/r,n=function(e){return[u+e*p,c+e*_,l*Math.exp(r*e*d)]};else{var v=Math.sqrt(g),y=(m*m-l*l+s*g)/(2*l*o*v),j=(m*m-l*l-s*g)/(2*m*o*v),b=Math.log(Math.sqrt(y*y+1)-y),x=Math.log(Math.sqrt(j*j+1)-j);d=(x-b)/r,n=function(e){var t,n=e*d,s=i(b),a=l/(o*v)*(s*(t=r*n+b,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(b));return[u+a*p,c+a*_,l*s/i(r*n+b)]}}return n.duration=1e3*d,n}},"../../node_modules/d3-path/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{path:()=>r.default});var r=n("../../node_modules/d3-path/src/path.js")},"../../node_modules/d3-path/src/path.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var r=Math.PI,o=2*r,s=1e-6,a=o-s;function i(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function d(){return new i}i.prototype=d.prototype={constructor:i,moveTo:function(e,t){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,t){this._+="L"+(this._x1=+e)+","+(this._y1=+t)},quadraticCurveTo:function(e,t,n,r){this._+="Q"+ +e+","+ +t+","+(this._x1=+n)+","+(this._y1=+r)},bezierCurveTo:function(e,t,n,r,o,s){this._+="C"+ +e+","+ +t+","+ +n+","+ +r+","+(this._x1=+o)+","+(this._y1=+s)},arcTo:function(e,t,n,o,a){e=+e,t=+t,n=+n,o=+o,a=+a;var i=this._x1,d=this._y1,u=n-e,c=o-t,l=i-e,f=d-t,h=l*l+f*f;if(a<0)throw new Error("negative radius: "+a);if(null===this._x1)this._+="M"+(this._x1=e)+","+(this._y1=t);else if(h>s)if(Math.abs(f*u-c*l)>s&&a){var m=n-i,p=o-d,_=u*u+c*c,g=m*m+p*p,v=Math.sqrt(_),y=Math.sqrt(h),j=a*Math.tan((r-Math.acos((_+h-g)/(2*v*y)))/2),b=j/y,x=j/v;Math.abs(b-1)>s&&(this._+="L"+(e+b*l)+","+(t+b*f)),this._+="A"+a+","+a+",0,0,"+ +(f*m>l*p)+","+(this._x1=e+x*u)+","+(this._y1=t+x*c)}else this._+="L"+(this._x1=e)+","+(this._y1=t)},arc:function(e,t,n,i,d,u){e=+e,t=+t,u=!!u;var c=(n=+n)*Math.cos(i),l=n*Math.sin(i),f=e+c,h=t+l,m=1^u,p=u?i-d:d-i;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+f+","+h:(Math.abs(this._x1-f)>s||Math.abs(this._y1-h)>s)&&(this._+="L"+f+","+h),n&&(p<0&&(p=p%o+o),p>a?this._+="A"+n+","+n+",0,1,"+m+","+(e-c)+","+(t-l)+"A"+n+","+n+",0,1,"+m+","+(this._x1=f)+","+(this._y1=h):p>s&&(this._+="A"+n+","+n+",0,"+ +(p>=r)+","+m+","+(this._x1=e+n*Math.cos(d))+","+(this._y1=t+n*Math.sin(d))))},rect:function(e,t,n,r){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)+"h"+ +n+"v"+ +r+"h"+-n+"Z"},toString:function(){return this._}};const u=d},"../../node_modules/d3-polygon/src/area.js":(e,t,n)=>{function r(e){for(var t,n=-1,r=e.length,o=e[r-1],s=0;++n<r;)t=o,o=e[n],s+=t[1]*o[0]-t[0]*o[1];return s/2}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-polygon/src/centroid.js":(e,t,n)=>{function r(e){for(var t,n,r=-1,o=e.length,s=0,a=0,i=e[o-1],d=0;++r<o;)t=i,i=e[r],d+=n=t[0]*i[1]-i[0]*t[1],s+=(t[0]+i[0])*n,a+=(t[1]+i[1])*n;return[s/(d*=3),a/d]}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-polygon/src/contains.js":(e,t,n)=>{function r(e,t){for(var n,r,o=e.length,s=e[o-1],a=t[0],i=t[1],d=s[0],u=s[1],c=!1,l=0;l<o;++l)n=(s=e[l])[0],(r=s[1])>i!=u>i&&a<(d-n)*(i-r)/(u-r)+n&&(c=!c),d=n,u=r;return c}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-polygon/src/cross.js":(e,t,n)=>{function r(e,t,n){return(t[0]-e[0])*(n[1]-e[1])-(t[1]-e[1])*(n[0]-e[0])}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-polygon/src/hull.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-polygon/src/cross.js");function o(e,t){return e[0]-t[0]||e[1]-t[1]}function s(e){for(var t=e.length,n=[0,1],o=2,s=2;s<t;++s){for(;o>1&&(0,r.default)(e[n[o-2]],e[n[o-1]],e[s])<=0;)--o;n[o++]=s}return n.slice(0,o)}function a(e){if((n=e.length)<3)return null;var t,n,r=new Array(n),a=new Array(n);for(t=0;t<n;++t)r[t]=[+e[t][0],+e[t][1],t];for(r.sort(o),t=0;t<n;++t)a[t]=[r[t][0],-r[t][1]];var i=s(r),d=s(a),u=d[0]===i[0],c=d[d.length-1]===i[i.length-1],l=[];for(t=i.length-1;t>=0;--t)l.push(e[r[i[t]][2]]);for(t=+u;t<d.length-c;++t)l.push(e[r[d[t]][2]]);return l}},"../../node_modules/d3-polygon/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{polygonArea:()=>r.default,polygonCentroid:()=>o.default,polygonContains:()=>a.default,polygonHull:()=>s.default,polygonLength:()=>i.default});var r=n("../../node_modules/d3-polygon/src/area.js"),o=n("../../node_modules/d3-polygon/src/centroid.js"),s=n("../../node_modules/d3-polygon/src/hull.js"),a=n("../../node_modules/d3-polygon/src/contains.js"),i=n("../../node_modules/d3-polygon/src/length.js")},"../../node_modules/d3-polygon/src/length.js":(e,t,n)=>{function r(e){for(var t,n,r=-1,o=e.length,s=e[o-1],a=s[0],i=s[1],d=0;++r<o;)t=a,n=i,t-=a=(s=e[r])[0],n-=i=s[1],d+=Math.sqrt(t*t+n*n);return d}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/add.js":(e,t,n)=>{function r(e){var t=+this._x.call(null,e),n=+this._y.call(null,e);return o(this.cover(t,n),t,n,e)}function o(e,t,n,r){if(isNaN(t)||isNaN(n))return e;var o,s,a,i,d,u,c,l,f,h=e._root,m={data:r},p=e._x0,_=e._y0,g=e._x1,v=e._y1;if(!h)return e._root=m,e;for(;h.length;)if((u=t>=(s=(p+g)/2))?p=s:g=s,(c=n>=(a=(_+v)/2))?_=a:v=a,o=h,!(h=h[l=c<<1|u]))return o[l]=m,e;if(i=+e._x.call(null,h.data),d=+e._y.call(null,h.data),t===i&&n===d)return m.next=h,o?o[l]=m:e._root=m,e;do{o=o?o[l]=new Array(4):e._root=new Array(4),(u=t>=(s=(p+g)/2))?p=s:g=s,(c=n>=(a=(_+v)/2))?_=a:v=a}while((l=c<<1|u)==(f=(d>=a)<<1|i>=s));return o[f]=h,o[l]=m,e}function s(e){var t,n,r,s,a=e.length,i=new Array(a),d=new Array(a),u=1/0,c=1/0,l=-1/0,f=-1/0;for(n=0;n<a;++n)isNaN(r=+this._x.call(null,t=e[n]))||isNaN(s=+this._y.call(null,t))||(i[n]=r,d[n]=s,r<u&&(u=r),r>l&&(l=r),s<c&&(c=s),s>f&&(f=s));if(u>l||c>f)return this;for(this.cover(u,c).cover(l,f),n=0;n<a;++n)o(this,i[n],d[n],e[n]);return this}n.r(t),n.d(t,{addAll:()=>s,default:()=>r})},"../../node_modules/d3-quadtree/src/cover.js":(e,t,n)=>{function r(e,t){if(isNaN(e=+e)||isNaN(t=+t))return this;var n=this._x0,r=this._y0,o=this._x1,s=this._y1;if(isNaN(n))o=(n=Math.floor(e))+1,s=(r=Math.floor(t))+1;else{for(var a,i,d=o-n,u=this._root;n>e||e>=o||r>t||t>=s;)switch(i=(t<r)<<1|e<n,(a=new Array(4))[i]=u,u=a,d*=2,i){case 0:o=n+d,s=r+d;break;case 1:n=o-d,s=r+d;break;case 2:o=n+d,r=s-d;break;case 3:n=o-d,r=s-d}this._root&&this._root.length&&(this._root=u)}return this._x0=n,this._y0=r,this._x1=o,this._y1=s,this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/data.js":(e,t,n)=>{function r(){var e=[];return this.visit((function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)})),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/extent.js":(e,t,n)=>{function r(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/find.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-quadtree/src/quad.js");function o(e,t,n){var o,s,a,i,d,u,c,l=this._x0,f=this._y0,h=this._x1,m=this._y1,p=[],_=this._root;for(_&&p.push(new r.default(_,l,f,h,m)),null==n?n=1/0:(l=e-n,f=t-n,h=e+n,m=t+n,n*=n);u=p.pop();)if(!(!(_=u.node)||(s=u.x0)>h||(a=u.y0)>m||(i=u.x1)<l||(d=u.y1)<f))if(_.length){var g=(s+i)/2,v=(a+d)/2;p.push(new r.default(_[3],g,v,i,d),new r.default(_[2],s,v,g,d),new r.default(_[1],g,a,i,v),new r.default(_[0],s,a,g,v)),(c=(t>=v)<<1|e>=g)&&(u=p[p.length-1],p[p.length-1]=p[p.length-1-c],p[p.length-1-c]=u)}else{var y=e-+this._x.call(null,_.data),j=t-+this._y.call(null,_.data),b=y*y+j*j;if(b<n){var x=Math.sqrt(n=b);l=e-x,f=t-x,h=e+x,m=t+x,o=_.data}}return o}},"../../node_modules/d3-quadtree/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{quadtree:()=>r.default});var r=n("../../node_modules/d3-quadtree/src/quadtree.js")},"../../node_modules/d3-quadtree/src/quad.js":(e,t,n)=>{function r(e,t,n,r,o){this.node=e,this.x0=t,this.y0=n,this.x1=r,this.y1=o}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/quadtree.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var r=n("../../node_modules/d3-quadtree/src/add.js"),o=n("../../node_modules/d3-quadtree/src/cover.js"),s=n("../../node_modules/d3-quadtree/src/data.js"),a=n("../../node_modules/d3-quadtree/src/extent.js"),i=n("../../node_modules/d3-quadtree/src/find.js"),d=n("../../node_modules/d3-quadtree/src/remove.js"),u=n("../../node_modules/d3-quadtree/src/root.js"),c=n("../../node_modules/d3-quadtree/src/size.js"),l=n("../../node_modules/d3-quadtree/src/visit.js"),f=n("../../node_modules/d3-quadtree/src/visitAfter.js"),h=n("../../node_modules/d3-quadtree/src/x.js"),m=n("../../node_modules/d3-quadtree/src/y.js");function p(e,t,n){var r=new _(null==t?h.defaultX:t,null==n?m.defaultY:n,NaN,NaN,NaN,NaN);return null==e?r:r.addAll(e)}function _(e,t,n,r,o,s){this._x=e,this._y=t,this._x0=n,this._y0=r,this._x1=o,this._y1=s,this._root=void 0}function g(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}var v=p.prototype=_.prototype;v.copy=function(){var e,t,n=new _(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return n;if(!r.length)return n._root=g(r),n;for(e=[{source:r,target:n._root=new Array(4)}];r=e.pop();)for(var o=0;o<4;++o)(t=r.source[o])&&(t.length?e.push({source:t,target:r.target[o]=new Array(4)}):r.target[o]=g(t));return n},v.add=r.default,v.addAll=r.addAll,v.cover=o.default,v.data=s.default,v.extent=a.default,v.find=i.default,v.remove=d.default,v.removeAll=d.removeAll,v.root=u.default,v.size=c.default,v.visit=l.default,v.visitAfter=f.default,v.x=h.default,v.y=m.default},"../../node_modules/d3-quadtree/src/remove.js":(e,t,n)=>{function r(e){if(isNaN(s=+this._x.call(null,e))||isNaN(a=+this._y.call(null,e)))return this;var t,n,r,o,s,a,i,d,u,c,l,f,h=this._root,m=this._x0,p=this._y0,_=this._x1,g=this._y1;if(!h)return this;if(h.length)for(;;){if((u=s>=(i=(m+_)/2))?m=i:_=i,(c=a>=(d=(p+g)/2))?p=d:g=d,t=h,!(h=h[l=c<<1|u]))return this;if(!h.length)break;(t[l+1&3]||t[l+2&3]||t[l+3&3])&&(n=t,f=l)}for(;h.data!==e;)if(r=h,!(h=h.next))return this;return(o=h.next)&&delete h.next,r?(o?r.next=o:delete r.next,this):t?(o?t[l]=o:delete t[l],(h=t[0]||t[1]||t[2]||t[3])&&h===(t[3]||t[2]||t[1]||t[0])&&!h.length&&(n?n[f]=h:this._root=h),this):(this._root=o,this)}function o(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this}n.r(t),n.d(t,{default:()=>r,removeAll:()=>o})},"../../node_modules/d3-quadtree/src/root.js":(e,t,n)=>{function r(){return this._root}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/size.js":(e,t,n)=>{function r(){var e=0;return this.visit((function(t){if(!t.length)do{++e}while(t=t.next)})),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-quadtree/src/visit.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-quadtree/src/quad.js");function o(e){var t,n,o,s,a,i,d=[],u=this._root;for(u&&d.push(new r.default(u,this._x0,this._y0,this._x1,this._y1));t=d.pop();)if(!e(u=t.node,o=t.x0,s=t.y0,a=t.x1,i=t.y1)&&u.length){var c=(o+a)/2,l=(s+i)/2;(n=u[3])&&d.push(new r.default(n,c,l,a,i)),(n=u[2])&&d.push(new r.default(n,o,l,c,i)),(n=u[1])&&d.push(new r.default(n,c,s,a,l)),(n=u[0])&&d.push(new r.default(n,o,s,c,l))}return this}},"../../node_modules/d3-quadtree/src/visitAfter.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-quadtree/src/quad.js");function o(e){var t,n=[],o=[];for(this._root&&n.push(new r.default(this._root,this._x0,this._y0,this._x1,this._y1));t=n.pop();){var s=t.node;if(s.length){var a,i=t.x0,d=t.y0,u=t.x1,c=t.y1,l=(i+u)/2,f=(d+c)/2;(a=s[0])&&n.push(new r.default(a,i,d,l,f)),(a=s[1])&&n.push(new r.default(a,l,d,u,f)),(a=s[2])&&n.push(new r.default(a,i,f,l,c)),(a=s[3])&&n.push(new r.default(a,l,f,u,c))}o.push(t)}for(;t=o.pop();)e(t.node,t.x0,t.y0,t.x1,t.y1);return this}},"../../node_modules/d3-quadtree/src/x.js":(e,t,n)=>{function r(e){return e[0]}function o(e){return arguments.length?(this._x=e,this):this._x}n.r(t),n.d(t,{default:()=>o,defaultX:()=>r})},"../../node_modules/d3-quadtree/src/y.js":(e,t,n)=>{function r(e){return e[1]}function o(e){return arguments.length?(this._y=e,this):this._y}n.r(t),n.d(t,{default:()=>o,defaultY:()=>r})},"../../node_modules/d3-random/src/bates.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-random/src/defaultSource.js"),o=n("../../node_modules/d3-random/src/irwinHall.js");const s=function e(t){function n(e){var n=o.default.source(t)(e);return function(){return n()/e}}return n.source=e,n}(r.default)},"../../node_modules/d3-random/src/defaultSource.js":(e,t,n)=>{function r(){return Math.random()}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-random/src/exponential.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=function e(t){function n(e){return function(){return-Math.log(1-t())/e}}return n.source=e,n}(n("../../node_modules/d3-random/src/defaultSource.js").default)},"../../node_modules/d3-random/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{randomBates:()=>a.default,randomExponential:()=>d.default,randomIrwinHall:()=>i.default,randomLogNormal:()=>s.default,randomNormal:()=>o.default,randomUniform:()=>r.default});var r=n("../../node_modules/d3-random/src/uniform.js"),o=n("../../node_modules/d3-random/src/normal.js"),s=n("../../node_modules/d3-random/src/logNormal.js"),a=n("../../node_modules/d3-random/src/bates.js"),i=n("../../node_modules/d3-random/src/irwinHall.js"),d=n("../../node_modules/d3-random/src/exponential.js")},"../../node_modules/d3-random/src/irwinHall.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=function e(t){function n(e){return function(){for(var n=0,r=0;r<e;++r)n+=t();return n}}return n.source=e,n}(n("../../node_modules/d3-random/src/defaultSource.js").default)},"../../node_modules/d3-random/src/logNormal.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-random/src/defaultSource.js"),o=n("../../node_modules/d3-random/src/normal.js");const s=function e(t){function n(){var e=o.default.source(t).apply(this,arguments);return function(){return Math.exp(e())}}return n.source=e,n}(r.default)},"../../node_modules/d3-random/src/normal.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=function e(t){function n(e,n){var r,o;return e=null==e?0:+e,n=null==n?1:+n,function(){var s;if(null!=r)s=r,r=null;else do{r=2*t()-1,s=2*t()-1,o=r*r+s*s}while(!o||o>1);return e+n*s*Math.sqrt(-2*Math.log(o)/o)}}return n.source=e,n}(n("../../node_modules/d3-random/src/defaultSource.js").default)},"../../node_modules/d3-random/src/uniform.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=function e(t){function n(e,n){return e=null==e?0:+e,n=null==n?1:+n,1===arguments.length?(n=e,e=0):n-=e,function(){return t()*n+e}}return n.source=e,n}(n("../../node_modules/d3-random/src/defaultSource.js").default)},"../../node_modules/d3-scale-chromatic/src/categorical/Accent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666")},"../../node_modules/d3-scale-chromatic/src/categorical/Dark2.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666")},"../../node_modules/d3-scale-chromatic/src/categorical/Paired.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928")},"../../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2")},"../../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc")},"../../node_modules/d3-scale-chromatic/src/categorical/Set1.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999")},"../../node_modules/d3-scale-chromatic/src/categorical/Set2.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3")},"../../node_modules/d3-scale-chromatic/src/categorical/Set3.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f")},"../../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab")},"../../node_modules/d3-scale-chromatic/src/categorical/category10.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=(0,n("../../node_modules/d3-scale-chromatic/src/colors.js").default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf")},"../../node_modules/d3-scale-chromatic/src/colors.js":(e,t,n)=>{function r(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-scale-chromatic/src/diverging/BrBG.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/PRGn.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/PiYG.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/PuOr.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/RdBu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/RdGy.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/diverging/Spectral.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{interpolateBlues:()=>P.default,interpolateBrBG:()=>h.default,interpolateBuGn:()=>x.default,interpolateBuPu:()=>w.default,interpolateCividis:()=>L.default,interpolateCool:()=>Y.cool,interpolateCubehelixDefault:()=>F.default,interpolateGnBu:()=>M.default,interpolateGreens:()=>B.default,interpolateGreys:()=>O.default,interpolateInferno:()=>H.inferno,interpolateMagma:()=>H.magma,interpolateOrRd:()=>S.default,interpolateOranges:()=>I.default,interpolatePRGn:()=>m.default,interpolatePiYG:()=>p.default,interpolatePlasma:()=>H.plasma,interpolatePuBu:()=>E.default,interpolatePuBuGn:()=>k.default,interpolatePuOr:()=>_.default,interpolatePuRd:()=>C.default,interpolatePurples:()=>z.default,interpolateRainbow:()=>Y.default,interpolateRdBu:()=>g.default,interpolateRdGy:()=>v.default,interpolateRdPu:()=>A.default,interpolateRdYlBu:()=>y.default,interpolateRdYlGn:()=>j.default,interpolateReds:()=>D.default,interpolateSinebow:()=>G.default,interpolateSpectral:()=>b.default,interpolateTurbo:()=>U.default,interpolateViridis:()=>H.default,interpolateWarm:()=>Y.warm,interpolateYlGn:()=>R.default,interpolateYlGnBu:()=>T.default,interpolateYlOrBr:()=>q.default,interpolateYlOrRd:()=>N.default,schemeAccent:()=>o.default,schemeBlues:()=>P.scheme,schemeBrBG:()=>h.scheme,schemeBuGn:()=>x.scheme,schemeBuPu:()=>w.scheme,schemeCategory10:()=>r.default,schemeDark2:()=>s.default,schemeGnBu:()=>M.scheme,schemeGreens:()=>B.scheme,schemeGreys:()=>O.scheme,schemeOrRd:()=>S.scheme,schemeOranges:()=>I.scheme,schemePRGn:()=>m.scheme,schemePaired:()=>a.default,schemePastel1:()=>i.default,schemePastel2:()=>d.default,schemePiYG:()=>p.scheme,schemePuBu:()=>E.scheme,schemePuBuGn:()=>k.scheme,schemePuOr:()=>_.scheme,schemePuRd:()=>C.scheme,schemePurples:()=>z.scheme,schemeRdBu:()=>g.scheme,schemeRdGy:()=>v.scheme,schemeRdPu:()=>A.scheme,schemeRdYlBu:()=>y.scheme,schemeRdYlGn:()=>j.scheme,schemeReds:()=>D.scheme,schemeSet1:()=>u.default,schemeSet2:()=>c.default,schemeSet3:()=>l.default,schemeSpectral:()=>b.scheme,schemeTableau10:()=>f.default,schemeYlGn:()=>R.scheme,schemeYlGnBu:()=>T.scheme,schemeYlOrBr:()=>q.scheme,schemeYlOrRd:()=>N.scheme});var r=n("../../node_modules/d3-scale-chromatic/src/categorical/category10.js"),o=n("../../node_modules/d3-scale-chromatic/src/categorical/Accent.js"),s=n("../../node_modules/d3-scale-chromatic/src/categorical/Dark2.js"),a=n("../../node_modules/d3-scale-chromatic/src/categorical/Paired.js"),i=n("../../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js"),d=n("../../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js"),u=n("../../node_modules/d3-scale-chromatic/src/categorical/Set1.js"),c=n("../../node_modules/d3-scale-chromatic/src/categorical/Set2.js"),l=n("../../node_modules/d3-scale-chromatic/src/categorical/Set3.js"),f=n("../../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js"),h=n("../../node_modules/d3-scale-chromatic/src/diverging/BrBG.js"),m=n("../../node_modules/d3-scale-chromatic/src/diverging/PRGn.js"),p=n("../../node_modules/d3-scale-chromatic/src/diverging/PiYG.js"),_=n("../../node_modules/d3-scale-chromatic/src/diverging/PuOr.js"),g=n("../../node_modules/d3-scale-chromatic/src/diverging/RdBu.js"),v=n("../../node_modules/d3-scale-chromatic/src/diverging/RdGy.js"),y=n("../../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js"),j=n("../../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js"),b=n("../../node_modules/d3-scale-chromatic/src/diverging/Spectral.js"),x=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js"),w=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js"),M=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js"),S=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js"),k=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js"),E=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js"),C=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js"),A=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js"),T=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js"),R=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js"),q=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js"),N=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js"),P=n("../../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js"),B=n("../../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js"),O=n("../../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js"),z=n("../../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js"),D=n("../../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js"),I=n("../../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js"),L=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js"),F=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js"),Y=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js"),G=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js"),U=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js"),H=n("../../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js")},"../../node_modules/d3-scale-chromatic/src/ramp.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-interpolate/src/rgb.js");function o(e){return(0,r.rgbBasis)(e[e.length-1])}},"../../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js":(e,t,n)=>{function r(e){return e=Math.max(0,Math.min(1,e)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-e*(35.34-e*(2381.73-e*(6402.7-e*(7024.72-2710.57*e)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+e*(170.73+e*(52.82-e*(131.46-e*(176.58-67.37*e)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+e*(442.36-e*(2482.43-e*(6167.24-e*(6614.94-2475.67*e)))))))+")"}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-color/src/cubehelix.js");const o=(0,n("../../node_modules/d3-interpolate/src/cubehelix.js").cubehelixLong)((0,r.default)(300,.5,0),(0,r.default)(-240,.5,1))},"../../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":(e,t,n)=>{n.r(t),n.d(t,{cool:()=>a,default:()=>d,warm:()=>s});var r=n("../../node_modules/d3-color/src/cubehelix.js"),o=n("../../node_modules/d3-interpolate/src/cubehelix.js"),s=(0,o.cubehelixLong)((0,r.default)(-100,.75,.35),(0,r.default)(80,1.5,.8)),a=(0,o.cubehelixLong)((0,r.default)(260,.75,.35),(0,r.default)(80,1.5,.8)),i=(0,r.default)();function d(e){(e<0||e>1)&&(e-=Math.floor(e));var t=Math.abs(e-.5);return i.h=360*e-100,i.s=1.5-1.5*t,i.l=.8-.9*t,i+""}},"../../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=(0,n("../../node_modules/d3-color/src/color.js").rgb)(),o=Math.PI/3,s=2*Math.PI/3;function a(e){var t;return e=(.5-e)*Math.PI,r.r=255*(t=Math.sin(e))*t,r.g=255*(t=Math.sin(e+o))*t,r.b=255*(t=Math.sin(e+s))*t,r+""}},"../../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js":(e,t,n)=>{function r(e){return e=Math.max(0,Math.min(1,e)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+e*(1172.33-e*(10793.56-e*(33300.12-e*(38394.49-14825.05*e)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+e*(557.33+e*(1225.33-e*(3574.96-e*(1073.77+707.56*e)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+e*(3211.1-e*(15327.97-e*(27814-e*(22569.18-6838.66*e)))))))+")"}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,inferno:()=>i,magma:()=>a,plasma:()=>d});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js");function o(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}const s=o((0,r.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var a=o((0,r.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),i=o((0,r.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),d=o((0,r.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"))},"../../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,scheme:()=>s});var r=n("../../node_modules/d3-scale-chromatic/src/colors.js"),o=n("../../node_modules/d3-scale-chromatic/src/ramp.js"),s=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(r.default);const a=(0,o.default)(s)},"../../node_modules/d3-scale/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{map:()=>o,slice:()=>s});var r=Array.prototype,o=r.map,s=r.slice},"../../node_modules/d3-scale/src/band.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,point:()=>d});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-scale/src/init.js"),s=n("../../node_modules/d3-scale/src/ordinal.js");function a(){var e,t,n=(0,s.default)().unknown(void 0),i=n.domain,d=n.range,u=[0,1],c=!1,l=0,f=0,h=.5;function m(){var n=i().length,o=u[1]<u[0],s=u[o-0],a=u[1-o];e=(a-s)/Math.max(1,n-l+2*f),c&&(e=Math.floor(e)),s+=(a-s-e*(n-l))*h,t=e*(1-l),c&&(s=Math.round(s),t=Math.round(t));var m=(0,r.range)(n).map((function(t){return s+e*t}));return d(o?m.reverse():m)}return delete n.unknown,n.domain=function(e){return arguments.length?(i(e),m()):i()},n.range=function(e){return arguments.length?(u=[+e[0],+e[1]],m()):u.slice()},n.rangeRound=function(e){return u=[+e[0],+e[1]],c=!0,m()},n.bandwidth=function(){return t},n.step=function(){return e},n.round=function(e){return arguments.length?(c=!!e,m()):c},n.padding=function(e){return arguments.length?(l=Math.min(1,f=+e),m()):l},n.paddingInner=function(e){return arguments.length?(l=Math.min(1,e),m()):l},n.paddingOuter=function(e){return arguments.length?(f=+e,m()):f},n.align=function(e){return arguments.length?(h=Math.max(0,Math.min(1,e)),m()):h},n.copy=function(){return a(i(),u).round(c).paddingInner(l).paddingOuter(f).align(h)},o.initRange.apply(m(),arguments)}function i(e){var t=e.copy;return e.padding=e.paddingOuter,delete e.paddingInner,delete e.paddingOuter,e.copy=function(){return i(t())},e}function d(){return i(a.apply(null,arguments).paddingInner(1))}},"../../node_modules/d3-scale/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-scale/src/continuous.js":(e,t,n)=>{n.r(t),n.d(t,{copy:()=>_,default:()=>v,identity:()=>l,transformer:()=>g});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-interpolate/src/value.js"),s=n("../../node_modules/d3-interpolate/src/number.js"),a=n("../../node_modules/d3-interpolate/src/round.js"),i=n("../../node_modules/d3-scale/src/array.js"),d=n("../../node_modules/d3-scale/src/constant.js"),u=n("../../node_modules/d3-scale/src/number.js"),c=[0,1];function l(e){return e}function f(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:(0,d.default)(isNaN(t)?NaN:.5)}function h(e){var t,n=e[0],r=e[e.length-1];return n>r&&(t=n,n=r,r=t),function(e){return Math.max(n,Math.min(r,e))}}function m(e,t,n){var r=e[0],o=e[1],s=t[0],a=t[1];return o<r?(r=f(o,r),s=n(a,s)):(r=f(r,o),s=n(s,a)),function(e){return s(r(e))}}function p(e,t,n){var o=Math.min(e.length,t.length)-1,s=new Array(o),a=new Array(o),i=-1;for(e[o]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++i<o;)s[i]=f(e[i],e[i+1]),a[i]=n(t[i],t[i+1]);return function(t){var n=(0,r.bisect)(e,t,1,o)-1;return a[n](s[n](t))}}function _(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function g(){var e,t,n,r,d,f,_=c,g=c,v=o.default,y=l;function j(){return r=Math.min(_.length,g.length)>2?p:m,d=f=null,b}function b(t){return isNaN(t=+t)?n:(d||(d=r(_.map(e),g,v)))(e(y(t)))}return b.invert=function(n){return y(t((f||(f=r(g,_.map(e),s.default)))(n)))},b.domain=function(e){return arguments.length?(_=i.map.call(e,u.default),y===l||(y=h(_)),j()):_.slice()},b.range=function(e){return arguments.length?(g=i.slice.call(e),j()):g.slice()},b.rangeRound=function(e){return g=i.slice.call(e),v=a.default,j()},b.clamp=function(e){return arguments.length?(y=e?h(_):l,b):y!==l},b.interpolate=function(e){return arguments.length?(v=e,j()):v},b.unknown=function(e){return arguments.length?(n=e,b):n},function(n,r){return e=n,t=r,j()}}function v(e,t){return g()(e,t)}},"../../node_modules/d3-scale/src/diverging.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l,divergingLog:()=>f,divergingPow:()=>m,divergingSqrt:()=>p,divergingSymlog:()=>h});var r=n("../../node_modules/d3-scale/src/continuous.js"),o=n("../../node_modules/d3-scale/src/init.js"),s=n("../../node_modules/d3-scale/src/linear.js"),a=n("../../node_modules/d3-scale/src/log.js"),i=n("../../node_modules/d3-scale/src/sequential.js"),d=n("../../node_modules/d3-scale/src/symlog.js"),u=n("../../node_modules/d3-scale/src/pow.js");function c(){var e,t,n,o,s,a,i,d=0,u=.5,c=1,l=r.identity,f=!1;function h(e){return isNaN(e=+e)?i:(e=.5+((e=+a(e))-t)*(e<t?o:s),l(f?Math.max(0,Math.min(1,e)):e))}return h.domain=function(r){return arguments.length?(e=a(d=+r[0]),t=a(u=+r[1]),n=a(c=+r[2]),o=e===t?0:.5/(t-e),s=t===n?0:.5/(n-t),h):[d,u,c]},h.clamp=function(e){return arguments.length?(f=!!e,h):f},h.interpolator=function(e){return arguments.length?(l=e,h):l},h.unknown=function(e){return arguments.length?(i=e,h):i},function(r){return a=r,e=r(d),t=r(u),n=r(c),o=e===t?0:.5/(t-e),s=t===n?0:.5/(n-t),h}}function l(){var e=(0,s.linearish)(c()(r.identity));return e.copy=function(){return(0,i.copy)(e,l())},o.initInterpolator.apply(e,arguments)}function f(){var e=(0,a.loggish)(c()).domain([.1,1,10]);return e.copy=function(){return(0,i.copy)(e,f()).base(e.base())},o.initInterpolator.apply(e,arguments)}function h(){var e=(0,d.symlogish)(c());return e.copy=function(){return(0,i.copy)(e,h()).constant(e.constant())},o.initInterpolator.apply(e,arguments)}function m(){var e=(0,u.powish)(c());return e.copy=function(){return(0,i.copy)(e,m()).exponent(e.exponent())},o.initInterpolator.apply(e,arguments)}function p(){return m.apply(null,arguments).exponent(.5)}},"../../node_modules/d3-scale/src/identity.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-scale/src/array.js"),o=n("../../node_modules/d3-scale/src/linear.js"),s=n("../../node_modules/d3-scale/src/number.js");function a(e){var t;function n(e){return isNaN(e=+e)?t:e}return n.invert=n,n.domain=n.range=function(t){return arguments.length?(e=r.map.call(t,s.default),n):e.slice()},n.unknown=function(e){return arguments.length?(t=e,n):t},n.copy=function(){return a(e).unknown(t)},e=arguments.length?r.map.call(e,s.default):[0,1],(0,o.linearish)(n)}},"../../node_modules/d3-scale/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{scaleBand:()=>r.default,scaleDiverging:()=>g.default,scaleDivergingLog:()=>g.divergingLog,scaleDivergingPow:()=>g.divergingPow,scaleDivergingSqrt:()=>g.divergingSqrt,scaleDivergingSymlog:()=>g.divergingSymlog,scaleIdentity:()=>o.default,scaleImplicit:()=>d.implicit,scaleLinear:()=>s.default,scaleLog:()=>a.default,scaleOrdinal:()=>d.default,scalePoint:()=>r.point,scalePow:()=>u.default,scaleQuantile:()=>c.default,scaleQuantize:()=>l.default,scaleSequential:()=>p.default,scaleSequentialLog:()=>p.sequentialLog,scaleSequentialPow:()=>p.sequentialPow,scaleSequentialQuantile:()=>_.default,scaleSequentialSqrt:()=>p.sequentialSqrt,scaleSequentialSymlog:()=>p.sequentialSymlog,scaleSqrt:()=>u.sqrt,scaleSymlog:()=>i.default,scaleThreshold:()=>f.default,scaleTime:()=>h.default,scaleUtc:()=>m.default,tickFormat:()=>v.default});var r=n("../../node_modules/d3-scale/src/band.js"),o=n("../../node_modules/d3-scale/src/identity.js"),s=n("../../node_modules/d3-scale/src/linear.js"),a=n("../../node_modules/d3-scale/src/log.js"),i=n("../../node_modules/d3-scale/src/symlog.js"),d=n("../../node_modules/d3-scale/src/ordinal.js"),u=n("../../node_modules/d3-scale/src/pow.js"),c=n("../../node_modules/d3-scale/src/quantile.js"),l=n("../../node_modules/d3-scale/src/quantize.js"),f=n("../../node_modules/d3-scale/src/threshold.js"),h=n("../../node_modules/d3-scale/src/time.js"),m=n("../../node_modules/d3-scale/src/utcTime.js"),p=n("../../node_modules/d3-scale/src/sequential.js"),_=n("../../node_modules/d3-scale/src/sequentialQuantile.js"),g=n("../../node_modules/d3-scale/src/diverging.js"),v=n("../../node_modules/d3-scale/src/tickFormat.js")},"../../node_modules/d3-scale/src/init.js":(e,t,n)=>{function r(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}function o(e,t){switch(arguments.length){case 0:break;case 1:this.interpolator(e);break;default:this.interpolator(t).domain(e)}return this}n.r(t),n.d(t,{initInterpolator:()=>o,initRange:()=>r})},"../../node_modules/d3-scale/src/linear.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d,linearish:()=>i});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-scale/src/continuous.js"),s=n("../../node_modules/d3-scale/src/init.js"),a=n("../../node_modules/d3-scale/src/tickFormat.js");function i(e){var t=e.domain;return e.ticks=function(e){var n=t();return(0,r.ticks)(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var r=t();return(0,a.default)(r[0],r[r.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var o,s=t(),a=0,i=s.length-1,d=s[a],u=s[i];return u<d&&(o=d,d=u,u=o,o=a,a=i,i=o),(o=(0,r.tickIncrement)(d,u,n))>0?(d=Math.floor(d/o)*o,u=Math.ceil(u/o)*o,o=(0,r.tickIncrement)(d,u,n)):o<0&&(d=Math.ceil(d*o)/o,u=Math.floor(u*o)/o,o=(0,r.tickIncrement)(d,u,n)),o>0?(s[a]=Math.floor(d/o)*o,s[i]=Math.ceil(u/o)*o,t(s)):o<0&&(s[a]=Math.ceil(d*o)/o,s[i]=Math.floor(u*o)/o,t(s)),e},e}function d(){var e=(0,o.default)(o.identity,o.identity);return e.copy=function(){return(0,o.copy)(e,d())},s.initRange.apply(e,arguments),i(e)}},"../../node_modules/d3-scale/src/log.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p,loggish:()=>m});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-format/src/defaultLocale.js"),s=n("../../node_modules/d3-scale/src/nice.js"),a=n("../../node_modules/d3-scale/src/continuous.js"),i=n("../../node_modules/d3-scale/src/init.js");function d(e){return Math.log(e)}function u(e){return Math.exp(e)}function c(e){return-Math.log(-e)}function l(e){return-Math.exp(-e)}function f(e){return isFinite(e)?+("1e"+e):e<0?0:e}function h(e){return function(t){return-e(-t)}}function m(e){var t,n,a=e(d,u),i=a.domain,m=10;function p(){return t=function(e){return e===Math.E?Math.log:10===e&&Math.log10||2===e&&Math.log2||(e=Math.log(e),function(t){return Math.log(t)/e})}(m),n=function(e){return 10===e?f:e===Math.E?Math.exp:function(t){return Math.pow(e,t)}}(m),i()[0]<0?(t=h(t),n=h(n),e(c,l)):e(d,u),a}return a.base=function(e){return arguments.length?(m=+e,p()):m},a.domain=function(e){return arguments.length?(i(e),p()):i()},a.ticks=function(e){var o,s=i(),a=s[0],d=s[s.length-1];(o=d<a)&&(f=a,a=d,d=f);var u,c,l,f=t(a),h=t(d),p=null==e?10:+e,_=[];if(!(m%1)&&h-f<p){if(f=Math.round(f)-1,h=Math.round(h)+1,a>0){for(;f<h;++f)for(c=1,u=n(f);c<m;++c)if(!((l=u*c)<a)){if(l>d)break;_.push(l)}}else for(;f<h;++f)for(c=m-1,u=n(f);c>=1;--c)if(!((l=u*c)<a)){if(l>d)break;_.push(l)}}else _=(0,r.ticks)(f,h,Math.min(h-f,p)).map(n);return o?_.reverse():_},a.tickFormat=function(e,r){if(null==r&&(r=10===m?".0e":","),"function"!=typeof r&&(r=(0,o.format)(r)),e===1/0)return r;null==e&&(e=10);var s=Math.max(1,m*e/a.ticks().length);return function(e){var o=e/n(Math.round(t(e)));return o*m<m-.5&&(o*=m),o<=s?r(e):""}},a.nice=function(){return i((0,s.default)(i(),{floor:function(e){return n(Math.floor(t(e)))},ceil:function(e){return n(Math.ceil(t(e)))}}))},a}function p(){var e=m((0,a.transformer)()).domain([1,10]);return e.copy=function(){return(0,a.copy)(e,p()).base(e.base())},i.initRange.apply(e,arguments),e}},"../../node_modules/d3-scale/src/nice.js":(e,t,n)=>{function r(e,t){var n,r=0,o=(e=e.slice()).length-1,s=e[r],a=e[o];return a<s&&(n=r,r=o,o=n,n=s,s=a,a=n),e[r]=t.floor(s),e[o]=t.ceil(a),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-scale/src/number.js":(e,t,n)=>{function r(e){return+e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-scale/src/ordinal.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,implicit:()=>a});var r=n("../../node_modules/d3-collection/src/index.js"),o=n("../../node_modules/d3-scale/src/array.js"),s=n("../../node_modules/d3-scale/src/init.js"),a={name:"implicit"};function i(){var e=(0,r.map)(),t=[],n=[],d=a;function u(r){var o=r+"",s=e.get(o);if(!s){if(d!==a)return d;e.set(o,s=t.push(r))}return n[(s-1)%n.length]}return u.domain=function(n){if(!arguments.length)return t.slice();t=[],e=(0,r.map)();for(var o,s,a=-1,i=n.length;++a<i;)e.has(s=(o=n[a])+"")||e.set(s,t.push(o));return u},u.range=function(e){return arguments.length?(n=o.slice.call(e),u):n.slice()},u.unknown=function(e){return arguments.length?(d=e,u):d},u.copy=function(){return i(t,n).unknown(d)},s.initRange.apply(u,arguments),u}},"../../node_modules/d3-scale/src/pow.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c,powish:()=>u,sqrt:()=>l});var r=n("../../node_modules/d3-scale/src/linear.js"),o=n("../../node_modules/d3-scale/src/continuous.js"),s=n("../../node_modules/d3-scale/src/init.js");function a(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}function i(e){return e<0?-Math.sqrt(-e):Math.sqrt(e)}function d(e){return e<0?-e*e:e*e}function u(e){var t=e(o.identity,o.identity),n=1;return t.exponent=function(t){return arguments.length?1==(n=+t)?e(o.identity,o.identity):.5===n?e(i,d):e(a(n),a(1/n)):n},(0,r.linearish)(t)}function c(){var e=u((0,o.transformer)());return e.copy=function(){return(0,o.copy)(e,c()).exponent(e.exponent())},s.initRange.apply(e,arguments),e}function l(){return c.apply(null,arguments).exponent(.5)}},"../../node_modules/d3-scale/src/quantile.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-scale/src/array.js"),s=n("../../node_modules/d3-scale/src/init.js");function a(){var e,t=[],n=[],i=[];function d(){var e=0,o=Math.max(1,n.length);for(i=new Array(o-1);++e<o;)i[e-1]=(0,r.quantile)(t,e/o);return u}function u(t){return isNaN(t=+t)?e:n[(0,r.bisect)(i,t)]}return u.invertExtent=function(e){var r=n.indexOf(e);return r<0?[NaN,NaN]:[r>0?i[r-1]:t[0],r<i.length?i[r]:t[t.length-1]]},u.domain=function(e){if(!arguments.length)return t.slice();t=[];for(var n,o=0,s=e.length;o<s;++o)null==(n=e[o])||isNaN(n=+n)||t.push(n);return t.sort(r.ascending),d()},u.range=function(e){return arguments.length?(n=o.slice.call(e),d()):n.slice()},u.unknown=function(t){return arguments.length?(e=t,u):e},u.quantiles=function(){return i.slice()},u.copy=function(){return a().domain(t).range(n).unknown(e)},s.initRange.apply(u,arguments)}},"../../node_modules/d3-scale/src/quantize.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-scale/src/array.js"),s=n("../../node_modules/d3-scale/src/linear.js"),a=n("../../node_modules/d3-scale/src/init.js");function i(){var e,t=0,n=1,d=1,u=[.5],c=[0,1];function l(t){return t<=t?c[(0,r.bisect)(u,t,0,d)]:e}function f(){var e=-1;for(u=new Array(d);++e<d;)u[e]=((e+1)*n-(e-d)*t)/(d+1);return l}return l.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],f()):[t,n]},l.range=function(e){return arguments.length?(d=(c=o.slice.call(e)).length-1,f()):c.slice()},l.invertExtent=function(e){var r=c.indexOf(e);return r<0?[NaN,NaN]:r<1?[t,u[0]]:r>=d?[u[d-1],n]:[u[r-1],u[r]]},l.unknown=function(t){return arguments.length?(e=t,l):l},l.thresholds=function(){return u.slice()},l.copy=function(){return i().domain([t,n]).range(c).unknown(e)},a.initRange.apply((0,s.linearish)(l),arguments)}},"../../node_modules/d3-scale/src/sequential.js":(e,t,n)=>{n.r(t),n.d(t,{copy:()=>c,default:()=>l,sequentialLog:()=>f,sequentialPow:()=>m,sequentialSqrt:()=>p,sequentialSymlog:()=>h});var r=n("../../node_modules/d3-scale/src/continuous.js"),o=n("../../node_modules/d3-scale/src/init.js"),s=n("../../node_modules/d3-scale/src/linear.js"),a=n("../../node_modules/d3-scale/src/log.js"),i=n("../../node_modules/d3-scale/src/symlog.js"),d=n("../../node_modules/d3-scale/src/pow.js");function u(){var e,t,n,o,s,a=0,i=1,d=r.identity,u=!1;function c(t){return isNaN(t=+t)?s:d(0===n?.5:(t=(o(t)-e)*n,u?Math.max(0,Math.min(1,t)):t))}return c.domain=function(r){return arguments.length?(e=o(a=+r[0]),t=o(i=+r[1]),n=e===t?0:1/(t-e),c):[a,i]},c.clamp=function(e){return arguments.length?(u=!!e,c):u},c.interpolator=function(e){return arguments.length?(d=e,c):d},c.unknown=function(e){return arguments.length?(s=e,c):s},function(r){return o=r,e=r(a),t=r(i),n=e===t?0:1/(t-e),c}}function c(e,t){return t.domain(e.domain()).interpolator(e.interpolator()).clamp(e.clamp()).unknown(e.unknown())}function l(){var e=(0,s.linearish)(u()(r.identity));return e.copy=function(){return c(e,l())},o.initInterpolator.apply(e,arguments)}function f(){var e=(0,a.loggish)(u()).domain([1,10]);return e.copy=function(){return c(e,f()).base(e.base())},o.initInterpolator.apply(e,arguments)}function h(){var e=(0,i.symlogish)(u());return e.copy=function(){return c(e,h()).constant(e.constant())},o.initInterpolator.apply(e,arguments)}function m(){var e=(0,d.powish)(u());return e.copy=function(){return c(e,m()).exponent(e.exponent())},o.initInterpolator.apply(e,arguments)}function p(){return m.apply(null,arguments).exponent(.5)}},"../../node_modules/d3-scale/src/sequentialQuantile.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-scale/src/continuous.js"),s=n("../../node_modules/d3-scale/src/init.js");function a(){var e=[],t=o.identity;function n(n){if(!isNaN(n=+n))return t(((0,r.bisect)(e,n)-1)/(e.length-1))}return n.domain=function(t){if(!arguments.length)return e.slice();e=[];for(var o,s=0,a=t.length;s<a;++s)null==(o=t[s])||isNaN(o=+o)||e.push(o);return e.sort(r.ascending),n},n.interpolator=function(e){return arguments.length?(t=e,n):t},n.copy=function(){return a(t).domain(e)},s.initInterpolator.apply(n,arguments)}},"../../node_modules/d3-scale/src/symlog.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u,symlogish:()=>d});var r=n("../../node_modules/d3-scale/src/linear.js"),o=n("../../node_modules/d3-scale/src/continuous.js"),s=n("../../node_modules/d3-scale/src/init.js");function a(e){return function(t){return Math.sign(t)*Math.log1p(Math.abs(t/e))}}function i(e){return function(t){return Math.sign(t)*Math.expm1(Math.abs(t))*e}}function d(e){var t=1,n=e(a(t),i(t));return n.constant=function(n){return arguments.length?e(a(t=+n),i(t)):t},(0,r.linearish)(n)}function u(){var e=d((0,o.transformer)());return e.copy=function(){return(0,o.copy)(e,u()).constant(e.constant())},s.initRange.apply(e,arguments)}},"../../node_modules/d3-scale/src/threshold.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-scale/src/array.js"),s=n("../../node_modules/d3-scale/src/init.js");function a(){var e,t=[.5],n=[0,1],i=1;function d(o){return o<=o?n[(0,r.bisect)(t,o,0,i)]:e}return d.domain=function(e){return arguments.length?(t=o.slice.call(e),i=Math.min(t.length,n.length-1),d):t.slice()},d.range=function(e){return arguments.length?(n=o.slice.call(e),i=Math.min(t.length,n.length-1),d):n.slice()},d.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},d.unknown=function(t){return arguments.length?(e=t,d):e},d.copy=function(){return a().domain(t).range(n).unknown(e)},s.initRange.apply(d,arguments)}},"../../node_modules/d3-scale/src/tickFormat.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-format/src/formatSpecifier.js"),s=n("../../node_modules/d3-format/src/precisionPrefix.js"),a=n("../../node_modules/d3-format/src/defaultLocale.js"),i=n("../../node_modules/d3-format/src/precisionRound.js"),d=n("../../node_modules/d3-format/src/precisionFixed.js");function u(e,t,n,u){var c,l=(0,r.tickStep)(e,t,n);switch((u=(0,o.default)(null==u?",f":u)).type){case"s":var f=Math.max(Math.abs(e),Math.abs(t));return null!=u.precision||isNaN(c=(0,s.default)(l,f))||(u.precision=c),(0,a.formatPrefix)(u,f);case"":case"e":case"g":case"p":case"r":null!=u.precision||isNaN(c=(0,i.default)(l,Math.max(Math.abs(e),Math.abs(t))))||(u.precision=c-("e"===u.type));break;case"f":case"%":null!=u.precision||isNaN(c=(0,d.default)(l))||(u.precision=c-2*("%"===u.type))}return(0,a.format)(u)}},"../../node_modules/d3-scale/src/time.js":(e,t,n)=>{n.r(t),n.d(t,{calendar:()=>k,default:()=>E});var r=n("../../node_modules/d3-array/src/index.js"),o=n("../../node_modules/d3-time/src/year.js"),s=n("../../node_modules/d3-time/src/month.js"),a=n("../../node_modules/d3-time/src/week.js"),i=n("../../node_modules/d3-time/src/day.js"),d=n("../../node_modules/d3-time/src/hour.js"),u=n("../../node_modules/d3-time/src/minute.js"),c=n("../../node_modules/d3-time/src/second.js"),l=n("../../node_modules/d3-time/src/millisecond.js"),f=n("../../node_modules/d3-time-format/src/defaultLocale.js"),h=n("../../node_modules/d3-scale/src/array.js"),m=n("../../node_modules/d3-scale/src/continuous.js"),p=n("../../node_modules/d3-scale/src/init.js"),_=n("../../node_modules/d3-scale/src/nice.js"),g=1e3,v=60*g,y=60*v,j=24*y,b=7*j,x=30*j,w=365*j;function M(e){return new Date(e)}function S(e){return e instanceof Date?+e:+new Date(+e)}function k(e,t,n,o,s,a,i,d,u){var c=(0,m.default)(m.identity,m.identity),l=c.invert,f=c.domain,p=u(".%L"),E=u(":%S"),C=u("%I:%M"),A=u("%I %p"),T=u("%a %d"),R=u("%b %d"),q=u("%B"),N=u("%Y"),P=[[i,1,g],[i,5,5*g],[i,15,15*g],[i,30,30*g],[a,1,v],[a,5,5*v],[a,15,15*v],[a,30,30*v],[s,1,y],[s,3,3*y],[s,6,6*y],[s,12,12*y],[o,1,j],[o,2,2*j],[n,1,b],[t,1,x],[t,3,3*x],[e,1,w]];function B(r){return(i(r)<r?p:a(r)<r?E:s(r)<r?C:o(r)<r?A:t(r)<r?n(r)<r?T:R:e(r)<r?q:N)(r)}function O(t,n,o,s){if(null==t&&(t=10),"number"==typeof t){var a=Math.abs(o-n)/t,i=(0,r.bisector)((function(e){return e[2]})).right(P,a);i===P.length?(s=(0,r.tickStep)(n/w,o/w,t),t=e):i?(s=(i=P[a/P[i-1][2]<P[i][2]/a?i-1:i])[1],t=i[0]):(s=Math.max((0,r.tickStep)(n,o,t),1),t=d)}return null==s?t:t.every(s)}return c.invert=function(e){return new Date(l(e))},c.domain=function(e){return arguments.length?f(h.map.call(e,S)):f().map(M)},c.ticks=function(e,t){var n,r=f(),o=r[0],s=r[r.length-1],a=s<o;return a&&(n=o,o=s,s=n),n=(n=O(e,o,s,t))?n.range(o,s+1):[],a?n.reverse():n},c.tickFormat=function(e,t){return null==t?B:u(t)},c.nice=function(e,t){var n=f();return(e=O(e,n[0],n[n.length-1],t))?f((0,_.default)(n,e)):c},c.copy=function(){return(0,m.copy)(c,k(e,t,n,o,s,a,i,d,u))},c}function E(){return p.initRange.apply(k(o.default,s.default,a.sunday,i.default,d.default,u.default,c.default,l.default,f.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)}},"../../node_modules/d3-scale/src/utcTime.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var r=n("../../node_modules/d3-scale/src/time.js"),o=n("../../node_modules/d3-time-format/src/defaultLocale.js"),s=n("../../node_modules/d3-time/src/utcYear.js"),a=n("../../node_modules/d3-time/src/utcMonth.js"),i=n("../../node_modules/d3-time/src/utcWeek.js"),d=n("../../node_modules/d3-time/src/utcDay.js"),u=n("../../node_modules/d3-time/src/utcHour.js"),c=n("../../node_modules/d3-time/src/utcMinute.js"),l=n("../../node_modules/d3-time/src/second.js"),f=n("../../node_modules/d3-time/src/millisecond.js"),h=n("../../node_modules/d3-scale/src/init.js");function m(){return h.initRange.apply((0,r.calendar)(s.default,a.default,i.utcSunday,d.default,u.default,c.default,l.default,f.default,o.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)}},"../../node_modules/d3-selection/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/create.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/creator.js"),o=n("../../node_modules/d3-selection/src/select.js");function s(e){return(0,o.default)((0,r.default)(e).call(document.documentElement))}},"../../node_modules/d3-selection/src/creator.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-selection/src/namespace.js"),o=n("../../node_modules/d3-selection/src/namespaces.js");function s(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===o.xhtml&&t.documentElement.namespaceURI===o.xhtml?t.createElement(e):t.createElementNS(n,e)}}function a(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function i(e){var t=(0,r.default)(e);return(t.local?a:s)(t)}},"../../node_modules/d3-selection/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{clientPoint:()=>c.default,create:()=>r.default,creator:()=>o.default,customEvent:()=>j.customEvent,event:()=>j.event,local:()=>s.default,matcher:()=>a.default,mouse:()=>i.default,namespace:()=>d.default,namespaces:()=>u.default,select:()=>l.default,selectAll:()=>f.default,selection:()=>h.default,selector:()=>m.default,selectorAll:()=>p.default,style:()=>_.styleValue,touch:()=>g.default,touches:()=>v.default,window:()=>y.default});var r=n("../../node_modules/d3-selection/src/create.js"),o=n("../../node_modules/d3-selection/src/creator.js"),s=n("../../node_modules/d3-selection/src/local.js"),a=n("../../node_modules/d3-selection/src/matcher.js"),i=n("../../node_modules/d3-selection/src/mouse.js"),d=n("../../node_modules/d3-selection/src/namespace.js"),u=n("../../node_modules/d3-selection/src/namespaces.js"),c=n("../../node_modules/d3-selection/src/point.js"),l=n("../../node_modules/d3-selection/src/select.js"),f=n("../../node_modules/d3-selection/src/selectAll.js"),h=n("../../node_modules/d3-selection/src/selection/index.js"),m=n("../../node_modules/d3-selection/src/selector.js"),p=n("../../node_modules/d3-selection/src/selectorAll.js"),_=n("../../node_modules/d3-selection/src/selection/style.js"),g=n("../../node_modules/d3-selection/src/touch.js"),v=n("../../node_modules/d3-selection/src/touches.js"),y=n("../../node_modules/d3-selection/src/window.js"),j=n("../../node_modules/d3-selection/src/selection/on.js")},"../../node_modules/d3-selection/src/local.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=0;function o(){return new s}function s(){this._="@"+(++r).toString(36)}s.prototype=o.prototype={constructor:s,get:function(e){for(var t=this._;!(t in e);)if(!(e=e.parentNode))return;return e[t]},set:function(e,t){return e[this._]=t},remove:function(e){return this._ in e&&delete e[this._]},toString:function(){return this._}}},"../../node_modules/d3-selection/src/matcher.js":(e,t,n)=>{function r(e){return function(){return this.matches(e)}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/mouse.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/sourceEvent.js"),o=n("../../node_modules/d3-selection/src/point.js");function s(e){var t=(0,r.default)();return t.changedTouches&&(t=t.changedTouches[0]),(0,o.default)(e,t)}},"../../node_modules/d3-selection/src/namespace.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/namespaces.js");function o(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),r.default.hasOwnProperty(t)?{space:r.default[t],local:e}:e}},"../../node_modules/d3-selection/src/namespaces.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o,xhtml:()=>r});var r="http://www.w3.org/1999/xhtml";const o={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}},"../../node_modules/d3-selection/src/point.js":(e,t,n)=>{function r(e,t){var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=t.clientX,r.y=t.clientY,[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var o=e.getBoundingClientRect();return[t.clientX-o.left-e.clientLeft,t.clientY-o.top-e.clientTop]}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/select.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/selection/index.js");function o(e){return"string"==typeof e?new r.Selection([[document.querySelector(e)]],[document.documentElement]):new r.Selection([[e]],r.root)}},"../../node_modules/d3-selection/src/selectAll.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/selection/index.js");function o(e){return"string"==typeof e?new r.Selection([document.querySelectorAll(e)],[document.documentElement]):new r.Selection([null==e?[]:e],r.root)}},"../../node_modules/d3-selection/src/selection/append.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/creator.js");function o(e){var t="function"==typeof e?e:(0,r.default)(e);return this.select((function(){return this.appendChild(t.apply(this,arguments))}))}},"../../node_modules/d3-selection/src/selection/attr.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var r=n("../../node_modules/d3-selection/src/namespace.js");function o(e){return function(){this.removeAttribute(e)}}function s(e){return function(){this.removeAttributeNS(e.space,e.local)}}function a(e,t){return function(){this.setAttribute(e,t)}}function i(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function d(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}function u(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function c(e,t){var n=(0,r.default)(e);if(arguments.length<2){var c=this.node();return n.local?c.getAttributeNS(n.space,n.local):c.getAttribute(n)}return this.each((null==t?n.local?s:o:"function"==typeof t?n.local?u:d:n.local?i:a)(n,t))}},"../../node_modules/d3-selection/src/selection/call.js":(e,t,n)=>{function r(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/classed.js":(e,t,n)=>{function r(e){return e.trim().split(/^|\s+/)}function o(e){return e.classList||new s(e)}function s(e){this._node=e,this._names=r(e.getAttribute("class")||"")}function a(e,t){for(var n=o(e),r=-1,s=t.length;++r<s;)n.add(t[r])}function i(e,t){for(var n=o(e),r=-1,s=t.length;++r<s;)n.remove(t[r])}function d(e){return function(){a(this,e)}}function u(e){return function(){i(this,e)}}function c(e,t){return function(){(t.apply(this,arguments)?a:i)(this,e)}}function l(e,t){var n=r(e+"");if(arguments.length<2){for(var s=o(this.node()),a=-1,i=n.length;++a<i;)if(!s.contains(n[a]))return!1;return!0}return this.each(("function"==typeof t?c:t?d:u)(n,t))}n.r(t),n.d(t,{default:()=>l}),s.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}}},"../../node_modules/d3-selection/src/selection/clone.js":(e,t,n)=>{function r(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function o(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function s(e){return this.select(e?o:r)}n.r(t),n.d(t,{default:()=>s})},"../../node_modules/d3-selection/src/selection/data.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var r=n("../../node_modules/d3-selection/src/selection/index.js"),o=n("../../node_modules/d3-selection/src/selection/enter.js"),s=n("../../node_modules/d3-selection/src/constant.js"),a="$";function i(e,t,n,r,s,a){for(var i,d=0,u=t.length,c=a.length;d<c;++d)(i=t[d])?(i.__data__=a[d],r[d]=i):n[d]=new o.EnterNode(e,a[d]);for(;d<u;++d)(i=t[d])&&(s[d]=i)}function d(e,t,n,r,s,i,d){var u,c,l,f={},h=t.length,m=i.length,p=new Array(h);for(u=0;u<h;++u)(c=t[u])&&(p[u]=l=a+d.call(c,c.__data__,u,t),l in f?s[u]=c:f[l]=c);for(u=0;u<m;++u)(c=f[l=a+d.call(e,i[u],u,i)])?(r[u]=c,c.__data__=i[u],f[l]=null):n[u]=new o.EnterNode(e,i[u]);for(u=0;u<h;++u)(c=t[u])&&f[p[u]]===c&&(s[u]=c)}function u(e,t){if(!e)return g=new Array(this.size()),h=-1,this.each((function(e){g[++h]=e})),g;var n=t?d:i,o=this._parents,a=this._groups;"function"!=typeof e&&(e=(0,s.default)(e));for(var u=a.length,c=new Array(u),l=new Array(u),f=new Array(u),h=0;h<u;++h){var m=o[h],p=a[h],_=p.length,g=e.call(m,m&&m.__data__,h,o),v=g.length,y=l[h]=new Array(v),j=c[h]=new Array(v);n(m,p,y,j,f[h]=new Array(_),g,t);for(var b,x,w=0,M=0;w<v;++w)if(b=y[w]){for(w>=M&&(M=w+1);!(x=j[M])&&++M<v;);b._next=x||null}}return(c=new r.Selection(c,o))._enter=l,c._exit=f,c}},"../../node_modules/d3-selection/src/selection/datum.js":(e,t,n)=>{function r(e){return arguments.length?this.property("__data__",e):this.node().__data__}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/dispatch.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-selection/src/window.js");function o(e,t,n){var o=(0,r.default)(e),s=o.CustomEvent;"function"==typeof s?s=new s(t,n):(s=o.document.createEvent("Event"),n?(s.initEvent(t,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(t,!1,!1)),e.dispatchEvent(s)}function s(e,t){return function(){return o(this,e,t)}}function a(e,t){return function(){return o(this,e,t.apply(this,arguments))}}function i(e,t){return this.each(("function"==typeof t?a:s)(e,t))}},"../../node_modules/d3-selection/src/selection/each.js":(e,t,n)=>{function r(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var o,s=t[n],a=0,i=s.length;a<i;++a)(o=s[a])&&e.call(o,o.__data__,a,s);return this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/empty.js":(e,t,n)=>{function r(){return!this.node()}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/enter.js":(e,t,n)=>{n.r(t),n.d(t,{EnterNode:()=>a,default:()=>s});var r=n("../../node_modules/d3-selection/src/selection/sparse.js"),o=n("../../node_modules/d3-selection/src/selection/index.js");function s(){return new o.Selection(this._enter||this._groups.map(r.default),this._parents)}function a(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}a.prototype={constructor:a,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}}},"../../node_modules/d3-selection/src/selection/exit.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/selection/sparse.js"),o=n("../../node_modules/d3-selection/src/selection/index.js");function s(){return new o.Selection(this._exit||this._groups.map(r.default),this._parents)}},"../../node_modules/d3-selection/src/selection/filter.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/selection/index.js"),o=n("../../node_modules/d3-selection/src/matcher.js");function s(e){"function"!=typeof e&&(e=(0,o.default)(e));for(var t=this._groups,n=t.length,s=new Array(n),a=0;a<n;++a)for(var i,d=t[a],u=d.length,c=s[a]=[],l=0;l<u;++l)(i=d[l])&&e.call(i,i.__data__,l,d)&&c.push(i);return new r.Selection(s,this._parents)}},"../../node_modules/d3-selection/src/selection/html.js":(e,t,n)=>{function r(){this.innerHTML=""}function o(e){return function(){this.innerHTML=e}}function s(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}function a(e){return arguments.length?this.each(null==e?r:("function"==typeof e?s:o)(e)):this.node().innerHTML}n.r(t),n.d(t,{default:()=>a})},"../../node_modules/d3-selection/src/selection/index.js":(e,t,n)=>{n.r(t),n.d(t,{Selection:()=>B,default:()=>z,root:()=>P});var r=n("../../node_modules/d3-selection/src/selection/select.js"),o=n("../../node_modules/d3-selection/src/selection/selectAll.js"),s=n("../../node_modules/d3-selection/src/selection/filter.js"),a=n("../../node_modules/d3-selection/src/selection/data.js"),i=n("../../node_modules/d3-selection/src/selection/enter.js"),d=n("../../node_modules/d3-selection/src/selection/exit.js"),u=n("../../node_modules/d3-selection/src/selection/join.js"),c=n("../../node_modules/d3-selection/src/selection/merge.js"),l=n("../../node_modules/d3-selection/src/selection/order.js"),f=n("../../node_modules/d3-selection/src/selection/sort.js"),h=n("../../node_modules/d3-selection/src/selection/call.js"),m=n("../../node_modules/d3-selection/src/selection/nodes.js"),p=n("../../node_modules/d3-selection/src/selection/node.js"),_=n("../../node_modules/d3-selection/src/selection/size.js"),g=n("../../node_modules/d3-selection/src/selection/empty.js"),v=n("../../node_modules/d3-selection/src/selection/each.js"),y=n("../../node_modules/d3-selection/src/selection/attr.js"),j=n("../../node_modules/d3-selection/src/selection/style.js"),b=n("../../node_modules/d3-selection/src/selection/property.js"),x=n("../../node_modules/d3-selection/src/selection/classed.js"),w=n("../../node_modules/d3-selection/src/selection/text.js"),M=n("../../node_modules/d3-selection/src/selection/html.js"),S=n("../../node_modules/d3-selection/src/selection/raise.js"),k=n("../../node_modules/d3-selection/src/selection/lower.js"),E=n("../../node_modules/d3-selection/src/selection/append.js"),C=n("../../node_modules/d3-selection/src/selection/insert.js"),A=n("../../node_modules/d3-selection/src/selection/remove.js"),T=n("../../node_modules/d3-selection/src/selection/clone.js"),R=n("../../node_modules/d3-selection/src/selection/datum.js"),q=n("../../node_modules/d3-selection/src/selection/on.js"),N=n("../../node_modules/d3-selection/src/selection/dispatch.js"),P=[null];function B(e,t){this._groups=e,this._parents=t}function O(){return new B([[document.documentElement]],P)}B.prototype=O.prototype={constructor:B,select:r.default,selectAll:o.default,filter:s.default,data:a.default,enter:i.default,exit:d.default,join:u.default,merge:c.default,order:l.default,sort:f.default,call:h.default,nodes:m.default,node:p.default,size:_.default,empty:g.default,each:v.default,attr:y.default,style:j.default,property:b.default,classed:x.default,text:w.default,html:M.default,raise:S.default,lower:k.default,append:E.default,insert:C.default,remove:A.default,clone:T.default,datum:R.default,on:q.default,dispatch:N.default};const z=O},"../../node_modules/d3-selection/src/selection/insert.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-selection/src/creator.js"),o=n("../../node_modules/d3-selection/src/selector.js");function s(){return null}function a(e,t){var n="function"==typeof e?e:(0,r.default)(e),a=null==t?s:"function"==typeof t?t:(0,o.default)(t);return this.select((function(){return this.insertBefore(n.apply(this,arguments),a.apply(this,arguments)||null)}))}},"../../node_modules/d3-selection/src/selection/join.js":(e,t,n)=>{function r(e,t,n){var r=this.enter(),o=this,s=this.exit();return r="function"==typeof e?e(r):r.append(e+""),null!=t&&(o=t(o)),null==n?s.remove():n(s),r&&o?r.merge(o).order():o}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/lower.js":(e,t,n)=>{function r(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function o(){return this.each(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-selection/src/selection/merge.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/selection/index.js");function o(e){for(var t=this._groups,n=e._groups,o=t.length,s=n.length,a=Math.min(o,s),i=new Array(o),d=0;d<a;++d)for(var u,c=t[d],l=n[d],f=c.length,h=i[d]=new Array(f),m=0;m<f;++m)(u=c[m]||l[m])&&(h[m]=u);for(;d<o;++d)i[d]=t[d];return new r.Selection(i,this._parents)}},"../../node_modules/d3-selection/src/selection/node.js":(e,t,n)=>{function r(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],o=0,s=r.length;o<s;++o){var a=r[o];if(a)return a}return null}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/nodes.js":(e,t,n)=>{function r(){var e=new Array(this.size()),t=-1;return this.each((function(){e[++t]=this})),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/on.js":(e,t,n)=>{n.r(t),n.d(t,{customEvent:()=>c,default:()=>u,event:()=>o});var r={},o=null;function s(e,t,n){return e=a(e,t,n),function(t){var n=t.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||e.call(this,t)}}function a(e,t,n){return function(r){var s=o;o=r;try{e.call(this,this.__data__,t,n)}finally{o=s}}}function i(e){return function(){var t=this.__on;if(t){for(var n,r=0,o=-1,s=t.length;r<s;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++o]=n:this.removeEventListener(n.type,n.listener,n.capture);++o?t.length=o:delete this.__on}}}function d(e,t,n){var o=r.hasOwnProperty(e.type)?s:a;return function(r,s,a){var i,d=this.__on,u=o(t,s,a);if(d)for(var c=0,l=d.length;c<l;++c)if((i=d[c]).type===e.type&&i.name===e.name)return this.removeEventListener(i.type,i.listener,i.capture),this.addEventListener(i.type,i.listener=u,i.capture=n),void(i.value=t);this.addEventListener(e.type,u,n),i={type:e.type,name:e.name,value:t,listener:u,capture:n},d?d.push(i):this.__on=[i]}}function u(e,t,n){var r,o,s=function(e){return e.trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}}))}(e+""),a=s.length;if(!(arguments.length<2)){for(u=t?d:i,null==n&&(n=!1),r=0;r<a;++r)this.each(u(s[r],t,n));return this}var u=this.node().__on;if(u)for(var c,l=0,f=u.length;l<f;++l)for(r=0,c=u[l];r<a;++r)if((o=s[r]).type===c.type&&o.name===c.name)return c.value}function c(e,t,n,r){var s=o;e.sourceEvent=o,o=e;try{return t.apply(n,r)}finally{o=s}}"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(r={mouseenter:"mouseover",mouseleave:"mouseout"}))},"../../node_modules/d3-selection/src/selection/order.js":(e,t,n)=>{function r(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,o=e[t],s=o.length-1,a=o[s];--s>=0;)(r=o[s])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/property.js":(e,t,n)=>{function r(e){return function(){delete this[e]}}function o(e,t){return function(){this[e]=t}}function s(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}function a(e,t){return arguments.length>1?this.each((null==t?r:"function"==typeof t?s:o)(e,t)):this.node()[e]}n.r(t),n.d(t,{default:()=>a})},"../../node_modules/d3-selection/src/selection/raise.js":(e,t,n)=>{function r(){this.nextSibling&&this.parentNode.appendChild(this)}function o(){return this.each(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-selection/src/selection/remove.js":(e,t,n)=>{function r(){var e=this.parentNode;e&&e.removeChild(this)}function o(){return this.each(r)}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-selection/src/selection/select.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/selection/index.js"),o=n("../../node_modules/d3-selection/src/selector.js");function s(e){"function"!=typeof e&&(e=(0,o.default)(e));for(var t=this._groups,n=t.length,s=new Array(n),a=0;a<n;++a)for(var i,d,u=t[a],c=u.length,l=s[a]=new Array(c),f=0;f<c;++f)(i=u[f])&&(d=e.call(i,i.__data__,f,u))&&("__data__"in i&&(d.__data__=i.__data__),l[f]=d);return new r.Selection(s,this._parents)}},"../../node_modules/d3-selection/src/selection/selectAll.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/selection/index.js"),o=n("../../node_modules/d3-selection/src/selectorAll.js");function s(e){"function"!=typeof e&&(e=(0,o.default)(e));for(var t=this._groups,n=t.length,s=[],a=[],i=0;i<n;++i)for(var d,u=t[i],c=u.length,l=0;l<c;++l)(d=u[l])&&(s.push(e.call(d,d.__data__,l,u)),a.push(d));return new r.Selection(s,a)}},"../../node_modules/d3-selection/src/selection/size.js":(e,t,n)=>{function r(){var e=0;return this.each((function(){++e})),e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/sort.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/selection/index.js");function o(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=s);for(var n=this._groups,o=n.length,a=new Array(o),i=0;i<o;++i){for(var d,u=n[i],c=u.length,l=a[i]=new Array(c),f=0;f<c;++f)(d=u[f])&&(l[f]=d);l.sort(t)}return new r.Selection(a,this._parents).order()}function s(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}},"../../node_modules/d3-selection/src/selection/sparse.js":(e,t,n)=>{function r(e){return new Array(e.length)}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-selection/src/selection/style.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,styleValue:()=>d});var r=n("../../node_modules/d3-selection/src/window.js");function o(e){return function(){this.style.removeProperty(e)}}function s(e,t,n){return function(){this.style.setProperty(e,t,n)}}function a(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}function i(e,t,n){return arguments.length>1?this.each((null==t?o:"function"==typeof t?a:s)(e,t,null==n?"":n)):d(this.node(),e)}function d(e,t){return e.style.getPropertyValue(t)||(0,r.default)(e).getComputedStyle(e,null).getPropertyValue(t)}},"../../node_modules/d3-selection/src/selection/text.js":(e,t,n)=>{function r(){this.textContent=""}function o(e){return function(){this.textContent=e}}function s(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}function a(e){return arguments.length?this.each(null==e?r:("function"==typeof e?s:o)(e)):this.node().textContent}n.r(t),n.d(t,{default:()=>a})},"../../node_modules/d3-selection/src/selector.js":(e,t,n)=>{function r(){}function o(e){return null==e?r:function(){return this.querySelector(e)}}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-selection/src/selectorAll.js":(e,t,n)=>{function r(){return[]}function o(e){return null==e?r:function(){return this.querySelectorAll(e)}}n.r(t),n.d(t,{default:()=>o})},"../../node_modules/d3-selection/src/sourceEvent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/selection/on.js");function o(){for(var e,t=r.event;e=t.sourceEvent;)t=e;return t}},"../../node_modules/d3-selection/src/touch.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/sourceEvent.js"),o=n("../../node_modules/d3-selection/src/point.js");function s(e,t,n){arguments.length<3&&(n=t,t=(0,r.default)().changedTouches);for(var s,a=0,i=t?t.length:0;a<i;++a)if((s=t[a]).identifier===n)return(0,o.default)(e,s);return null}},"../../node_modules/d3-selection/src/touches.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/sourceEvent.js"),o=n("../../node_modules/d3-selection/src/point.js");function s(e,t){null==t&&(t=(0,r.default)().touches);for(var n=0,s=t?t.length:0,a=new Array(s);n<s;++n)a[n]=(0,o.default)(e,t[n]);return a}},"../../node_modules/d3-selection/src/window.js":(e,t,n)=>{function r(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/arc.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n("../../node_modules/d3-path/src/path.js"),o=n("../../node_modules/d3-shape/src/constant.js"),s=n("../../node_modules/d3-shape/src/math.js");function a(e){return e.innerRadius}function i(e){return e.outerRadius}function d(e){return e.startAngle}function u(e){return e.endAngle}function c(e){return e&&e.padAngle}function l(e,t,n,r,o,a,i){var d=e-n,u=t-r,c=(i?a:-a)/(0,s.sqrt)(d*d+u*u),l=c*u,f=-c*d,h=e+l,m=t+f,p=n+l,_=r+f,g=(h+p)/2,v=(m+_)/2,y=p-h,j=_-m,b=y*y+j*j,x=o-a,w=h*_-p*m,M=(j<0?-1:1)*(0,s.sqrt)((0,s.max)(0,x*x*b-w*w)),S=(w*j-y*M)/b,k=(-w*y-j*M)/b,E=(w*j+y*M)/b,C=(-w*y+j*M)/b,A=S-g,T=k-v,R=E-g,q=C-v;return A*A+T*T>R*R+q*q&&(S=E,k=C),{cx:S,cy:k,x01:-l,y01:-f,x11:S*(o/x-1),y11:k*(o/x-1)}}function f(){var e=a,t=i,n=(0,o.default)(0),f=null,h=d,m=u,p=c,_=null;function g(){var o,a,i=+e.apply(this,arguments),d=+t.apply(this,arguments),u=h.apply(this,arguments)-s.halfPi,c=m.apply(this,arguments)-s.halfPi,g=(0,s.abs)(c-u),v=c>u;if(_||(_=o=(0,r.default)()),d<i&&(a=d,d=i,i=a),d>s.epsilon)if(g>s.tau-s.epsilon)_.moveTo(d*(0,s.cos)(u),d*(0,s.sin)(u)),_.arc(0,0,d,u,c,!v),i>s.epsilon&&(_.moveTo(i*(0,s.cos)(c),i*(0,s.sin)(c)),_.arc(0,0,i,c,u,v));else{var y,j,b=u,x=c,w=u,M=c,S=g,k=g,E=p.apply(this,arguments)/2,C=E>s.epsilon&&(f?+f.apply(this,arguments):(0,s.sqrt)(i*i+d*d)),A=(0,s.min)((0,s.abs)(d-i)/2,+n.apply(this,arguments)),T=A,R=A;if(C>s.epsilon){var q=(0,s.asin)(C/i*(0,s.sin)(E)),N=(0,s.asin)(C/d*(0,s.sin)(E));(S-=2*q)>s.epsilon?(w+=q*=v?1:-1,M-=q):(S=0,w=M=(u+c)/2),(k-=2*N)>s.epsilon?(b+=N*=v?1:-1,x-=N):(k=0,b=x=(u+c)/2)}var P=d*(0,s.cos)(b),B=d*(0,s.sin)(b),O=i*(0,s.cos)(M),z=i*(0,s.sin)(M);if(A>s.epsilon){var D,I=d*(0,s.cos)(x),L=d*(0,s.sin)(x),F=i*(0,s.cos)(w),Y=i*(0,s.sin)(w);if(g<s.pi&&(D=function(e,t,n,r,o,a,i,d){var u=n-e,c=r-t,l=i-o,f=d-a,h=f*u-l*c;if(!(h*h<s.epsilon))return[e+(h=(l*(t-a)-f*(e-o))/h)*u,t+h*c]}(P,B,F,Y,I,L,O,z))){var G=P-D[0],U=B-D[1],H=I-D[0],V=L-D[1],W=1/(0,s.sin)((0,s.acos)((G*H+U*V)/((0,s.sqrt)(G*G+U*U)*(0,s.sqrt)(H*H+V*V)))/2),X=(0,s.sqrt)(D[0]*D[0]+D[1]*D[1]);T=(0,s.min)(A,(i-X)/(W-1)),R=(0,s.min)(A,(d-X)/(W+1))}}k>s.epsilon?R>s.epsilon?(y=l(F,Y,P,B,d,R,v),j=l(I,L,O,z,d,R,v),_.moveTo(y.cx+y.x01,y.cy+y.y01),R<A?_.arc(y.cx,y.cy,R,(0,s.atan2)(y.y01,y.x01),(0,s.atan2)(j.y01,j.x01),!v):(_.arc(y.cx,y.cy,R,(0,s.atan2)(y.y01,y.x01),(0,s.atan2)(y.y11,y.x11),!v),_.arc(0,0,d,(0,s.atan2)(y.cy+y.y11,y.cx+y.x11),(0,s.atan2)(j.cy+j.y11,j.cx+j.x11),!v),_.arc(j.cx,j.cy,R,(0,s.atan2)(j.y11,j.x11),(0,s.atan2)(j.y01,j.x01),!v))):(_.moveTo(P,B),_.arc(0,0,d,b,x,!v)):_.moveTo(P,B),i>s.epsilon&&S>s.epsilon?T>s.epsilon?(y=l(O,z,I,L,i,-T,v),j=l(P,B,F,Y,i,-T,v),_.lineTo(y.cx+y.x01,y.cy+y.y01),T<A?_.arc(y.cx,y.cy,T,(0,s.atan2)(y.y01,y.x01),(0,s.atan2)(j.y01,j.x01),!v):(_.arc(y.cx,y.cy,T,(0,s.atan2)(y.y01,y.x01),(0,s.atan2)(y.y11,y.x11),!v),_.arc(0,0,i,(0,s.atan2)(y.cy+y.y11,y.cx+y.x11),(0,s.atan2)(j.cy+j.y11,j.cx+j.x11),v),_.arc(j.cx,j.cy,T,(0,s.atan2)(j.y11,j.x11),(0,s.atan2)(j.y01,j.x01),!v))):_.arc(0,0,i,M,w,v):_.lineTo(O,z)}else _.moveTo(0,0);if(_.closePath(),o)return _=null,o+""||null}return g.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+h.apply(this,arguments)+ +m.apply(this,arguments))/2-s.pi/2;return[(0,s.cos)(r)*n,(0,s.sin)(r)*n]},g.innerRadius=function(t){return arguments.length?(e="function"==typeof t?t:(0,o.default)(+t),g):e},g.outerRadius=function(e){return arguments.length?(t="function"==typeof e?e:(0,o.default)(+e),g):t},g.cornerRadius=function(e){return arguments.length?(n="function"==typeof e?e:(0,o.default)(+e),g):n},g.padRadius=function(e){return arguments.length?(f=null==e?null:"function"==typeof e?e:(0,o.default)(+e),g):f},g.startAngle=function(e){return arguments.length?(h="function"==typeof e?e:(0,o.default)(+e),g):h},g.endAngle=function(e){return arguments.length?(m="function"==typeof e?e:(0,o.default)(+e),g):m},g.padAngle=function(e){return arguments.length?(p="function"==typeof e?e:(0,o.default)(+e),g):p},g.context=function(e){return arguments.length?(_=null==e?null:e,g):_},g}},"../../node_modules/d3-shape/src/area.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-path/src/path.js"),o=n("../../node_modules/d3-shape/src/constant.js"),s=n("../../node_modules/d3-shape/src/curve/linear.js"),a=n("../../node_modules/d3-shape/src/line.js"),i=n("../../node_modules/d3-shape/src/point.js");function d(){var e=i.x,t=null,n=(0,o.default)(0),d=i.y,u=(0,o.default)(!0),c=null,l=s.default,f=null;function h(o){var s,a,i,h,m,p=o.length,_=!1,g=new Array(p),v=new Array(p);for(null==c&&(f=l(m=(0,r.default)())),s=0;s<=p;++s){if(!(s<p&&u(h=o[s],s,o))===_)if(_=!_)a=s,f.areaStart(),f.lineStart();else{for(f.lineEnd(),f.lineStart(),i=s-1;i>=a;--i)f.point(g[i],v[i]);f.lineEnd(),f.areaEnd()}_&&(g[s]=+e(h,s,o),v[s]=+n(h,s,o),f.point(t?+t(h,s,o):g[s],d?+d(h,s,o):v[s]))}if(m)return f=null,m+""||null}function m(){return(0,a.default)().defined(u).curve(l).context(c)}return h.x=function(n){return arguments.length?(e="function"==typeof n?n:(0,o.default)(+n),t=null,h):e},h.x0=function(t){return arguments.length?(e="function"==typeof t?t:(0,o.default)(+t),h):e},h.x1=function(e){return arguments.length?(t=null==e?null:"function"==typeof e?e:(0,o.default)(+e),h):t},h.y=function(e){return arguments.length?(n="function"==typeof e?e:(0,o.default)(+e),d=null,h):n},h.y0=function(e){return arguments.length?(n="function"==typeof e?e:(0,o.default)(+e),h):n},h.y1=function(e){return arguments.length?(d=null==e?null:"function"==typeof e?e:(0,o.default)(+e),h):d},h.lineX0=h.lineY0=function(){return m().x(e).y(n)},h.lineY1=function(){return m().x(e).y(d)},h.lineX1=function(){return m().x(t).y(n)},h.defined=function(e){return arguments.length?(u="function"==typeof e?e:(0,o.default)(!!e),h):u},h.curve=function(e){return arguments.length?(l=e,null!=c&&(f=l(c)),h):l},h.context=function(e){return arguments.length?(null==e?c=f=null:f=l(c=e),h):c},h}},"../../node_modules/d3-shape/src/areaRadial.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-shape/src/curve/radial.js"),o=n("../../node_modules/d3-shape/src/area.js"),s=n("../../node_modules/d3-shape/src/lineRadial.js");function a(){var e=(0,o.default)().curve(r.curveRadialLinear),t=e.curve,n=e.lineX0,a=e.lineX1,i=e.lineY0,d=e.lineY1;return e.angle=e.x,delete e.x,e.startAngle=e.x0,delete e.x0,e.endAngle=e.x1,delete e.x1,e.radius=e.y,delete e.y,e.innerRadius=e.y0,delete e.y0,e.outerRadius=e.y1,delete e.y1,e.lineStartAngle=function(){return(0,s.lineRadial)(n())},delete e.lineX0,e.lineEndAngle=function(){return(0,s.lineRadial)(a())},delete e.lineX1,e.lineInnerRadius=function(){return(0,s.lineRadial)(i())},delete e.lineY0,e.lineOuterRadius=function(){return(0,s.lineRadial)(d())},delete e.lineY1,e.curve=function(e){return arguments.length?t((0,r.default)(e)):t()._curve},e}},"../../node_modules/d3-shape/src/array.js":(e,t,n)=>{n.r(t),n.d(t,{slice:()=>r});var r=Array.prototype.slice},"../../node_modules/d3-shape/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/curve/basis.js":(e,t,n)=>{function r(e,t,n){e._context.bezierCurveTo((2*e._x0+e._x1)/3,(2*e._y0+e._y1)/3,(e._x0+2*e._x1)/3,(e._y0+2*e._y1)/3,(e._x0+4*e._x1+t)/6,(e._y0+4*e._y1+n)/6)}function o(e){this._context=e}function s(e){return new o(e)}n.r(t),n.d(t,{Basis:()=>o,default:()=>s,point:()=>r}),o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:r(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:r(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}}},"../../node_modules/d3-shape/src/curve/basisClosed.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-shape/src/noop.js"),o=n("../../node_modules/d3-shape/src/curve/basis.js");function s(e){this._context=e}function a(e){return new s(e)}s.prototype={areaStart:r.default,areaEnd:r.default,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._x2=e,this._y2=t;break;case 1:this._point=2,this._x3=e,this._y3=t;break;case 2:this._point=3,this._x4=e,this._y4=t,this._context.moveTo((this._x0+4*this._x1+e)/6,(this._y0+4*this._y1+t)/6);break;default:(0,o.point)(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}}},"../../node_modules/d3-shape/src/curve/basisOpen.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-shape/src/curve/basis.js");function o(e){this._context=e}function s(e){return new o(e)}o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+e)/6,o=(this._y0+4*this._y1+t)/6;this._line?this._context.lineTo(n,o):this._context.moveTo(n,o);break;case 3:this._point=4;default:(0,r.point)(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}}},"../../node_modules/d3-shape/src/curve/bundle.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-shape/src/curve/basis.js");function o(e,t){this._basis=new r.Basis(e),this._beta=t}o.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var e=this._x,t=this._y,n=e.length-1;if(n>0)for(var r,o=e[0],s=t[0],a=e[n]-o,i=t[n]-s,d=-1;++d<=n;)r=d/n,this._basis.point(this._beta*e[d]+(1-this._beta)*(o+r*a),this._beta*t[d]+(1-this._beta)*(s+r*i));this._x=this._y=null,this._basis.lineEnd()},point:function(e,t){this._x.push(+e),this._y.push(+t)}};const s=function e(t){function n(e){return 1===t?new r.Basis(e):new o(e,t)}return n.beta=function(t){return e(+t)},n}(.85)},"../../node_modules/d3-shape/src/curve/cardinal.js":(e,t,n)=>{function r(e,t,n){e._context.bezierCurveTo(e._x1+e._k*(e._x2-e._x0),e._y1+e._k*(e._y2-e._y0),e._x2+e._k*(e._x1-t),e._y2+e._k*(e._y1-n),e._x2,e._y2)}function o(e,t){this._context=e,this._k=(1-t)/6}n.r(t),n.d(t,{Cardinal:()=>o,default:()=>s,point:()=>r}),o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:r(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2,this._x1=e,this._y1=t;break;case 2:this._point=3;default:r(this,e,t)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};const s=function e(t){function n(e){return new o(e,t)}return n.tension=function(t){return e(+t)},n}(0)},"../../node_modules/d3-shape/src/curve/cardinalClosed.js":(e,t,n)=>{n.r(t),n.d(t,{CardinalClosed:()=>s,default:()=>a});var r=n("../../node_modules/d3-shape/src/noop.js"),o=n("../../node_modules/d3-shape/src/curve/cardinal.js");function s(e,t){this._context=e,this._k=(1-t)/6}s.prototype={areaStart:r.default,areaEnd:r.default,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._x3=e,this._y3=t;break;case 1:this._point=2,this._context.moveTo(this._x4=e,this._y4=t);break;case 2:this._point=3,this._x5=e,this._y5=t;break;default:(0,o.point)(this,e,t)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};const a=function e(t){function n(e){return new s(e,t)}return n.tension=function(t){return e(+t)},n}(0)},"../../node_modules/d3-shape/src/curve/cardinalOpen.js":(e,t,n)=>{n.r(t),n.d(t,{CardinalOpen:()=>o,default:()=>s});var r=n("../../node_modules/d3-shape/src/curve/cardinal.js");function o(e,t){this._context=e,this._k=(1-t)/6}o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:(0,r.point)(this,e,t)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};const s=function e(t){function n(e){return new o(e,t)}return n.tension=function(t){return e(+t)},n}(0)},"../../node_modules/d3-shape/src/curve/catmullRom.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i,point:()=>s});var r=n("../../node_modules/d3-shape/src/math.js"),o=n("../../node_modules/d3-shape/src/curve/cardinal.js");function s(e,t,n){var o=e._x1,s=e._y1,a=e._x2,i=e._y2;if(e._l01_a>r.epsilon){var d=2*e._l01_2a+3*e._l01_a*e._l12_a+e._l12_2a,u=3*e._l01_a*(e._l01_a+e._l12_a);o=(o*d-e._x0*e._l12_2a+e._x2*e._l01_2a)/u,s=(s*d-e._y0*e._l12_2a+e._y2*e._l01_2a)/u}if(e._l23_a>r.epsilon){var c=2*e._l23_2a+3*e._l23_a*e._l12_a+e._l12_2a,l=3*e._l23_a*(e._l23_a+e._l12_a);a=(a*c+e._x1*e._l23_2a-t*e._l12_2a)/l,i=(i*c+e._y1*e._l23_2a-n*e._l12_2a)/l}e._context.bezierCurveTo(o,s,a,i,e._x2,e._y2)}function a(e,t){this._context=e,this._alpha=t}a.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){if(e=+e,t=+t,this._point){var n=this._x2-e,r=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3;default:s(this,e,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};const i=function e(t){function n(e){return t?new a(e,t):new o.Cardinal(e,0)}return n.alpha=function(t){return e(+t)},n}(.5)},"../../node_modules/d3-shape/src/curve/catmullRomClosed.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-shape/src/curve/cardinalClosed.js"),o=n("../../node_modules/d3-shape/src/noop.js"),s=n("../../node_modules/d3-shape/src/curve/catmullRom.js");function a(e,t){this._context=e,this._alpha=t}a.prototype={areaStart:o.default,areaEnd:o.default,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(e,t){if(e=+e,t=+t,this._point){var n=this._x2-e,r=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=e,this._y3=t;break;case 1:this._point=2,this._context.moveTo(this._x4=e,this._y4=t);break;case 2:this._point=3,this._x5=e,this._y5=t;break;default:(0,s.point)(this,e,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};const i=function e(t){function n(e){return t?new a(e,t):new r.CardinalClosed(e,0)}return n.alpha=function(t){return e(+t)},n}(.5)},"../../node_modules/d3-shape/src/curve/catmullRomOpen.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-shape/src/curve/cardinalOpen.js"),o=n("../../node_modules/d3-shape/src/curve/catmullRom.js");function s(e,t){this._context=e,this._alpha=t}s.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){if(e=+e,t=+t,this._point){var n=this._x2-e,r=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:(0,o.point)(this,e,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};const a=function e(t){function n(e){return t?new s(e,t):new r.CardinalOpen(e,0)}return n.alpha=function(t){return e(+t)},n}(.5)},"../../node_modules/d3-shape/src/curve/linear.js":(e,t,n)=>{function r(e){this._context=e}function o(e){return new r(e)}n.r(t),n.d(t,{default:()=>o}),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t)}}}},"../../node_modules/d3-shape/src/curve/linearClosed.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-shape/src/noop.js");function o(e){this._context=e}function s(e){return new o(e)}o.prototype={areaStart:r.default,areaEnd:r.default,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(e,t){e=+e,t=+t,this._point?this._context.lineTo(e,t):(this._point=1,this._context.moveTo(e,t))}}},"../../node_modules/d3-shape/src/curve/monotone.js":(e,t,n)=>{function r(e){return e<0?-1:1}function o(e,t,n){var o=e._x1-e._x0,s=t-e._x1,a=(e._y1-e._y0)/(o||s<0&&-0),i=(n-e._y1)/(s||o<0&&-0),d=(a*s+i*o)/(o+s);return(r(a)+r(i))*Math.min(Math.abs(a),Math.abs(i),.5*Math.abs(d))||0}function s(e,t){var n=e._x1-e._x0;return n?(3*(e._y1-e._y0)/n-t)/2:t}function a(e,t,n){var r=e._x0,o=e._y0,s=e._x1,a=e._y1,i=(s-r)/3;e._context.bezierCurveTo(r+i,o+i*t,s-i,a-i*n,s,a)}function i(e){this._context=e}function d(e){this._context=new u(e)}function u(e){this._context=e}function c(e){return new i(e)}function l(e){return new d(e)}n.r(t),n.d(t,{monotoneX:()=>c,monotoneY:()=>l}),i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:a(this,this._t0,s(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){var n=NaN;if(t=+t,(e=+e)!==this._x1||t!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,a(this,s(this,n=o(this,e,t)),n);break;default:a(this,this._t0,n=o(this,e,t))}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t,this._t0=n}}},(d.prototype=Object.create(i.prototype)).point=function(e,t){i.prototype.point.call(this,t,e)},u.prototype={moveTo:function(e,t){this._context.moveTo(t,e)},closePath:function(){this._context.closePath()},lineTo:function(e,t){this._context.lineTo(t,e)},bezierCurveTo:function(e,t,n,r,o,s){this._context.bezierCurveTo(t,e,r,n,s,o)}}},"../../node_modules/d3-shape/src/curve/natural.js":(e,t,n)=>{function r(e){this._context=e}function o(e){var t,n,r=e.length-1,o=new Array(r),s=new Array(r),a=new Array(r);for(o[0]=0,s[0]=2,a[0]=e[0]+2*e[1],t=1;t<r-1;++t)o[t]=1,s[t]=4,a[t]=4*e[t]+2*e[t+1];for(o[r-1]=2,s[r-1]=7,a[r-1]=8*e[r-1]+e[r],t=1;t<r;++t)n=o[t]/s[t-1],s[t]-=n,a[t]-=n*a[t-1];for(o[r-1]=a[r-1]/s[r-1],t=r-2;t>=0;--t)o[t]=(a[t]-o[t+1])/s[t];for(s[r-1]=(e[r]+o[r-1])/2,t=0;t<r-1;++t)s[t]=2*e[t+1]-o[t+1];return[o,s]}function s(e){return new r(e)}n.r(t),n.d(t,{default:()=>s}),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var e=this._x,t=this._y,n=e.length;if(n)if(this._line?this._context.lineTo(e[0],t[0]):this._context.moveTo(e[0],t[0]),2===n)this._context.lineTo(e[1],t[1]);else for(var r=o(e),s=o(t),a=0,i=1;i<n;++a,++i)this._context.bezierCurveTo(r[0][a],s[0][a],r[1][a],s[1][a],e[i],t[i]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(e,t){this._x.push(+e),this._y.push(+t)}}},"../../node_modules/d3-shape/src/curve/radial.js":(e,t,n)=>{n.r(t),n.d(t,{curveRadialLinear:()=>r,default:()=>s});var r=s(n("../../node_modules/d3-shape/src/curve/linear.js").default);function o(e){this._curve=e}function s(e){function t(t){return new o(e(t))}return t._curve=e,t}o.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(e,t){this._curve.point(t*Math.sin(e),t*-Math.cos(e))}}},"../../node_modules/d3-shape/src/curve/step.js":(e,t,n)=>{function r(e,t){this._context=e,this._t=t}function o(e){return new r(e,.5)}function s(e){return new r(e,0)}function a(e){return new r(e,1)}n.r(t),n.d(t,{default:()=>o,stepAfter:()=>a,stepBefore:()=>s}),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,t),this._context.lineTo(e,t);else{var n=this._x*(1-this._t)+e*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,t)}}this._x=e,this._y=t}}},"../../node_modules/d3-shape/src/descending.js":(e,t,n)=>{function r(e,t){return t<e?-1:t>e?1:t>=e?0:NaN}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/identity.js":(e,t,n)=>{function r(e){return e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{arc:()=>r.default,area:()=>o.default,areaRadial:()=>i.default,curveBasis:()=>b.default,curveBasisClosed:()=>y.default,curveBasisOpen:()=>j.default,curveBundle:()=>x.default,curveCardinal:()=>S.default,curveCardinalClosed:()=>w.default,curveCardinalOpen:()=>M.default,curveCatmullRom:()=>C.default,curveCatmullRomClosed:()=>k.default,curveCatmullRomOpen:()=>E.default,curveLinear:()=>T.default,curveLinearClosed:()=>A.default,curveMonotoneX:()=>R.monotoneX,curveMonotoneY:()=>R.monotoneY,curveNatural:()=>q.default,curveStep:()=>N.default,curveStepAfter:()=>N.stepAfter,curveStepBefore:()=>N.stepBefore,line:()=>s.default,lineRadial:()=>d.default,linkHorizontal:()=>c.linkHorizontal,linkRadial:()=>c.linkRadial,linkVertical:()=>c.linkVertical,pie:()=>a.default,pointRadial:()=>u.default,radialArea:()=>i.default,radialLine:()=>d.default,stack:()=>P.default,stackOffsetDiverging:()=>O.default,stackOffsetExpand:()=>B.default,stackOffsetNone:()=>z.default,stackOffsetSilhouette:()=>D.default,stackOffsetWiggle:()=>I.default,stackOrderAppearance:()=>L.default,stackOrderAscending:()=>F.default,stackOrderDescending:()=>Y.default,stackOrderInsideOut:()=>G.default,stackOrderNone:()=>U.default,stackOrderReverse:()=>H.default,symbol:()=>l.default,symbolCircle:()=>f.default,symbolCross:()=>h.default,symbolDiamond:()=>m.default,symbolSquare:()=>p.default,symbolStar:()=>_.default,symbolTriangle:()=>g.default,symbolWye:()=>v.default,symbols:()=>l.symbols});var r=n("../../node_modules/d3-shape/src/arc.js"),o=n("../../node_modules/d3-shape/src/area.js"),s=n("../../node_modules/d3-shape/src/line.js"),a=n("../../node_modules/d3-shape/src/pie.js"),i=n("../../node_modules/d3-shape/src/areaRadial.js"),d=n("../../node_modules/d3-shape/src/lineRadial.js"),u=n("../../node_modules/d3-shape/src/pointRadial.js"),c=n("../../node_modules/d3-shape/src/link/index.js"),l=n("../../node_modules/d3-shape/src/symbol.js"),f=n("../../node_modules/d3-shape/src/symbol/circle.js"),h=n("../../node_modules/d3-shape/src/symbol/cross.js"),m=n("../../node_modules/d3-shape/src/symbol/diamond.js"),p=n("../../node_modules/d3-shape/src/symbol/square.js"),_=n("../../node_modules/d3-shape/src/symbol/star.js"),g=n("../../node_modules/d3-shape/src/symbol/triangle.js"),v=n("../../node_modules/d3-shape/src/symbol/wye.js"),y=n("../../node_modules/d3-shape/src/curve/basisClosed.js"),j=n("../../node_modules/d3-shape/src/curve/basisOpen.js"),b=n("../../node_modules/d3-shape/src/curve/basis.js"),x=n("../../node_modules/d3-shape/src/curve/bundle.js"),w=n("../../node_modules/d3-shape/src/curve/cardinalClosed.js"),M=n("../../node_modules/d3-shape/src/curve/cardinalOpen.js"),S=n("../../node_modules/d3-shape/src/curve/cardinal.js"),k=n("../../node_modules/d3-shape/src/curve/catmullRomClosed.js"),E=n("../../node_modules/d3-shape/src/curve/catmullRomOpen.js"),C=n("../../node_modules/d3-shape/src/curve/catmullRom.js"),A=n("../../node_modules/d3-shape/src/curve/linearClosed.js"),T=n("../../node_modules/d3-shape/src/curve/linear.js"),R=n("../../node_modules/d3-shape/src/curve/monotone.js"),q=n("../../node_modules/d3-shape/src/curve/natural.js"),N=n("../../node_modules/d3-shape/src/curve/step.js"),P=n("../../node_modules/d3-shape/src/stack.js"),B=n("../../node_modules/d3-shape/src/offset/expand.js"),O=n("../../node_modules/d3-shape/src/offset/diverging.js"),z=n("../../node_modules/d3-shape/src/offset/none.js"),D=n("../../node_modules/d3-shape/src/offset/silhouette.js"),I=n("../../node_modules/d3-shape/src/offset/wiggle.js"),L=n("../../node_modules/d3-shape/src/order/appearance.js"),F=n("../../node_modules/d3-shape/src/order/ascending.js"),Y=n("../../node_modules/d3-shape/src/order/descending.js"),G=n("../../node_modules/d3-shape/src/order/insideOut.js"),U=n("../../node_modules/d3-shape/src/order/none.js"),H=n("../../node_modules/d3-shape/src/order/reverse.js")},"../../node_modules/d3-shape/src/line.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-path/src/path.js"),o=n("../../node_modules/d3-shape/src/constant.js"),s=n("../../node_modules/d3-shape/src/curve/linear.js"),a=n("../../node_modules/d3-shape/src/point.js");function i(){var e=a.x,t=a.y,n=(0,o.default)(!0),i=null,d=s.default,u=null;function c(o){var s,a,c,l=o.length,f=!1;for(null==i&&(u=d(c=(0,r.default)())),s=0;s<=l;++s)!(s<l&&n(a=o[s],s,o))===f&&((f=!f)?u.lineStart():u.lineEnd()),f&&u.point(+e(a,s,o),+t(a,s,o));if(c)return u=null,c+""||null}return c.x=function(t){return arguments.length?(e="function"==typeof t?t:(0,o.default)(+t),c):e},c.y=function(e){return arguments.length?(t="function"==typeof e?e:(0,o.default)(+e),c):t},c.defined=function(e){return arguments.length?(n="function"==typeof e?e:(0,o.default)(!!e),c):n},c.curve=function(e){return arguments.length?(d=e,null!=i&&(u=d(i)),c):d},c.context=function(e){return arguments.length?(null==e?i=u=null:u=d(i=e),c):i},c}},"../../node_modules/d3-shape/src/lineRadial.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,lineRadial:()=>s});var r=n("../../node_modules/d3-shape/src/curve/radial.js"),o=n("../../node_modules/d3-shape/src/line.js");function s(e){var t=e.curve;return e.angle=e.x,delete e.x,e.radius=e.y,delete e.y,e.curve=function(e){return arguments.length?t((0,r.default)(e)):t()._curve},e}function a(){return s((0,o.default)().curve(r.curveRadialLinear))}},"../../node_modules/d3-shape/src/link/index.js":(e,t,n)=>{n.r(t),n.d(t,{linkHorizontal:()=>m,linkRadial:()=>_,linkVertical:()=>p});var r=n("../../node_modules/d3-path/src/path.js"),o=n("../../node_modules/d3-shape/src/array.js"),s=n("../../node_modules/d3-shape/src/constant.js"),a=n("../../node_modules/d3-shape/src/point.js"),i=n("../../node_modules/d3-shape/src/pointRadial.js");function d(e){return e.source}function u(e){return e.target}function c(e){var t=d,n=u,i=a.x,c=a.y,l=null;function f(){var s,a=o.slice.call(arguments),d=t.apply(this,a),u=n.apply(this,a);if(l||(l=s=(0,r.default)()),e(l,+i.apply(this,(a[0]=d,a)),+c.apply(this,a),+i.apply(this,(a[0]=u,a)),+c.apply(this,a)),s)return l=null,s+""||null}return f.source=function(e){return arguments.length?(t=e,f):t},f.target=function(e){return arguments.length?(n=e,f):n},f.x=function(e){return arguments.length?(i="function"==typeof e?e:(0,s.default)(+e),f):i},f.y=function(e){return arguments.length?(c="function"==typeof e?e:(0,s.default)(+e),f):c},f.context=function(e){return arguments.length?(l=null==e?null:e,f):l},f}function l(e,t,n,r,o){e.moveTo(t,n),e.bezierCurveTo(t=(t+r)/2,n,t,o,r,o)}function f(e,t,n,r,o){e.moveTo(t,n),e.bezierCurveTo(t,n=(n+o)/2,r,n,r,o)}function h(e,t,n,r,o){var s=(0,i.default)(t,n),a=(0,i.default)(t,n=(n+o)/2),d=(0,i.default)(r,n),u=(0,i.default)(r,o);e.moveTo(s[0],s[1]),e.bezierCurveTo(a[0],a[1],d[0],d[1],u[0],u[1])}function m(){return c(l)}function p(){return c(f)}function _(){var e=c(h);return e.angle=e.x,delete e.x,e.radius=e.y,delete e.y,e}},"../../node_modules/d3-shape/src/math.js":(e,t,n)=>{n.r(t),n.d(t,{abs:()=>r,acos:()=>m,asin:()=>p,atan2:()=>o,cos:()=>s,epsilon:()=>c,halfPi:()=>f,max:()=>a,min:()=>i,pi:()=>l,sin:()=>d,sqrt:()=>u,tau:()=>h});var r=Math.abs,o=Math.atan2,s=Math.cos,a=Math.max,i=Math.min,d=Math.sin,u=Math.sqrt,c=1e-12,l=Math.PI,f=l/2,h=2*l;function m(e){return e>1?0:e<-1?l:Math.acos(e)}function p(e){return e>=1?f:e<=-1?-f:Math.asin(e)}},"../../node_modules/d3-shape/src/noop.js":(e,t,n)=>{function r(){}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/offset/diverging.js":(e,t,n)=>{function r(e,t){if((i=e.length)>0)for(var n,r,o,s,a,i,d=0,u=e[t[0]].length;d<u;++d)for(s=a=0,n=0;n<i;++n)(o=(r=e[t[n]][d])[1]-r[0])>0?(r[0]=s,r[1]=s+=o):o<0?(r[1]=a,r[0]=a+=o):(r[0]=0,r[1]=o)}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/offset/expand.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/offset/none.js");function o(e,t){if((o=e.length)>0){for(var n,o,s,a=0,i=e[0].length;a<i;++a){for(s=n=0;n<o;++n)s+=e[n][a][1]||0;if(s)for(n=0;n<o;++n)e[n][a][1]/=s}(0,r.default)(e,t)}}},"../../node_modules/d3-shape/src/offset/none.js":(e,t,n)=>{function r(e,t){if((o=e.length)>1)for(var n,r,o,s=1,a=e[t[0]],i=a.length;s<o;++s)for(r=a,a=e[t[s]],n=0;n<i;++n)a[n][1]+=a[n][0]=isNaN(r[n][1])?r[n][0]:r[n][1]}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/offset/silhouette.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/offset/none.js");function o(e,t){if((n=e.length)>0){for(var n,o=0,s=e[t[0]],a=s.length;o<a;++o){for(var i=0,d=0;i<n;++i)d+=e[i][o][1]||0;s[o][1]+=s[o][0]=-d/2}(0,r.default)(e,t)}}},"../../node_modules/d3-shape/src/offset/wiggle.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/offset/none.js");function o(e,t){if((s=e.length)>0&&(o=(n=e[t[0]]).length)>0){for(var n,o,s,a=0,i=1;i<o;++i){for(var d=0,u=0,c=0;d<s;++d){for(var l=e[t[d]],f=l[i][1]||0,h=(f-(l[i-1][1]||0))/2,m=0;m<d;++m){var p=e[t[m]];h+=(p[i][1]||0)-(p[i-1][1]||0)}u+=f,c+=h*f}n[i-1][1]+=n[i-1][0]=a,u&&(a-=c/u)}n[i-1][1]+=n[i-1][0]=a,(0,r.default)(e,t)}}},"../../node_modules/d3-shape/src/order/appearance.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/order/none.js");function o(e){var t=e.map(s);return(0,r.default)(e).sort((function(e,n){return t[e]-t[n]}))}function s(e){for(var t,n=-1,r=0,o=e.length,s=-1/0;++n<o;)(t=+e[n][1])>s&&(s=t,r=n);return r}},"../../node_modules/d3-shape/src/order/ascending.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o,sum:()=>s});var r=n("../../node_modules/d3-shape/src/order/none.js");function o(e){var t=e.map(s);return(0,r.default)(e).sort((function(e,n){return t[e]-t[n]}))}function s(e){for(var t,n=0,r=-1,o=e.length;++r<o;)(t=+e[r][1])&&(n+=t);return n}},"../../node_modules/d3-shape/src/order/descending.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/order/ascending.js");function o(e){return(0,r.default)(e).reverse()}},"../../node_modules/d3-shape/src/order/insideOut.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-shape/src/order/appearance.js"),o=n("../../node_modules/d3-shape/src/order/ascending.js");function s(e){var t,n,s=e.length,a=e.map(o.sum),i=(0,r.default)(e),d=0,u=0,c=[],l=[];for(t=0;t<s;++t)n=i[t],d<u?(d+=a[n],c.push(n)):(u+=a[n],l.push(n));return l.reverse().concat(c)}},"../../node_modules/d3-shape/src/order/none.js":(e,t,n)=>{function r(e){for(var t=e.length,n=new Array(t);--t>=0;)n[t]=t;return n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/order/reverse.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/order/none.js");function o(e){return(0,r.default)(e).reverse()}},"../../node_modules/d3-shape/src/pie.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-shape/src/constant.js"),o=n("../../node_modules/d3-shape/src/descending.js"),s=n("../../node_modules/d3-shape/src/identity.js"),a=n("../../node_modules/d3-shape/src/math.js");function i(){var e=s.default,t=o.default,n=null,i=(0,r.default)(0),d=(0,r.default)(a.tau),u=(0,r.default)(0);function c(r){var o,s,c,l,f,h=r.length,m=0,p=new Array(h),_=new Array(h),g=+i.apply(this,arguments),v=Math.min(a.tau,Math.max(-a.tau,d.apply(this,arguments)-g)),y=Math.min(Math.abs(v)/h,u.apply(this,arguments)),j=y*(v<0?-1:1);for(o=0;o<h;++o)(f=_[p[o]=o]=+e(r[o],o,r))>0&&(m+=f);for(null!=t?p.sort((function(e,n){return t(_[e],_[n])})):null!=n&&p.sort((function(e,t){return n(r[e],r[t])})),o=0,c=m?(v-h*j)/m:0;o<h;++o,g=l)s=p[o],l=g+((f=_[s])>0?f*c:0)+j,_[s]={data:r[s],index:o,value:f,startAngle:g,endAngle:l,padAngle:y};return _}return c.value=function(t){return arguments.length?(e="function"==typeof t?t:(0,r.default)(+t),c):e},c.sortValues=function(e){return arguments.length?(t=e,n=null,c):t},c.sort=function(e){return arguments.length?(n=e,t=null,c):n},c.startAngle=function(e){return arguments.length?(i="function"==typeof e?e:(0,r.default)(+e),c):i},c.endAngle=function(e){return arguments.length?(d="function"==typeof e?e:(0,r.default)(+e),c):d},c.padAngle=function(e){return arguments.length?(u="function"==typeof e?e:(0,r.default)(+e),c):u},c}},"../../node_modules/d3-shape/src/point.js":(e,t,n)=>{function r(e){return e[0]}function o(e){return e[1]}n.r(t),n.d(t,{x:()=>r,y:()=>o})},"../../node_modules/d3-shape/src/pointRadial.js":(e,t,n)=>{function r(e,t){return[(t=+t)*Math.cos(e-=Math.PI/2),t*Math.sin(e)]}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-shape/src/stack.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var r=n("../../node_modules/d3-shape/src/array.js"),o=n("../../node_modules/d3-shape/src/constant.js"),s=n("../../node_modules/d3-shape/src/offset/none.js"),a=n("../../node_modules/d3-shape/src/order/none.js");function i(e,t){return e[t]}function d(){var e=(0,o.default)([]),t=a.default,n=s.default,d=i;function u(r){var o,s,a=e.apply(this,arguments),i=r.length,u=a.length,c=new Array(u);for(o=0;o<u;++o){for(var l,f=a[o],h=c[o]=new Array(i),m=0;m<i;++m)h[m]=l=[0,+d(r[m],f,m,r)],l.data=r[m];h.key=f}for(o=0,s=t(c);o<u;++o)c[s[o]].index=o;return n(c,s),c}return u.keys=function(t){return arguments.length?(e="function"==typeof t?t:(0,o.default)(r.slice.call(t)),u):e},u.value=function(e){return arguments.length?(d="function"==typeof e?e:(0,o.default)(+e),u):d},u.order=function(e){return arguments.length?(t=null==e?a.default:"function"==typeof e?e:(0,o.default)(r.slice.call(e)),u):t},u.offset=function(e){return arguments.length?(n=null==e?s.default:e,u):n},u}},"../../node_modules/d3-shape/src/symbol.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>h,symbols:()=>f});var r=n("../../node_modules/d3-path/src/path.js"),o=n("../../node_modules/d3-shape/src/symbol/circle.js"),s=n("../../node_modules/d3-shape/src/symbol/cross.js"),a=n("../../node_modules/d3-shape/src/symbol/diamond.js"),i=n("../../node_modules/d3-shape/src/symbol/star.js"),d=n("../../node_modules/d3-shape/src/symbol/square.js"),u=n("../../node_modules/d3-shape/src/symbol/triangle.js"),c=n("../../node_modules/d3-shape/src/symbol/wye.js"),l=n("../../node_modules/d3-shape/src/constant.js"),f=[o.default,s.default,a.default,d.default,i.default,u.default,c.default];function h(){var e=(0,l.default)(o.default),t=(0,l.default)(64),n=null;function s(){var o;if(n||(n=o=(0,r.default)()),e.apply(this,arguments).draw(n,+t.apply(this,arguments)),o)return n=null,o+""||null}return s.type=function(t){return arguments.length?(e="function"==typeof t?t:(0,l.default)(t),s):e},s.size=function(e){return arguments.length?(t="function"==typeof e?e:(0,l.default)(+e),s):t},s.context=function(e){return arguments.length?(n=null==e?null:e,s):n},s}},"../../node_modules/d3-shape/src/symbol/circle.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-shape/src/math.js");const o={draw:function(e,t){var n=Math.sqrt(t/r.pi);e.moveTo(n,0),e.arc(0,0,n,0,r.tau)}}},"../../node_modules/d3-shape/src/symbol/cross.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r={draw:function(e,t){var n=Math.sqrt(t/5)/2;e.moveTo(-3*n,-n),e.lineTo(-n,-n),e.lineTo(-n,-3*n),e.lineTo(n,-3*n),e.lineTo(n,-n),e.lineTo(3*n,-n),e.lineTo(3*n,n),e.lineTo(n,n),e.lineTo(n,3*n),e.lineTo(-n,3*n),e.lineTo(-n,n),e.lineTo(-3*n,n),e.closePath()}}},"../../node_modules/d3-shape/src/symbol/diamond.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=Math.sqrt(1/3),o=2*r;const s={draw:function(e,t){var n=Math.sqrt(t/o),s=n*r;e.moveTo(0,-n),e.lineTo(s,0),e.lineTo(0,n),e.lineTo(-s,0),e.closePath()}}},"../../node_modules/d3-shape/src/symbol/square.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r={draw:function(e,t){var n=Math.sqrt(t),r=-n/2;e.rect(r,r,n,n)}}},"../../node_modules/d3-shape/src/symbol/star.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-shape/src/math.js"),o=Math.sin(r.pi/10)/Math.sin(7*r.pi/10),s=Math.sin(r.tau/10)*o,a=-Math.cos(r.tau/10)*o;const i={draw:function(e,t){var n=Math.sqrt(.8908130915292852*t),o=s*n,i=a*n;e.moveTo(0,-n),e.lineTo(o,i);for(var d=1;d<5;++d){var u=r.tau*d/5,c=Math.cos(u),l=Math.sin(u);e.lineTo(l*n,-c*n),e.lineTo(c*o-l*i,l*o+c*i)}e.closePath()}}},"../../node_modules/d3-shape/src/symbol/triangle.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=Math.sqrt(3);const o={draw:function(e,t){var n=-Math.sqrt(t/(3*r));e.moveTo(0,2*n),e.lineTo(-r*n,-n),e.lineTo(r*n,-n),e.closePath()}}},"../../node_modules/d3-shape/src/symbol/wye.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=-.5,o=Math.sqrt(3)/2,s=1/Math.sqrt(12),a=3*(s/2+1);const i={draw:function(e,t){var n=Math.sqrt(t/a),i=n/2,d=n*s,u=i,c=n*s+n,l=-u,f=c;e.moveTo(i,d),e.lineTo(u,c),e.lineTo(l,f),e.lineTo(r*i-o*d,o*i+r*d),e.lineTo(r*u-o*c,o*u+r*c),e.lineTo(r*l-o*f,o*l+r*f),e.lineTo(r*i+o*d,r*d-o*i),e.lineTo(r*u+o*c,r*c-o*u),e.lineTo(r*l+o*f,r*f-o*l),e.closePath()}}},"../../node_modules/d3-time-format/src/defaultLocale.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u,timeFormat:()=>o,timeParse:()=>s,utcFormat:()=>a,utcParse:()=>i});var r,o,s,a,i,d=n("../../node_modules/d3-time-format/src/locale.js");function u(e){return r=(0,d.default)(e),o=r.format,s=r.parse,a=r.utcFormat,i=r.utcParse,r}u({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]})},"../../node_modules/d3-time-format/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{isoFormat:()=>s.default,isoParse:()=>a.default,timeFormat:()=>r.timeFormat,timeFormatDefaultLocale:()=>r.default,timeFormatLocale:()=>o.default,timeParse:()=>r.timeParse,utcFormat:()=>r.utcFormat,utcParse:()=>r.utcParse});var r=n("../../node_modules/d3-time-format/src/defaultLocale.js"),o=n("../../node_modules/d3-time-format/src/locale.js"),s=n("../../node_modules/d3-time-format/src/isoFormat.js"),a=n("../../node_modules/d3-time-format/src/isoParse.js")},"../../node_modules/d3-time-format/src/isoFormat.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,isoSpecifier:()=>o});var r=n("../../node_modules/d3-time-format/src/defaultLocale.js"),o="%Y-%m-%dT%H:%M:%S.%LZ";const s=Date.prototype.toISOString?function(e){return e.toISOString()}:(0,r.utcFormat)(o)},"../../node_modules/d3-time-format/src/isoParse.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-time-format/src/isoFormat.js"),o=n("../../node_modules/d3-time-format/src/defaultLocale.js");const s=+new Date("2000-01-01T00:00:00.000Z")?function(e){var t=new Date(e);return isNaN(t)?null:t}:(0,o.utcParse)(r.isoSpecifier)},"../../node_modules/d3-time-format/src/locale.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n("../../node_modules/d3-time/src/utcWeek.js"),o=n("../../node_modules/d3-time/src/utcDay.js"),s=n("../../node_modules/d3-time/src/week.js"),a=n("../../node_modules/d3-time/src/day.js"),i=n("../../node_modules/d3-time/src/year.js"),d=n("../../node_modules/d3-time/src/utcYear.js");function u(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function c(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function l(e,t,n){return{y:e,m:t,d:n,H:0,M:0,S:0,L:0}}function f(e){var t=e.dateTime,n=e.date,i=e.time,d=e.periods,f=e.days,m=e.shortDays,p=e.months,_=e.shortMonths,g=y(d),v=j(d),K=y(f),ve=j(f),Te=y(m),Re=j(m),qe=y(p),Ne=j(p),Pe=y(_),Be=j(_),Oe={a:function(e){return m[e.getDay()]},A:function(e){return f[e.getDay()]},b:function(e){return _[e.getMonth()]},B:function(e){return p[e.getMonth()]},c:null,d:F,e:F,f:V,g:re,G:se,H:Y,I:G,j:U,L:H,m:W,M:X,p:function(e){return d[+(e.getHours()>=12)]},q:function(e){return 1+~~(e.getMonth()/3)},Q:Ce,s:Ae,S:Z,u:Q,U:$,V:J,w:ee,W:te,x:null,X:null,y:ne,Y:oe,Z:ae,"%":Ee},ze={a:function(e){return m[e.getUTCDay()]},A:function(e){return f[e.getUTCDay()]},b:function(e){return _[e.getUTCMonth()]},B:function(e){return p[e.getUTCMonth()]},c:null,d:ie,e:ie,f:fe,g:we,G:Se,H:de,I:ue,j:ce,L:le,m:he,M:me,p:function(e){return d[+(e.getUTCHours()>=12)]},q:function(e){return 1+~~(e.getUTCMonth()/3)},Q:Ce,s:Ae,S:pe,u:_e,U:ge,V:ye,w:je,W:be,x:null,X:null,y:xe,Y:Me,Z:ke,"%":Ee},De={a:function(e,t,n){var r=Te.exec(t.slice(n));return r?(e.w=Re[r[0].toLowerCase()],n+r[0].length):-1},A:function(e,t,n){var r=K.exec(t.slice(n));return r?(e.w=ve[r[0].toLowerCase()],n+r[0].length):-1},b:function(e,t,n){var r=Pe.exec(t.slice(n));return r?(e.m=Be[r[0].toLowerCase()],n+r[0].length):-1},B:function(e,t,n){var r=qe.exec(t.slice(n));return r?(e.m=Ne[r[0].toLowerCase()],n+r[0].length):-1},c:function(e,n,r){return Fe(e,t,n,r)},d:R,e:R,f:z,g:E,G:k,H:N,I:N,j:q,L:O,m:T,M:P,p:function(e,t,n){var r=g.exec(t.slice(n));return r?(e.p=v[r[0].toLowerCase()],n+r[0].length):-1},q:A,Q:I,s:L,S:B,u:x,U:w,V:M,w:b,W:S,x:function(e,t,r){return Fe(e,n,t,r)},X:function(e,t,n){return Fe(e,i,t,n)},y:E,Y:k,Z:C,"%":D};function Ie(e,t){return function(n){var r,o,s,a=[],i=-1,d=0,u=e.length;for(n instanceof Date||(n=new Date(+n));++i<u;)37===e.charCodeAt(i)&&(a.push(e.slice(d,i)),null!=(o=h[r=e.charAt(++i)])?r=e.charAt(++i):o="e"===r?" ":"0",(s=t[r])&&(r=s(n,o)),a.push(r),d=i+1);return a.push(e.slice(d,i)),a.join("")}}function Le(e,t){return function(n){var i,d,f=l(1900,void 0,1);if(Fe(f,e,n+="",0)!=n.length)return null;if("Q"in f)return new Date(f.Q);if("s"in f)return new Date(1e3*f.s+("L"in f?f.L:0));if(t&&!("Z"in f)&&(f.Z=0),"p"in f&&(f.H=f.H%12+12*f.p),void 0===f.m&&(f.m="q"in f?f.q:0),"V"in f){if(f.V<1||f.V>53)return null;"w"in f||(f.w=1),"Z"in f?(d=(i=c(l(f.y,0,1))).getUTCDay(),i=d>4||0===d?r.utcMonday.ceil(i):(0,r.utcMonday)(i),i=o.default.offset(i,7*(f.V-1)),f.y=i.getUTCFullYear(),f.m=i.getUTCMonth(),f.d=i.getUTCDate()+(f.w+6)%7):(d=(i=u(l(f.y,0,1))).getDay(),i=d>4||0===d?s.monday.ceil(i):(0,s.monday)(i),i=a.default.offset(i,7*(f.V-1)),f.y=i.getFullYear(),f.m=i.getMonth(),f.d=i.getDate()+(f.w+6)%7)}else("W"in f||"U"in f)&&("w"in f||(f.w="u"in f?f.u%7:"W"in f?1:0),d="Z"in f?c(l(f.y,0,1)).getUTCDay():u(l(f.y,0,1)).getDay(),f.m=0,f.d="W"in f?(f.w+6)%7+7*f.W-(d+5)%7:f.w+7*f.U-(d+6)%7);return"Z"in f?(f.H+=f.Z/100|0,f.M+=f.Z%100,c(f)):u(f)}}function Fe(e,t,n,r){for(var o,s,a=0,i=t.length,d=n.length;a<i;){if(r>=d)return-1;if(37===(o=t.charCodeAt(a++))){if(o=t.charAt(a++),!(s=De[o in h?t.charAt(a++):o])||(r=s(e,n,r))<0)return-1}else if(o!=n.charCodeAt(r++))return-1}return r}return Oe.x=Ie(n,Oe),Oe.X=Ie(i,Oe),Oe.c=Ie(t,Oe),ze.x=Ie(n,ze),ze.X=Ie(i,ze),ze.c=Ie(t,ze),{format:function(e){var t=Ie(e+="",Oe);return t.toString=function(){return e},t},parse:function(e){var t=Le(e+="",!1);return t.toString=function(){return e},t},utcFormat:function(e){var t=Ie(e+="",ze);return t.toString=function(){return e},t},utcParse:function(e){var t=Le(e+="",!0);return t.toString=function(){return e},t}}}var h={"-":"",_:" ",0:"0"},m=/^\s*\d+/,p=/^%/,_=/[\\^$*+?|[\]().{}]/g;function g(e,t,n){var r=e<0?"-":"",o=(r?-e:e)+"",s=o.length;return r+(s<n?new Array(n-s+1).join(t)+o:o)}function v(e){return e.replace(_,"\\$&")}function y(e){return new RegExp("^(?:"+e.map(v).join("|")+")","i")}function j(e){for(var t={},n=-1,r=e.length;++n<r;)t[e[n].toLowerCase()]=n;return t}function b(e,t,n){var r=m.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function x(e,t,n){var r=m.exec(t.slice(n,n+1));return r?(e.u=+r[0],n+r[0].length):-1}function w(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.U=+r[0],n+r[0].length):-1}function M(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.V=+r[0],n+r[0].length):-1}function S(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.W=+r[0],n+r[0].length):-1}function k(e,t,n){var r=m.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function E(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function C(e,t,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n,n+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function A(e,t,n){var r=m.exec(t.slice(n,n+1));return r?(e.q=3*r[0]-3,n+r[0].length):-1}function T(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function R(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function q(e,t,n){var r=m.exec(t.slice(n,n+3));return r?(e.m=0,e.d=+r[0],n+r[0].length):-1}function N(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function P(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function B(e,t,n){var r=m.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function O(e,t,n){var r=m.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function z(e,t,n){var r=m.exec(t.slice(n,n+6));return r?(e.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function D(e,t,n){var r=p.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function I(e,t,n){var r=m.exec(t.slice(n));return r?(e.Q=+r[0],n+r[0].length):-1}function L(e,t,n){var r=m.exec(t.slice(n));return r?(e.s=+r[0],n+r[0].length):-1}function F(e,t){return g(e.getDate(),t,2)}function Y(e,t){return g(e.getHours(),t,2)}function G(e,t){return g(e.getHours()%12||12,t,2)}function U(e,t){return g(1+a.default.count((0,i.default)(e),e),t,3)}function H(e,t){return g(e.getMilliseconds(),t,3)}function V(e,t){return H(e,t)+"000"}function W(e,t){return g(e.getMonth()+1,t,2)}function X(e,t){return g(e.getMinutes(),t,2)}function Z(e,t){return g(e.getSeconds(),t,2)}function Q(e){var t=e.getDay();return 0===t?7:t}function $(e,t){return g(s.sunday.count((0,i.default)(e)-1,e),t,2)}function K(e){var t=e.getDay();return t>=4||0===t?(0,s.thursday)(e):s.thursday.ceil(e)}function J(e,t){return e=K(e),g(s.thursday.count((0,i.default)(e),e)+(4===(0,i.default)(e).getDay()),t,2)}function ee(e){return e.getDay()}function te(e,t){return g(s.monday.count((0,i.default)(e)-1,e),t,2)}function ne(e,t){return g(e.getFullYear()%100,t,2)}function re(e,t){return g((e=K(e)).getFullYear()%100,t,2)}function oe(e,t){return g(e.getFullYear()%1e4,t,4)}function se(e,t){var n=e.getDay();return g((e=n>=4||0===n?(0,s.thursday)(e):s.thursday.ceil(e)).getFullYear()%1e4,t,4)}function ae(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+g(t/60|0,"0",2)+g(t%60,"0",2)}function ie(e,t){return g(e.getUTCDate(),t,2)}function de(e,t){return g(e.getUTCHours(),t,2)}function ue(e,t){return g(e.getUTCHours()%12||12,t,2)}function ce(e,t){return g(1+o.default.count((0,d.default)(e),e),t,3)}function le(e,t){return g(e.getUTCMilliseconds(),t,3)}function fe(e,t){return le(e,t)+"000"}function he(e,t){return g(e.getUTCMonth()+1,t,2)}function me(e,t){return g(e.getUTCMinutes(),t,2)}function pe(e,t){return g(e.getUTCSeconds(),t,2)}function _e(e){var t=e.getUTCDay();return 0===t?7:t}function ge(e,t){return g(r.utcSunday.count((0,d.default)(e)-1,e),t,2)}function ve(e){var t=e.getUTCDay();return t>=4||0===t?(0,r.utcThursday)(e):r.utcThursday.ceil(e)}function ye(e,t){return e=ve(e),g(r.utcThursday.count((0,d.default)(e),e)+(4===(0,d.default)(e).getUTCDay()),t,2)}function je(e){return e.getUTCDay()}function be(e,t){return g(r.utcMonday.count((0,d.default)(e)-1,e),t,2)}function xe(e,t){return g(e.getUTCFullYear()%100,t,2)}function we(e,t){return g((e=ve(e)).getUTCFullYear()%100,t,2)}function Me(e,t){return g(e.getUTCFullYear()%1e4,t,4)}function Se(e,t){var n=e.getUTCDay();return g((e=n>=4||0===n?(0,r.utcThursday)(e):r.utcThursday.ceil(e)).getUTCFullYear()%1e4,t,4)}function ke(){return"+0000"}function Ee(){return"%"}function Ce(e){return+e}function Ae(e){return Math.floor(+e/1e3)}},"../../node_modules/d3-time/src/day.js":(e,t,n)=>{n.r(t),n.d(t,{days:()=>i,default:()=>a});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setHours(0,0,0,0)}),(function(e,t){e.setDate(e.getDate()+t)}),(function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*o.durationMinute)/o.durationDay}),(function(e){return e.getDate()-1}));const a=s;var i=s.range},"../../node_modules/d3-time/src/duration.js":(e,t,n)=>{n.r(t),n.d(t,{durationDay:()=>a,durationHour:()=>s,durationMinute:()=>o,durationSecond:()=>r,durationWeek:()=>i});var r=1e3,o=6e4,s=36e5,a=864e5,i=6048e5},"../../node_modules/d3-time/src/hour.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,hours:()=>i});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setTime(e-e.getMilliseconds()-e.getSeconds()*o.durationSecond-e.getMinutes()*o.durationMinute)}),(function(e,t){e.setTime(+e+t*o.durationHour)}),(function(e,t){return(t-e)/o.durationHour}),(function(e){return e.getHours()}));const a=s;var i=s.range},"../../node_modules/d3-time/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{timeDay:()=>d.default,timeDays:()=>d.days,timeFriday:()=>u.friday,timeFridays:()=>u.fridays,timeHour:()=>i.default,timeHours:()=>i.hours,timeInterval:()=>r.default,timeMillisecond:()=>o.default,timeMilliseconds:()=>o.milliseconds,timeMinute:()=>a.default,timeMinutes:()=>a.minutes,timeMonday:()=>u.monday,timeMondays:()=>u.mondays,timeMonth:()=>c.default,timeMonths:()=>c.months,timeSaturday:()=>u.saturday,timeSaturdays:()=>u.saturdays,timeSecond:()=>s.default,timeSeconds:()=>s.seconds,timeSunday:()=>u.sunday,timeSundays:()=>u.sundays,timeThursday:()=>u.thursday,timeThursdays:()=>u.thursdays,timeTuesday:()=>u.tuesday,timeTuesdays:()=>u.tuesdays,timeWednesday:()=>u.wednesday,timeWednesdays:()=>u.wednesdays,timeWeek:()=>u.sunday,timeWeeks:()=>u.sundays,timeYear:()=>l.default,timeYears:()=>l.years,utcDay:()=>m.default,utcDays:()=>m.utcDays,utcFriday:()=>p.utcFriday,utcFridays:()=>p.utcFridays,utcHour:()=>h.default,utcHours:()=>h.utcHours,utcMillisecond:()=>o.default,utcMilliseconds:()=>o.milliseconds,utcMinute:()=>f.default,utcMinutes:()=>f.utcMinutes,utcMonday:()=>p.utcMonday,utcMondays:()=>p.utcMondays,utcMonth:()=>_.default,utcMonths:()=>_.utcMonths,utcSaturday:()=>p.utcSaturday,utcSaturdays:()=>p.utcSaturdays,utcSecond:()=>s.default,utcSeconds:()=>s.seconds,utcSunday:()=>p.utcSunday,utcSundays:()=>p.utcSundays,utcThursday:()=>p.utcThursday,utcThursdays:()=>p.utcThursdays,utcTuesday:()=>p.utcTuesday,utcTuesdays:()=>p.utcTuesdays,utcWednesday:()=>p.utcWednesday,utcWednesdays:()=>p.utcWednesdays,utcWeek:()=>p.utcSunday,utcWeeks:()=>p.utcSundays,utcYear:()=>g.default,utcYears:()=>g.utcYears});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/millisecond.js"),s=n("../../node_modules/d3-time/src/second.js"),a=n("../../node_modules/d3-time/src/minute.js"),i=n("../../node_modules/d3-time/src/hour.js"),d=n("../../node_modules/d3-time/src/day.js"),u=n("../../node_modules/d3-time/src/week.js"),c=n("../../node_modules/d3-time/src/month.js"),l=n("../../node_modules/d3-time/src/year.js"),f=n("../../node_modules/d3-time/src/utcMinute.js"),h=n("../../node_modules/d3-time/src/utcHour.js"),m=n("../../node_modules/d3-time/src/utcDay.js"),p=n("../../node_modules/d3-time/src/utcWeek.js"),_=n("../../node_modules/d3-time/src/utcMonth.js"),g=n("../../node_modules/d3-time/src/utcYear.js")},"../../node_modules/d3-time/src/interval.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=new Date,o=new Date;function s(e,t,n,a){function i(t){return e(t=0===arguments.length?new Date:new Date(+t)),t}return i.floor=function(t){return e(t=new Date(+t)),t},i.ceil=function(n){return e(n=new Date(n-1)),t(n,1),e(n),n},i.round=function(e){var t=i(e),n=i.ceil(e);return e-t<n-e?t:n},i.offset=function(e,n){return t(e=new Date(+e),null==n?1:Math.floor(n)),e},i.range=function(n,r,o){var s,a=[];if(n=i.ceil(n),o=null==o?1:Math.floor(o),!(n<r&&o>0))return a;do{a.push(s=new Date(+n)),t(n,o),e(n)}while(s<n&&n<r);return a},i.filter=function(n){return s((function(t){if(t>=t)for(;e(t),!n(t);)t.setTime(t-1)}),(function(e,r){if(e>=e)if(r<0)for(;++r<=0;)for(;t(e,-1),!n(e););else for(;--r>=0;)for(;t(e,1),!n(e););}))},n&&(i.count=function(t,s){return r.setTime(+t),o.setTime(+s),e(r),e(o),Math.floor(n(r,o))},i.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?i.filter(a?function(t){return a(t)%e==0}:function(t){return i.count(0,t)%e==0}):i:null}),i}},"../../node_modules/d3-time/src/millisecond.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,milliseconds:()=>a});var r=n("../../node_modules/d3-time/src/interval.js"),o=(0,r.default)((function(){}),(function(e,t){e.setTime(+e+t)}),(function(e,t){return t-e}));o.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?(0,r.default)((function(t){t.setTime(Math.floor(t/e)*e)}),(function(t,n){t.setTime(+t+n*e)}),(function(t,n){return(n-t)/e})):o:null};const s=o;var a=o.range},"../../node_modules/d3-time/src/minute.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,minutes:()=>i});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setTime(e-e.getMilliseconds()-e.getSeconds()*o.durationSecond)}),(function(e,t){e.setTime(+e+t*o.durationMinute)}),(function(e,t){return(t-e)/o.durationMinute}),(function(e){return e.getMinutes()}));const a=s;var i=s.range},"../../node_modules/d3-time/src/month.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o,months:()=>s});var r=(0,n("../../node_modules/d3-time/src/interval.js").default)((function(e){e.setDate(1),e.setHours(0,0,0,0)}),(function(e,t){e.setMonth(e.getMonth()+t)}),(function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())}),(function(e){return e.getMonth()}));const o=r;var s=r.range},"../../node_modules/d3-time/src/second.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,seconds:()=>i});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setTime(e-e.getMilliseconds())}),(function(e,t){e.setTime(+e+t*o.durationSecond)}),(function(e,t){return(t-e)/o.durationSecond}),(function(e){return e.getUTCSeconds()}));const a=s;var i=s.range},"../../node_modules/d3-time/src/utcDay.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,utcDays:()=>i});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCDate(e.getUTCDate()+t)}),(function(e,t){return(t-e)/o.durationDay}),(function(e){return e.getUTCDate()-1}));const a=s;var i=s.range},"../../node_modules/d3-time/src/utcHour.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,utcHours:()=>i});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setUTCMinutes(0,0,0)}),(function(e,t){e.setTime(+e+t*o.durationHour)}),(function(e,t){return(t-e)/o.durationHour}),(function(e){return e.getUTCHours()}));const a=s;var i=s.range},"../../node_modules/d3-time/src/utcMinute.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,utcMinutes:()=>i});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js"),s=(0,r.default)((function(e){e.setUTCSeconds(0,0)}),(function(e,t){e.setTime(+e+t*o.durationMinute)}),(function(e,t){return(t-e)/o.durationMinute}),(function(e){return e.getUTCMinutes()}));const a=s;var i=s.range},"../../node_modules/d3-time/src/utcMonth.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o,utcMonths:()=>s});var r=(0,n("../../node_modules/d3-time/src/interval.js").default)((function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCMonth(e.getUTCMonth()+t)}),(function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())}),(function(e){return e.getUTCMonth()}));const o=r;var s=r.range},"../../node_modules/d3-time/src/utcWeek.js":(e,t,n)=>{n.r(t),n.d(t,{utcFriday:()=>l,utcFridays:()=>v,utcMonday:()=>i,utcMondays:()=>m,utcSaturday:()=>f,utcSaturdays:()=>y,utcSunday:()=>a,utcSundays:()=>h,utcThursday:()=>c,utcThursdays:()=>g,utcTuesday:()=>d,utcTuesdays:()=>p,utcWednesday:()=>u,utcWednesdays:()=>_});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js");function s(e){return(0,r.default)((function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCDate(e.getUTCDate()+7*t)}),(function(e,t){return(t-e)/o.durationWeek}))}var a=s(0),i=s(1),d=s(2),u=s(3),c=s(4),l=s(5),f=s(6),h=a.range,m=i.range,p=d.range,_=u.range,g=c.range,v=l.range,y=f.range},"../../node_modules/d3-time/src/utcYear.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,utcYears:()=>a});var r=n("../../node_modules/d3-time/src/interval.js"),o=(0,r.default)((function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)}),(function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()}),(function(e){return e.getUTCFullYear()}));o.every=function(e){return isFinite(e=Math.floor(e))&&e>0?(0,r.default)((function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n*e)})):null};const s=o;var a=o.range},"../../node_modules/d3-time/src/week.js":(e,t,n)=>{n.r(t),n.d(t,{friday:()=>l,fridays:()=>v,monday:()=>i,mondays:()=>m,saturday:()=>f,saturdays:()=>y,sunday:()=>a,sundays:()=>h,thursday:()=>c,thursdays:()=>g,tuesday:()=>d,tuesdays:()=>p,wednesday:()=>u,wednesdays:()=>_});var r=n("../../node_modules/d3-time/src/interval.js"),o=n("../../node_modules/d3-time/src/duration.js");function s(e){return(0,r.default)((function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)}),(function(e,t){e.setDate(e.getDate()+7*t)}),(function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*o.durationMinute)/o.durationWeek}))}var a=s(0),i=s(1),d=s(2),u=s(3),c=s(4),l=s(5),f=s(6),h=a.range,m=i.range,p=d.range,_=u.range,g=c.range,v=l.range,y=f.range},"../../node_modules/d3-time/src/year.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,years:()=>a});var r=n("../../node_modules/d3-time/src/interval.js"),o=(0,r.default)((function(e){e.setMonth(0,1),e.setHours(0,0,0,0)}),(function(e,t){e.setFullYear(e.getFullYear()+t)}),(function(e,t){return t.getFullYear()-e.getFullYear()}),(function(e){return e.getFullYear()}));o.every=function(e){return isFinite(e=Math.floor(e))&&e>0?(0,r.default)((function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,n){t.setFullYear(t.getFullYear()+n*e)})):null};const s=o;var a=o.range},"../../node_modules/d3-timer/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{interval:()=>s.default,now:()=>r.now,timeout:()=>o.default,timer:()=>r.timer,timerFlush:()=>r.timerFlush});var r=n("../../node_modules/d3-timer/src/timer.js"),o=n("../../node_modules/d3-timer/src/timeout.js"),s=n("../../node_modules/d3-timer/src/interval.js")},"../../node_modules/d3-timer/src/interval.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-timer/src/timer.js");function o(e,t,n){var o=new r.Timer,s=t;return null==t?(o.restart(e,t,n),o):(t=+t,n=null==n?(0,r.now)():+n,o.restart((function r(a){a+=s,o.restart(r,s+=t,n),e(a)}),t,n),o)}},"../../node_modules/d3-timer/src/timeout.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-timer/src/timer.js");function o(e,t,n){var o=new r.Timer;return t=null==t?0:+t,o.restart((function(n){o.stop(),e(n+t)}),t,n),o}},"../../node_modules/d3-timer/src/timer.js":(e,t,n)=>{n.r(t),n.d(t,{Timer:()=>_,now:()=>m,timer:()=>g,timerFlush:()=>v});var r,o,s=0,a=0,i=0,d=1e3,u=0,c=0,l=0,f="object"==typeof performance&&performance.now?performance:Date,h="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function m(){return c||(h(p),c=f.now()+l)}function p(){c=0}function _(){this._call=this._time=this._next=null}function g(e,t,n){var r=new _;return r.restart(e,t,n),r}function v(){m(),++s;for(var e,t=r;t;)(e=c-t._time)>=0&&t._call.call(null,e),t=t._next;--s}function y(){c=(u=f.now())+l,s=a=0;try{v()}finally{s=0,function(){for(var e,t,n=r,s=1/0;n;)n._call?(s>n._time&&(s=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:r=t);o=e,b(s)}(),c=0}}function j(){var e=f.now(),t=e-u;t>d&&(l-=t,u=e)}function b(e){s||(a&&(a=clearTimeout(a)),e-c>24?(e<1/0&&(a=setTimeout(y,e-f.now()-l)),i&&(i=clearInterval(i))):(i||(u=f.now(),i=setInterval(j,d)),s=1,h(y)))}_.prototype=g.prototype={constructor:_,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?m():+n)+(null==t?0:+t),this._next||o===this||(o?o._next=this:r=this,o=this),this._call=e,this._time=n,b()},stop:function(){this._call&&(this._call=null,this._time=1/0,b())}}},"../../node_modules/d3-transition/src/active.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-transition/src/transition/index.js"),o=n("../../node_modules/d3-transition/src/transition/schedule.js"),s=[null];function a(e,t){var n,a,i=e.__transition;if(i)for(a in t=null==t?null:t+"",i)if((n=i[a]).state>o.SCHEDULED&&n.name===t)return new r.Transition([[e]],s,t,+a);return null}},"../../node_modules/d3-transition/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{active:()=>o.default,interrupt:()=>s.default,transition:()=>r.default}),n("../../node_modules/d3-transition/src/selection/index.js");var r=n("../../node_modules/d3-transition/src/transition/index.js"),o=n("../../node_modules/d3-transition/src/active.js"),s=n("../../node_modules/d3-transition/src/interrupt.js")},"../../node_modules/d3-transition/src/interrupt.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(e,t){var n,o,s,a=e.__transition,i=!0;if(a){for(s in t=null==t?null:t+"",a)(n=a[s]).name===t?(o=n.state>r.STARTING&&n.state<r.ENDING,n.state=r.ENDED,n.timer.stop(),n.on.call(o?"interrupt":"cancel",e,e.__data__,n.index,n.group),delete a[s]):i=!1;i&&delete e.__transition}}},"../../node_modules/d3-transition/src/selection/index.js":(e,t,n)=>{n.r(t);var r=n("../../node_modules/d3-selection/src/selection/index.js"),o=n("../../node_modules/d3-transition/src/selection/interrupt.js"),s=n("../../node_modules/d3-transition/src/selection/transition.js");r.default.prototype.interrupt=o.default,r.default.prototype.transition=s.default},"../../node_modules/d3-transition/src/selection/interrupt.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/interrupt.js");function o(e){return this.each((function(){(0,r.default)(this,e)}))}},"../../node_modules/d3-transition/src/selection/transition.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var r=n("../../node_modules/d3-transition/src/transition/index.js"),o=n("../../node_modules/d3-transition/src/transition/schedule.js"),s=n("../../node_modules/d3-ease/src/cubic.js"),a=n("../../node_modules/d3-timer/src/timer.js"),i={time:null,delay:0,duration:250,ease:s.cubicInOut};function d(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))return i.time=(0,a.now)(),i;return n}function u(e){var t,n;e instanceof r.Transition?(t=e._id,e=e._name):(t=(0,r.newId)(),(n=i).time=(0,a.now)(),e=null==e?null:e+"");for(var s=this._groups,u=s.length,c=0;c<u;++c)for(var l,f=s[c],h=f.length,m=0;m<h;++m)(l=f[m])&&(0,o.default)(l,e,t,m,f,n||d(l,t));return new r.Transition(s,this._parents,e,t)}},"../../node_modules/d3-transition/src/transition/attr.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var r=n("../../node_modules/d3-interpolate/src/transform/index.js"),o=n("../../node_modules/d3-selection/src/namespace.js"),s=n("../../node_modules/d3-transition/src/transition/tween.js"),a=n("../../node_modules/d3-transition/src/transition/interpolate.js");function i(e){return function(){this.removeAttribute(e)}}function d(e){return function(){this.removeAttributeNS(e.space,e.local)}}function u(e,t,n){var r,o,s=n+"";return function(){var a=this.getAttribute(e);return a===s?null:a===r?o:o=t(r=a,n)}}function c(e,t,n){var r,o,s=n+"";return function(){var a=this.getAttributeNS(e.space,e.local);return a===s?null:a===r?o:o=t(r=a,n)}}function l(e,t,n){var r,o,s;return function(){var a,i,d=n(this);if(null!=d)return(a=this.getAttribute(e))===(i=d+"")?null:a===r&&i===o?s:(o=i,s=t(r=a,d));this.removeAttribute(e)}}function f(e,t,n){var r,o,s;return function(){var a,i,d=n(this);if(null!=d)return(a=this.getAttributeNS(e.space,e.local))===(i=d+"")?null:a===r&&i===o?s:(o=i,s=t(r=a,d));this.removeAttributeNS(e.space,e.local)}}function h(e,t){var n=(0,o.default)(e),h="transform"===n?r.interpolateTransformSvg:a.default;return this.attrTween(e,"function"==typeof t?(n.local?f:l)(n,h,(0,s.tweenValue)(this,"attr."+e,t)):null==t?(n.local?d:i)(n):(n.local?c:u)(n,h,t))}},"../../node_modules/d3-transition/src/transition/attrTween.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-selection/src/namespace.js");function o(e,t){var n,r;function o(){var o=t.apply(this,arguments);return o!==r&&(n=(r=o)&&function(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}(e,o)),n}return o._value=t,o}function s(e,t){var n,r;function o(){var o=t.apply(this,arguments);return o!==r&&(n=(r=o)&&function(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}(e,o)),n}return o._value=t,o}function a(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var a=(0,r.default)(e);return this.tween(n,(a.local?o:s)(a,t))}},"../../node_modules/d3-transition/src/transition/delay.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(e,t){return function(){(0,r.init)(this,e).delay=+t.apply(this,arguments)}}function s(e,t){return t=+t,function(){(0,r.init)(this,e).delay=t}}function a(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?o:s)(t,e)):(0,r.get)(this.node(),t).delay}},"../../node_modules/d3-transition/src/transition/duration.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(e,t){return function(){(0,r.set)(this,e).duration=+t.apply(this,arguments)}}function s(e,t){return t=+t,function(){(0,r.set)(this,e).duration=t}}function a(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?o:s)(t,e)):(0,r.get)(this.node(),t).duration}},"../../node_modules/d3-transition/src/transition/ease.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(e){var t=this._id;return arguments.length?this.each(function(e,t){if("function"!=typeof t)throw new Error;return function(){(0,r.set)(this,e).ease=t}}(t,e)):(0,r.get)(this.node(),t).ease}},"../../node_modules/d3-transition/src/transition/end.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(){var e,t,n=this,o=n._id,s=n.size();return new Promise((function(a,i){var d={value:i},u={value:function(){0==--s&&a()}};n.each((function(){var n=(0,r.set)(this,o),s=n.on;s!==e&&((t=(e=s).copy())._.cancel.push(d),t._.interrupt.push(d),t._.end.push(u)),n.on=t}))}))}},"../../node_modules/d3-transition/src/transition/filter.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-selection/src/matcher.js"),o=n("../../node_modules/d3-transition/src/transition/index.js");function s(e){"function"!=typeof e&&(e=(0,r.default)(e));for(var t=this._groups,n=t.length,s=new Array(n),a=0;a<n;++a)for(var i,d=t[a],u=d.length,c=s[a]=[],l=0;l<u;++l)(i=d[l])&&e.call(i,i.__data__,l,d)&&c.push(i);return new o.Transition(s,this._parents,this._name,this._id)}},"../../node_modules/d3-transition/src/transition/index.js":(e,t,n)=>{n.r(t),n.d(t,{Transition:()=>M,default:()=>S,newId:()=>k});var r=n("../../node_modules/d3-selection/src/selection/index.js"),o=n("../../node_modules/d3-transition/src/transition/attr.js"),s=n("../../node_modules/d3-transition/src/transition/attrTween.js"),a=n("../../node_modules/d3-transition/src/transition/delay.js"),i=n("../../node_modules/d3-transition/src/transition/duration.js"),d=n("../../node_modules/d3-transition/src/transition/ease.js"),u=n("../../node_modules/d3-transition/src/transition/filter.js"),c=n("../../node_modules/d3-transition/src/transition/merge.js"),l=n("../../node_modules/d3-transition/src/transition/on.js"),f=n("../../node_modules/d3-transition/src/transition/remove.js"),h=n("../../node_modules/d3-transition/src/transition/select.js"),m=n("../../node_modules/d3-transition/src/transition/selectAll.js"),p=n("../../node_modules/d3-transition/src/transition/selection.js"),_=n("../../node_modules/d3-transition/src/transition/style.js"),g=n("../../node_modules/d3-transition/src/transition/styleTween.js"),v=n("../../node_modules/d3-transition/src/transition/text.js"),y=n("../../node_modules/d3-transition/src/transition/textTween.js"),j=n("../../node_modules/d3-transition/src/transition/transition.js"),b=n("../../node_modules/d3-transition/src/transition/tween.js"),x=n("../../node_modules/d3-transition/src/transition/end.js"),w=0;function M(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function S(e){return(0,r.default)().transition(e)}function k(){return++w}var E=r.default.prototype;M.prototype=S.prototype={constructor:M,select:h.default,selectAll:m.default,filter:u.default,merge:c.default,selection:p.default,transition:j.default,call:E.call,nodes:E.nodes,node:E.node,size:E.size,empty:E.empty,each:E.each,on:l.default,attr:o.default,attrTween:s.default,style:_.default,styleTween:g.default,text:v.default,textTween:y.default,remove:f.default,tween:b.default,delay:a.default,duration:i.default,ease:d.default,end:x.default}},"../../node_modules/d3-transition/src/transition/interpolate.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("../../node_modules/d3-color/src/color.js"),o=n("../../node_modules/d3-interpolate/src/number.js"),s=n("../../node_modules/d3-interpolate/src/rgb.js"),a=n("../../node_modules/d3-interpolate/src/string.js");function i(e,t){var n;return("number"==typeof t?o.default:t instanceof r.default?s.default:(n=(0,r.default)(t))?(t=n,s.default):a.default)(e,t)}},"../../node_modules/d3-transition/src/transition/merge.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/transition/index.js");function o(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,o=t.length,s=n.length,a=Math.min(o,s),i=new Array(o),d=0;d<a;++d)for(var u,c=t[d],l=n[d],f=c.length,h=i[d]=new Array(f),m=0;m<f;++m)(u=c[m]||l[m])&&(h[m]=u);for(;d<o;++d)i[d]=t[d];return new r.Transition(i,this._parents,this._name,this._id)}},"../../node_modules/d3-transition/src/transition/on.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(e,t){var n=this._id;return arguments.length<2?(0,r.get)(this.node(),n).on.on(e):this.each(function(e,t,n){var o,s,a=function(e){return(e+"").trim().split(/^|\s+/).every((function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e}))}(t)?r.init:r.set;return function(){var r=a(this,e),i=r.on;i!==o&&(s=(o=i).copy()).on(t,n),r.on=s}}(n,e,t))}},"../../node_modules/d3-transition/src/transition/remove.js":(e,t,n)=>{function r(){return this.on("end.remove",(e=this._id,function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}));var e}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-transition/src/transition/schedule.js":(e,t,n)=>{n.r(t),n.d(t,{CREATED:()=>d,ENDED:()=>m,ENDING:()=>h,RUNNING:()=>f,SCHEDULED:()=>u,STARTED:()=>l,STARTING:()=>c,default:()=>p,get:()=>v,init:()=>_,set:()=>g});var r=n("../../node_modules/d3-dispatch/src/dispatch.js"),o=n("../../node_modules/d3-timer/src/timer.js"),s=n("../../node_modules/d3-timer/src/timeout.js"),a=(0,r.default)("start","end","cancel","interrupt"),i=[],d=0,u=1,c=2,l=3,f=4,h=5,m=6;function p(e,t,n,r,p,_){var g=e.__transition;if(g){if(n in g)return}else e.__transition={};!function(e,t,n){var r,a=e.__transition;function i(o){var h,_,g,v;if(n.state!==u)return p();for(h in a)if((v=a[h]).name===n.name){if(v.state===l)return(0,s.default)(i);v.state===f?(v.state=m,v.timer.stop(),v.on.call("interrupt",e,e.__data__,v.index,v.group),delete a[h]):+h<t&&(v.state=m,v.timer.stop(),v.on.call("cancel",e,e.__data__,v.index,v.group),delete a[h])}if((0,s.default)((function(){n.state===l&&(n.state=f,n.timer.restart(d,n.delay,n.time),d(o))})),n.state=c,n.on.call("start",e,e.__data__,n.index,n.group),n.state===c){for(n.state=l,r=new Array(g=n.tween.length),h=0,_=-1;h<g;++h)(v=n.tween[h].value.call(e,e.__data__,n.index,n.group))&&(r[++_]=v);r.length=_+1}}function d(t){for(var o=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(p),n.state=h,1),s=-1,a=r.length;++s<a;)r[s].call(e,o);n.state===h&&(n.on.call("end",e,e.__data__,n.index,n.group),p())}function p(){for(var r in n.state=m,n.timer.stop(),delete a[t],a)return;delete e.__transition}a[t]=n,n.timer=(0,o.timer)((function(e){n.state=u,n.timer.restart(i,n.delay,n.time),n.delay<=e&&i(e-n.delay)}),0,n.time)}(e,n,{name:t,index:r,group:p,on:a,tween:i,time:_.time,delay:_.delay,duration:_.duration,ease:_.ease,timer:null,state:d})}function _(e,t){var n=v(e,t);if(n.state>d)throw new Error("too late; already scheduled");return n}function g(e,t){var n=v(e,t);if(n.state>l)throw new Error("too late; already running");return n}function v(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}},"../../node_modules/d3-transition/src/transition/select.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-selection/src/selector.js"),o=n("../../node_modules/d3-transition/src/transition/index.js"),s=n("../../node_modules/d3-transition/src/transition/schedule.js");function a(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=(0,r.default)(e));for(var a=this._groups,i=a.length,d=new Array(i),u=0;u<i;++u)for(var c,l,f=a[u],h=f.length,m=d[u]=new Array(h),p=0;p<h;++p)(c=f[p])&&(l=e.call(c,c.__data__,p,f))&&("__data__"in c&&(l.__data__=c.__data__),m[p]=l,(0,s.default)(m[p],t,n,p,m,(0,s.get)(c,n)));return new o.Transition(d,this._parents,t,n)}},"../../node_modules/d3-transition/src/transition/selectAll.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-selection/src/selectorAll.js"),o=n("../../node_modules/d3-transition/src/transition/index.js"),s=n("../../node_modules/d3-transition/src/transition/schedule.js");function a(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=(0,r.default)(e));for(var a=this._groups,i=a.length,d=[],u=[],c=0;c<i;++c)for(var l,f=a[c],h=f.length,m=0;m<h;++m)if(l=f[m]){for(var p,_=e.call(l,l.__data__,m,f),g=(0,s.get)(l,n),v=0,y=_.length;v<y;++v)(p=_[v])&&(0,s.default)(p,t,n,v,_,g);d.push(_),u.push(l)}return new o.Transition(d,u,t,n)}},"../../node_modules/d3-transition/src/transition/selection.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-selection/src/selection/index.js").default.prototype.constructor;function o(){return new r(this._groups,this._parents)}},"../../node_modules/d3-transition/src/transition/style.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var r=n("../../node_modules/d3-interpolate/src/transform/index.js"),o=n("../../node_modules/d3-selection/src/selection/style.js"),s=n("../../node_modules/d3-transition/src/transition/schedule.js"),a=n("../../node_modules/d3-transition/src/transition/tween.js"),i=n("../../node_modules/d3-transition/src/transition/interpolate.js");function d(e){return function(){this.style.removeProperty(e)}}function u(e,t,n){var u="transform"==(e+="")?r.interpolateTransformCss:i.default;return null==t?this.styleTween(e,function(e,t){var n,r,s;return function(){var a=(0,o.styleValue)(this,e),i=(this.style.removeProperty(e),(0,o.styleValue)(this,e));return a===i?null:a===n&&i===r?s:s=t(n=a,r=i)}}(e,u)).on("end.style."+e,d(e)):"function"==typeof t?this.styleTween(e,function(e,t,n){var r,s,a;return function(){var i=(0,o.styleValue)(this,e),d=n(this),u=d+"";return null==d&&(this.style.removeProperty(e),u=d=(0,o.styleValue)(this,e)),i===u?null:i===r&&u===s?a:(s=u,a=t(r=i,d))}}(e,u,(0,a.tweenValue)(this,"style."+e,t))).each(function(e,t){var n,r,o,a,i="style."+t,u="end."+i;return function(){var c=(0,s.set)(this,e),l=c.on,f=null==c.value[i]?a||(a=d(t)):void 0;l===n&&o===f||(r=(n=l).copy()).on(u,o=f),c.on=r}}(this._id,e)):this.styleTween(e,function(e,t,n){var r,s,a=n+"";return function(){var i=(0,o.styleValue)(this,e);return i===a?null:i===r?s:s=t(r=i,n)}}(e,u,t),n).on("end.style."+e,null)}},"../../node_modules/d3-transition/src/transition/styleTween.js":(e,t,n)=>{function r(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,function(e,t,n){var r,o;function s(){var s=t.apply(this,arguments);return s!==o&&(r=(o=s)&&function(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}(e,s,n)),r}return s._value=t,s}(e,t,null==n?"":n))}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-transition/src/transition/text.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("../../node_modules/d3-transition/src/transition/tween.js");function o(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}((0,r.tweenValue)(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))}},"../../node_modules/d3-transition/src/transition/textTween.js":(e,t,n)=>{function r(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(null==e)return this.tween(t,null);if("function"!=typeof e)throw new Error;return this.tween(t,function(e){var t,n;function r(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&function(e){return function(t){this.textContent=e.call(this,t)}}(r)),t}return r._value=e,r}(e))}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-transition/src/transition/transition.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("../../node_modules/d3-transition/src/transition/index.js"),o=n("../../node_modules/d3-transition/src/transition/schedule.js");function s(){for(var e=this._name,t=this._id,n=(0,r.newId)(),s=this._groups,a=s.length,i=0;i<a;++i)for(var d,u=s[i],c=u.length,l=0;l<c;++l)if(d=u[l]){var f=(0,o.get)(d,t);(0,o.default)(d,e,n,l,u,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new r.Transition(s,this._parents,e,n)}},"../../node_modules/d3-transition/src/transition/tween.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,tweenValue:()=>i});var r=n("../../node_modules/d3-transition/src/transition/schedule.js");function o(e,t){var n,o;return function(){var s=(0,r.set)(this,e),a=s.tween;if(a!==n)for(var i=0,d=(o=n=a).length;i<d;++i)if(o[i].name===t){(o=o.slice()).splice(i,1);break}s.tween=o}}function s(e,t,n){var o,s;if("function"!=typeof n)throw new Error;return function(){var a=(0,r.set)(this,e),i=a.tween;if(i!==o){s=(o=i).slice();for(var d={name:t,value:n},u=0,c=s.length;u<c;++u)if(s[u].name===t){s[u]=d;break}u===c&&s.push(d)}a.tween=s}}function a(e,t){var n=this._id;if(e+="",arguments.length<2){for(var a,i=(0,r.get)(this.node(),n).tween,d=0,u=i.length;d<u;++d)if((a=i[d]).name===e)return a.value;return null}return this.each((null==t?o:s)(n,e,t))}function i(e,t,n){var o=e._id;return e.each((function(){var e=(0,r.set)(this,o);(e.value||(e.value={}))[t]=n.apply(this,arguments)})),function(e){return(0,r.get)(e,o).value[t]}}},"../../node_modules/d3-voronoi/src/Beach.js":(e,t,n)=>{n.r(t),n.d(t,{addBeach:()=>h,removeBeach:()=>f});var r=n("../../node_modules/d3-voronoi/src/RedBlackTree.js"),o=n("../../node_modules/d3-voronoi/src/Cell.js"),s=n("../../node_modules/d3-voronoi/src/Circle.js"),a=n("../../node_modules/d3-voronoi/src/Edge.js"),i=n("../../node_modules/d3-voronoi/src/Diagram.js"),d=[];function u(){(0,r.RedBlackNode)(this),this.edge=this.site=this.circle=null}function c(e){var t=d.pop()||new u;return t.site=e,t}function l(e){(0,s.detachCircle)(e),i.beaches.remove(e),d.push(e),(0,r.RedBlackNode)(e)}function f(e){var t=e.circle,n=t.x,r=t.cy,o=[n,r],d=e.P,u=e.N,c=[e];l(e);for(var f=d;f.circle&&Math.abs(n-f.circle.x)<i.epsilon&&Math.abs(r-f.circle.cy)<i.epsilon;)d=f.P,c.unshift(f),l(f),f=d;c.unshift(f),(0,s.detachCircle)(f);for(var h=u;h.circle&&Math.abs(n-h.circle.x)<i.epsilon&&Math.abs(r-h.circle.cy)<i.epsilon;)u=h.N,c.push(h),l(h),h=u;c.push(h),(0,s.detachCircle)(h);var m,p=c.length;for(m=1;m<p;++m)h=c[m],f=c[m-1],(0,a.setEdgeEnd)(h.edge,f.site,h.site,o);f=c[0],(h=c[p-1]).edge=(0,a.createEdge)(f.site,h.site,null,o),(0,s.attachCircle)(f),(0,s.attachCircle)(h)}function h(e){for(var t,n,r,d,u=e[0],l=e[1],f=i.beaches._;f;)if((r=m(f,l)-u)>i.epsilon)f=f.L;else{if(!((d=u-p(f,l))>i.epsilon)){r>-i.epsilon?(t=f.P,n=f):d>-i.epsilon?(t=f,n=f.N):t=n=f;break}if(!f.R){t=f;break}f=f.R}(0,o.createCell)(e);var h=c(e);if(i.beaches.insert(t,h),t||n){if(t===n)return(0,s.detachCircle)(t),n=c(t.site),i.beaches.insert(h,n),h.edge=n.edge=(0,a.createEdge)(t.site,h.site),(0,s.attachCircle)(t),void(0,s.attachCircle)(n);if(n){(0,s.detachCircle)(t),(0,s.detachCircle)(n);var _=t.site,g=_[0],v=_[1],y=e[0]-g,j=e[1]-v,b=n.site,x=b[0]-g,w=b[1]-v,M=2*(y*w-j*x),S=y*y+j*j,k=x*x+w*w,E=[(w*S-j*k)/M+g,(y*k-x*S)/M+v];(0,a.setEdgeEnd)(n.edge,_,b,E),h.edge=(0,a.createEdge)(_,e,null,E),n.edge=(0,a.createEdge)(e,b,null,E),(0,s.attachCircle)(t),(0,s.attachCircle)(n)}else h.edge=(0,a.createEdge)(t.site,h.site)}}function m(e,t){var n=e.site,r=n[0],o=n[1],s=o-t;if(!s)return r;var a=e.P;if(!a)return-1/0;var i=(n=a.site)[0],d=n[1],u=d-t;if(!u)return i;var c=i-r,l=1/s-1/u,f=c/u;return l?(-f+Math.sqrt(f*f-2*l*(c*c/(-2*u)-d+u/2+o-s/2)))/l+r:(r+i)/2}function p(e,t){var n=e.N;if(n)return m(n,t);var r=e.site;return r[1]===t?r[0]:1/0}},"../../node_modules/d3-voronoi/src/Cell.js":(e,t,n)=>{n.r(t),n.d(t,{cellHalfedgeEnd:()=>d,cellHalfedgeStart:()=>i,clipCells:()=>c,createCell:()=>s,sortCellHalfedges:()=>u});var r=n("../../node_modules/d3-voronoi/src/Edge.js"),o=n("../../node_modules/d3-voronoi/src/Diagram.js");function s(e){return o.cells[e.index]={site:e,halfedges:[]}}function a(e,t){var n=e.site,r=t.left,o=t.right;return n===o&&(o=r,r=n),o?Math.atan2(o[1]-r[1],o[0]-r[0]):(n===r?(r=t[1],o=t[0]):(r=t[0],o=t[1]),Math.atan2(r[0]-o[0],o[1]-r[1]))}function i(e,t){return t[+(t.left!==e.site)]}function d(e,t){return t[+(t.left===e.site)]}function u(){for(var e,t,n,r,s=0,i=o.cells.length;s<i;++s)if((e=o.cells[s])&&(r=(t=e.halfedges).length)){var d=new Array(r),u=new Array(r);for(n=0;n<r;++n)d[n]=n,u[n]=a(e,o.edges[t[n]]);for(d.sort((function(e,t){return u[t]-u[e]})),n=0;n<r;++n)u[n]=t[d[n]];for(n=0;n<r;++n)t[n]=u[n]}}function c(e,t,n,s){var a,u,c,l,f,h,m,p,_,g,v,y,j=o.cells.length,b=!0;for(a=0;a<j;++a)if(u=o.cells[a]){for(c=u.site,l=(f=u.halfedges).length;l--;)o.edges[f[l]]||f.splice(l,1);for(l=0,h=f.length;l<h;)v=(g=d(u,o.edges[f[l]]))[0],y=g[1],p=(m=i(u,o.edges[f[++l%h]]))[0],_=m[1],(Math.abs(v-p)>o.epsilon||Math.abs(y-_)>o.epsilon)&&(f.splice(l,0,o.edges.push((0,r.createBorderEdge)(c,g,Math.abs(v-e)<o.epsilon&&s-y>o.epsilon?[e,Math.abs(p-e)<o.epsilon?_:s]:Math.abs(y-s)<o.epsilon&&n-v>o.epsilon?[Math.abs(_-s)<o.epsilon?p:n,s]:Math.abs(v-n)<o.epsilon&&y-t>o.epsilon?[n,Math.abs(p-n)<o.epsilon?_:t]:Math.abs(y-t)<o.epsilon&&v-e>o.epsilon?[Math.abs(_-t)<o.epsilon?p:e,t]:null))-1),++h);h&&(b=!1)}if(b){var x,w,M,S=1/0;for(a=0,b=null;a<j;++a)(u=o.cells[a])&&(M=(x=(c=u.site)[0]-e)*x+(w=c[1]-t)*w)<S&&(S=M,b=u);if(b){var k=[e,t],E=[e,s],C=[n,s],A=[n,t];b.halfedges.push(o.edges.push((0,r.createBorderEdge)(c=b.site,k,E))-1,o.edges.push((0,r.createBorderEdge)(c,E,C))-1,o.edges.push((0,r.createBorderEdge)(c,C,A))-1,o.edges.push((0,r.createBorderEdge)(c,A,k))-1)}}for(a=0;a<j;++a)(u=o.cells[a])&&(u.halfedges.length||delete o.cells[a])}},"../../node_modules/d3-voronoi/src/Circle.js":(e,t,n)=>{n.r(t),n.d(t,{attachCircle:()=>d,detachCircle:()=>u,firstCircle:()=>r});var r,o=n("../../node_modules/d3-voronoi/src/RedBlackTree.js"),s=n("../../node_modules/d3-voronoi/src/Diagram.js"),a=[];function i(){(0,o.RedBlackNode)(this),this.x=this.y=this.arc=this.site=this.cy=null}function d(e){var t=e.P,n=e.N;if(t&&n){var o=t.site,d=e.site,u=n.site;if(o!==u){var c=d[0],l=d[1],f=o[0]-c,h=o[1]-l,m=u[0]-c,p=u[1]-l,_=2*(f*p-h*m);if(!(_>=-s.epsilon2)){var g=f*f+h*h,v=m*m+p*p,y=(p*g-h*v)/_,j=(f*v-m*g)/_,b=a.pop()||new i;b.arc=e,b.site=d,b.x=y+c,b.y=(b.cy=j+l)+Math.sqrt(y*y+j*j),e.circle=b;for(var x=null,w=s.circles._;w;)if(b.y<w.y||b.y===w.y&&b.x<=w.x){if(!w.L){x=w.P;break}w=w.L}else{if(!w.R){x=w;break}w=w.R}s.circles.insert(x,b),x||(r=b)}}}}function u(e){var t=e.circle;t&&(t.P||(r=t.N),s.circles.remove(t),a.push(t),(0,o.RedBlackNode)(t),e.circle=null)}},"../../node_modules/d3-voronoi/src/Diagram.js":(e,t,n)=>{n.r(t),n.d(t,{beaches:()=>r,cells:()=>o,circles:()=>s,default:()=>p,edges:()=>a,epsilon:()=>f,epsilon2:()=>h});var r,o,s,a,i=n("../../node_modules/d3-voronoi/src/Beach.js"),d=n("../../node_modules/d3-voronoi/src/Cell.js"),u=n("../../node_modules/d3-voronoi/src/Circle.js"),c=n("../../node_modules/d3-voronoi/src/Edge.js"),l=n("../../node_modules/d3-voronoi/src/RedBlackTree.js"),f=1e-6,h=1e-12;function m(e,t){return t[1]-e[1]||t[0]-e[0]}function p(e,t){var n,f,h,p=e.sort(m).pop();for(a=[],o=new Array(e.length),r=new l.default,s=new l.default;;)if(h=u.firstCircle,p&&(!h||p[1]<h.y||p[1]===h.y&&p[0]<h.x))p[0]===n&&p[1]===f||((0,i.addBeach)(p),n=p[0],f=p[1]),p=e.pop();else{if(!h)break;(0,i.removeBeach)(h.arc)}if((0,d.sortCellHalfedges)(),t){var _=+t[0][0],g=+t[0][1],v=+t[1][0],y=+t[1][1];(0,c.clipEdges)(_,g,v,y),(0,d.clipCells)(_,g,v,y)}this.edges=a,this.cells=o,r=s=a=o=null}p.prototype={constructor:p,polygons:function(){var e=this.edges;return this.cells.map((function(t){var n=t.halfedges.map((function(n){return(0,d.cellHalfedgeStart)(t,e[n])}));return n.data=t.site.data,n}))},triangles:function(){var e=[],t=this.edges;return this.cells.forEach((function(n,r){if(s=(o=n.halfedges).length)for(var o,s,a,i,d,u,c=n.site,l=-1,f=t[o[s-1]],h=f.left===c?f.right:f.left;++l<s;)a=h,h=(f=t[o[l]]).left===c?f.right:f.left,a&&h&&r<a.index&&r<h.index&&(d=a,u=h,((i=c)[0]-u[0])*(d[1]-i[1])-(i[0]-d[0])*(u[1]-i[1])<0)&&e.push([c.data,a.data,h.data])})),e},links:function(){return this.edges.filter((function(e){return e.right})).map((function(e){return{source:e.left.data,target:e.right.data}}))},find:function(e,t,n){for(var r,o,s=this,a=s._found||0,i=s.cells.length;!(o=s.cells[a]);)if(++a>=i)return null;var d=e-o.site[0],u=t-o.site[1],c=d*d+u*u;do{o=s.cells[r=a],a=null,o.halfedges.forEach((function(n){var r=s.edges[n],i=r.left;if(i!==o.site&&i||(i=r.right)){var d=e-i[0],u=t-i[1],l=d*d+u*u;l<c&&(c=l,a=i.index)}}))}while(null!==a);return s._found=r,null==n||c<=n*n?o.site:null}}},"../../node_modules/d3-voronoi/src/Edge.js":(e,t,n)=>{n.r(t),n.d(t,{clipEdges:()=>u,createBorderEdge:()=>s,createEdge:()=>o,setEdgeEnd:()=>a});var r=n("../../node_modules/d3-voronoi/src/Diagram.js");function o(e,t,n,o){var s=[null,null],i=r.edges.push(s)-1;return s.left=e,s.right=t,n&&a(s,e,t,n),o&&a(s,t,e,o),r.cells[e.index].halfedges.push(i),r.cells[t.index].halfedges.push(i),s}function s(e,t,n){var r=[t,n];return r.left=e,r}function a(e,t,n,r){e[0]||e[1]?e.left===n?e[1]=r:e[0]=r:(e[0]=r,e.left=t,e.right=n)}function i(e,t,n,r,o){var s,a=e[0],i=e[1],d=a[0],u=a[1],c=0,l=1,f=i[0]-d,h=i[1]-u;if(s=t-d,f||!(s>0)){if(s/=f,f<0){if(s<c)return;s<l&&(l=s)}else if(f>0){if(s>l)return;s>c&&(c=s)}if(s=r-d,f||!(s<0)){if(s/=f,f<0){if(s>l)return;s>c&&(c=s)}else if(f>0){if(s<c)return;s<l&&(l=s)}if(s=n-u,h||!(s>0)){if(s/=h,h<0){if(s<c)return;s<l&&(l=s)}else if(h>0){if(s>l)return;s>c&&(c=s)}if(s=o-u,h||!(s<0)){if(s/=h,h<0){if(s>l)return;s>c&&(c=s)}else if(h>0){if(s<c)return;s<l&&(l=s)}return!(c>0||l<1)||(c>0&&(e[0]=[d+c*f,u+c*h]),l<1&&(e[1]=[d+l*f,u+l*h]),!0)}}}}}function d(e,t,n,r,o){var s=e[1];if(s)return!0;var a,i,d=e[0],u=e.left,c=e.right,l=u[0],f=u[1],h=c[0],m=c[1],p=(l+h)/2,_=(f+m)/2;if(m===f){if(p<t||p>=r)return;if(l>h){if(d){if(d[1]>=o)return}else d=[p,n];s=[p,o]}else{if(d){if(d[1]<n)return}else d=[p,o];s=[p,n]}}else if(i=_-(a=(l-h)/(m-f))*p,a<-1||a>1)if(l>h){if(d){if(d[1]>=o)return}else d=[(n-i)/a,n];s=[(o-i)/a,o]}else{if(d){if(d[1]<n)return}else d=[(o-i)/a,o];s=[(n-i)/a,n]}else if(f<m){if(d){if(d[0]>=r)return}else d=[t,a*t+i];s=[r,a*r+i]}else{if(d){if(d[0]<t)return}else d=[r,a*r+i];s=[t,a*t+i]}return e[0]=d,e[1]=s,!0}function u(e,t,n,o){for(var s,a=r.edges.length;a--;)d(s=r.edges[a],e,t,n,o)&&i(s,e,t,n,o)&&(Math.abs(s[0][0]-s[1][0])>r.epsilon||Math.abs(s[0][1]-s[1][1])>r.epsilon)||delete r.edges[a]}},"../../node_modules/d3-voronoi/src/RedBlackTree.js":(e,t,n)=>{function r(){this._=null}function o(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function s(e,t){var n=t,r=t.R,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function a(e,t){var n=t,r=t.L,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function i(e){for(;e.L;)e=e.L;return e}n.r(t),n.d(t,{RedBlackNode:()=>o,default:()=>d}),r.prototype={constructor:r,insert:function(e,t){var n,r,o;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=i(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(r=n.U).L?(o=r.R)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.R&&(s(this,n),n=(e=n).U),n.C=!1,r.C=!0,a(this,r)):(o=r.L)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.L&&(a(this,n),n=(e=n).U),n.C=!1,r.C=!0,s(this,r)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,r,o=e.U,d=e.L,u=e.R;if(n=d?u?i(u):d:u,o?o.L===e?o.L=n:o.R=n:this._=n,d&&u?(r=n.C,n.C=e.C,n.L=d,d.U=n,n!==u?(o=n.U,n.U=e.U,e=n.R,o.L=e,n.R=u,u.U=n):(n.U=o,o=n,e=n.R)):(r=e.C,e=n),e&&(e.U=o),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===o.L){if((t=o.R).C&&(t.C=!1,o.C=!0,s(this,o),t=o.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,a(this,t),t=o.R),t.C=o.C,o.C=t.R.C=!1,s(this,o),e=this._;break}}else if((t=o.L).C&&(t.C=!1,o.C=!0,a(this,o),t=o.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,s(this,t),t=o.L),t.C=o.C,o.C=t.L.C=!1,a(this,o),e=this._;break}t.C=!0,e=o,o=o.U}while(!e.C);e&&(e.C=!1)}}};const d=r},"../../node_modules/d3-voronoi/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-voronoi/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{voronoi:()=>r.default});var r=n("../../node_modules/d3-voronoi/src/voronoi.js")},"../../node_modules/d3-voronoi/src/point.js":(e,t,n)=>{function r(e){return e[0]}function o(e){return e[1]}n.r(t),n.d(t,{x:()=>r,y:()=>o})},"../../node_modules/d3-voronoi/src/voronoi.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("../../node_modules/d3-voronoi/src/constant.js"),o=n("../../node_modules/d3-voronoi/src/point.js"),s=n("../../node_modules/d3-voronoi/src/Diagram.js");function a(){var e=o.x,t=o.y,n=null;function a(r){return new s.default(r.map((function(n,o){var a=[Math.round(e(n,o,r)/s.epsilon)*s.epsilon,Math.round(t(n,o,r)/s.epsilon)*s.epsilon];return a.index=o,a.data=n,a})),n)}return a.polygons=function(e){return a(e).polygons()},a.links=function(e){return a(e).links()},a.triangles=function(e){return a(e).triangles()},a.x=function(t){return arguments.length?(e="function"==typeof t?t:(0,r.default)(+t),a):e},a.y=function(e){return arguments.length?(t="function"==typeof e?e:(0,r.default)(+e),a):t},a.extent=function(e){return arguments.length?(n=null==e?null:[[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]],a):n&&[[n[0][0],n[0][1]],[n[1][0],n[1][1]]]},a.size=function(e){return arguments.length?(n=null==e?null:[[0,0],[+e[0],+e[1]]],a):n&&[n[1][0]-n[0][0],n[1][1]-n[0][1]]},a}},"../../node_modules/d3-zoom/src/constant.js":(e,t,n)=>{function r(e){return function(){return e}}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-zoom/src/event.js":(e,t,n)=>{function r(e,t,n){this.target=e,this.type=t,this.transform=n}n.r(t),n.d(t,{default:()=>r})},"../../node_modules/d3-zoom/src/index.js":(e,t,n)=>{n.r(t),n.d(t,{zoom:()=>r.default,zoomIdentity:()=>o.identity,zoomTransform:()=>o.default});var r=n("../../node_modules/d3-zoom/src/zoom.js"),o=n("../../node_modules/d3-zoom/src/transform.js")},"../../node_modules/d3-zoom/src/noevent.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,nopropagation:()=>o});var r=n("../../node_modules/d3-selection/src/selection/on.js");function o(){r.event.stopImmediatePropagation()}function s(){r.event.preventDefault(),r.event.stopImmediatePropagation()}},"../../node_modules/d3-zoom/src/transform.js":(e,t,n)=>{function r(e,t,n){this.k=e,this.x=t,this.y=n}n.r(t),n.d(t,{Transform:()=>r,default:()=>s,identity:()=>o}),r.prototype={constructor:r,scale:function(e){return 1===e?this:new r(this.k*e,this.x,this.y)},translate:function(e,t){return 0===e&0===t?this:new r(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var o=new r(1,0,0);function s(e){for(;!e.__zoom;)if(!(e=e.parentNode))return o;return e.__zoom}s.prototype=r.prototype},"../../node_modules/d3-zoom/src/zoom.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var r=n("../../node_modules/d3-dispatch/src/dispatch.js"),o=n("../../node_modules/d3-drag/src/nodrag.js"),s=n("../../node_modules/d3-interpolate/src/zoom.js"),a=n("../../node_modules/d3-selection/src/selection/on.js"),i=n("../../node_modules/d3-selection/src/mouse.js"),d=n("../../node_modules/d3-selection/src/select.js"),u=n("../../node_modules/d3-selection/src/touch.js"),c=n("../../node_modules/d3-transition/src/index.js"),l=n("../../node_modules/d3-zoom/src/constant.js"),f=n("../../node_modules/d3-zoom/src/event.js"),h=n("../../node_modules/d3-zoom/src/transform.js"),m=n("../../node_modules/d3-zoom/src/noevent.js");function p(){return!a.event.ctrlKey&&!a.event.button}function _(){var e=this;return e instanceof SVGElement?(e=e.ownerSVGElement||e).hasAttribute("viewBox")?[[(e=e.viewBox.baseVal).x,e.y],[e.x+e.width,e.y+e.height]]:[[0,0],[e.width.baseVal.value,e.height.baseVal.value]]:[[0,0],[e.clientWidth,e.clientHeight]]}function g(){return this.__zoom||h.identity}function v(){return-a.event.deltaY*(1===a.event.deltaMode?.05:a.event.deltaMode?1:.002)}function y(){return navigator.maxTouchPoints||"ontouchstart"in this}function j(e,t,n){var r=e.invertX(t[0][0])-n[0][0],o=e.invertX(t[1][0])-n[1][0],s=e.invertY(t[0][1])-n[0][1],a=e.invertY(t[1][1])-n[1][1];return e.translate(o>r?(r+o)/2:Math.min(0,r)||Math.max(0,o),a>s?(s+a)/2:Math.min(0,s)||Math.max(0,a))}function b(){var e,t,n=p,b=_,x=j,w=v,M=y,S=[0,1/0],k=[[-1/0,-1/0],[1/0,1/0]],E=250,C=s.default,A=(0,r.default)("start","zoom","end"),T=500,R=150,q=0;function N(e){e.property("__zoom",g).on("wheel.zoom",L).on("mousedown.zoom",F).on("dblclick.zoom",Y).filter(M).on("touchstart.zoom",G).on("touchmove.zoom",U).on("touchend.zoom touchcancel.zoom",H).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function P(e,t){return(t=Math.max(S[0],Math.min(S[1],t)))===e.k?e:new h.Transform(t,e.x,e.y)}function B(e,t,n){var r=t[0]-n[0]*e.k,o=t[1]-n[1]*e.k;return r===e.x&&o===e.y?e:new h.Transform(e.k,r,o)}function O(e){return[(+e[0][0]+ +e[1][0])/2,(+e[0][1]+ +e[1][1])/2]}function z(e,t,n){e.on("start.zoom",(function(){D(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){D(this,arguments).end()})).tween("zoom",(function(){var e=this,r=arguments,o=D(e,r),s=b.apply(e,r),a=null==n?O(s):"function"==typeof n?n.apply(e,r):n,i=Math.max(s[1][0]-s[0][0],s[1][1]-s[0][1]),d=e.__zoom,u="function"==typeof t?t.apply(e,r):t,c=C(d.invert(a).concat(i/d.k),u.invert(a).concat(i/u.k));return function(e){if(1===e)e=u;else{var t=c(e),n=i/t[2];e=new h.Transform(n,a[0]-t[0]*n,a[1]-t[1]*n)}o.zoom(null,e)}}))}function D(e,t,n){return!n&&e.__zooming||new I(e,t)}function I(e,t){this.that=e,this.args=t,this.active=0,this.extent=b.apply(e,t),this.taps=0}function L(){if(n.apply(this,arguments)){var e=D(this,arguments),t=this.__zoom,r=Math.max(S[0],Math.min(S[1],t.k*Math.pow(2,w.apply(this,arguments)))),o=(0,i.default)(this);if(e.wheel)e.mouse[0][0]===o[0]&&e.mouse[0][1]===o[1]||(e.mouse[1]=t.invert(e.mouse[0]=o)),clearTimeout(e.wheel);else{if(t.k===r)return;e.mouse=[o,t.invert(o)],(0,c.interrupt)(this),e.start()}(0,m.default)(),e.wheel=setTimeout((function(){e.wheel=null,e.end()}),R),e.zoom("mouse",x(B(P(t,r),e.mouse[0],e.mouse[1]),e.extent,k))}}function F(){if(!t&&n.apply(this,arguments)){var e=D(this,arguments,!0),r=(0,d.default)(a.event.view).on("mousemove.zoom",(function(){if((0,m.default)(),!e.moved){var t=a.event.clientX-u,n=a.event.clientY-l;e.moved=t*t+n*n>q}e.zoom("mouse",x(B(e.that.__zoom,e.mouse[0]=(0,i.default)(e.that),e.mouse[1]),e.extent,k))}),!0).on("mouseup.zoom",(function(){r.on("mousemove.zoom mouseup.zoom",null),(0,o.yesdrag)(a.event.view,e.moved),(0,m.default)(),e.end()}),!0),s=(0,i.default)(this),u=a.event.clientX,l=a.event.clientY;(0,o.default)(a.event.view),(0,m.nopropagation)(),e.mouse=[s,this.__zoom.invert(s)],(0,c.interrupt)(this),e.start()}}function Y(){if(n.apply(this,arguments)){var e=this.__zoom,t=(0,i.default)(this),r=e.invert(t),o=e.k*(a.event.shiftKey?.5:2),s=x(B(P(e,o),t,r),b.apply(this,arguments),k);(0,m.default)(),E>0?(0,d.default)(this).transition().duration(E).call(z,s,t):(0,d.default)(this).call(N.transform,s)}}function G(){if(n.apply(this,arguments)){var t,r,o,s,i=a.event.touches,d=i.length,l=D(this,arguments,a.event.changedTouches.length===d);for((0,m.nopropagation)(),r=0;r<d;++r)o=i[r],s=[s=(0,u.default)(this,i,o.identifier),this.__zoom.invert(s),o.identifier],l.touch0?l.touch1||l.touch0[2]===s[2]||(l.touch1=s,l.taps=0):(l.touch0=s,t=!0,l.taps=1+!!e);e&&(e=clearTimeout(e)),t&&(l.taps<2&&(e=setTimeout((function(){e=null}),T)),(0,c.interrupt)(this),l.start())}}function U(){if(this.__zooming){var t,n,r,o,s=D(this,arguments),i=a.event.changedTouches,d=i.length;for((0,m.default)(),e&&(e=clearTimeout(e)),s.taps=0,t=0;t<d;++t)n=i[t],r=(0,u.default)(this,i,n.identifier),s.touch0&&s.touch0[2]===n.identifier?s.touch0[0]=r:s.touch1&&s.touch1[2]===n.identifier&&(s.touch1[0]=r);if(n=s.that.__zoom,s.touch1){var c=s.touch0[0],l=s.touch0[1],f=s.touch1[0],h=s.touch1[1],p=(p=f[0]-c[0])*p+(p=f[1]-c[1])*p,_=(_=h[0]-l[0])*_+(_=h[1]-l[1])*_;n=P(n,Math.sqrt(p/_)),r=[(c[0]+f[0])/2,(c[1]+f[1])/2],o=[(l[0]+h[0])/2,(l[1]+h[1])/2]}else{if(!s.touch0)return;r=s.touch0[0],o=s.touch0[1]}s.zoom("touch",x(B(n,r,o),s.extent,k))}}function H(){if(this.__zooming){var e,n,r=D(this,arguments),o=a.event.changedTouches,s=o.length;for((0,m.nopropagation)(),t&&clearTimeout(t),t=setTimeout((function(){t=null}),T),e=0;e<s;++e)n=o[e],r.touch0&&r.touch0[2]===n.identifier?delete r.touch0:r.touch1&&r.touch1[2]===n.identifier&&delete r.touch1;if(r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0)r.touch0[1]=this.__zoom.invert(r.touch0[0]);else if(r.end(),2===r.taps){var i=(0,d.default)(this).on("dblclick.zoom");i&&i.apply(this,arguments)}}}return N.transform=function(e,t,n){var r=e.selection?e.selection():e;r.property("__zoom",g),e!==r?z(e,t,n):r.interrupt().each((function(){D(this,arguments).start().zoom(null,"function"==typeof t?t.apply(this,arguments):t).end()}))},N.scaleBy=function(e,t,n){N.scaleTo(e,(function(){return this.__zoom.k*("function"==typeof t?t.apply(this,arguments):t)}),n)},N.scaleTo=function(e,t,n){N.transform(e,(function(){var e=b.apply(this,arguments),r=this.__zoom,o=null==n?O(e):"function"==typeof n?n.apply(this,arguments):n,s=r.invert(o),a="function"==typeof t?t.apply(this,arguments):t;return x(B(P(r,a),o,s),e,k)}),n)},N.translateBy=function(e,t,n){N.transform(e,(function(){return x(this.__zoom.translate("function"==typeof t?t.apply(this,arguments):t,"function"==typeof n?n.apply(this,arguments):n),b.apply(this,arguments),k)}))},N.translateTo=function(e,t,n,r){N.transform(e,(function(){var e=b.apply(this,arguments),o=this.__zoom,s=null==r?O(e):"function"==typeof r?r.apply(this,arguments):r;return x(h.identity.translate(s[0],s[1]).scale(o.k).translate("function"==typeof t?-t.apply(this,arguments):-t,"function"==typeof n?-n.apply(this,arguments):-n),e,k)}),r)},I.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(e,t){return this.mouse&&"mouse"!==e&&(this.mouse[1]=t.invert(this.mouse[0])),this.touch0&&"touch"!==e&&(this.touch0[1]=t.invert(this.touch0[0])),this.touch1&&"touch"!==e&&(this.touch1[1]=t.invert(this.touch1[0])),this.that.__zoom=t,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(e){(0,a.customEvent)(new f.default(N,e,this.that.__zoom),A.apply,A,[e,this.that,this.args])}},N.wheelDelta=function(e){return arguments.length?(w="function"==typeof e?e:(0,l.default)(+e),N):w},N.filter=function(e){return arguments.length?(n="function"==typeof e?e:(0,l.default)(!!e),N):n},N.touchable=function(e){return arguments.length?(M="function"==typeof e?e:(0,l.default)(!!e),N):M},N.extent=function(e){return arguments.length?(b="function"==typeof e?e:(0,l.default)([[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]]),N):b},N.scaleExtent=function(e){return arguments.length?(S[0]=+e[0],S[1]=+e[1],N):[S[0],S[1]]},N.translateExtent=function(e){return arguments.length?(k[0][0]=+e[0][0],k[1][0]=+e[1][0],k[0][1]=+e[0][1],k[1][1]=+e[1][1],N):[[k[0][0],k[0][1]],[k[1][0],k[1][1]]]},N.constrain=function(e){return arguments.length?(x=e,N):x},N.duration=function(e){return arguments.length?(E=+e,N):E},N.interpolate=function(e){return arguments.length?(C=e,N):C},N.on=function(){var e=A.on.apply(A,arguments);return e===A?N:e},N.clickDistance=function(e){return arguments.length?(q=(e=+e)*e,N):Math.sqrt(q)},N}},"../../node_modules/d3/dist/package.js":(e,t,n)=>{n.r(t),n.d(t,{author:()=>u,dependencies:()=>v,description:()=>s,devDependencies:()=>g,files:()=>p,homepage:()=>i,jsdelivr:()=>f,keywords:()=>a,license:()=>d,main:()=>c,module:()=>h,name:()=>r,repository:()=>m,scripts:()=>_,unpkg:()=>l,version:()=>o});var r="d3",o="5.16.0",s="Data-Driven Documents",a=["dom","visualization","svg","animation","canvas"],i="https://d3js.org",d="BSD-3-Clause",u={name:"Mike Bostock",url:"https://bost.ocks.org/mike"},c="dist/d3.node.js",l="dist/d3.min.js",f="dist/d3.min.js",h="index.js",m={type:"git",url:"https://github.com/d3/d3.git"},p=["dist/**/*.js","index.js"],_={pretest:"rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",test:"tape 'test/**/*-test.js'",prepublishOnly:"yarn test",postpublish:'git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m "d3 ${npm_package_version}" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m "${npm_package_version}" && git tag -am "${npm_package_version}" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js'},g={json2module:"0.0",rimraf:"2",rollup:"1","rollup-plugin-ascii":"0.0","rollup-plugin-node-resolve":"3","rollup-plugin-terser":"5",tape:"4"},v={"d3-array":"1","d3-axis":"1","d3-brush":"1","d3-chord":"1","d3-collection":"1","d3-color":"1","d3-contour":"1","d3-dispatch":"1","d3-drag":"1","d3-dsv":"1","d3-ease":"1","d3-fetch":"1","d3-force":"1","d3-format":"1","d3-geo":"1","d3-hierarchy":"1","d3-interpolate":"1","d3-path":"1","d3-polygon":"1","d3-quadtree":"1","d3-random":"1","d3-scale":"2","d3-scale-chromatic":"1","d3-selection":"1","d3-shape":"1","d3-time":"1","d3-time-format":"2","d3-timer":"1","d3-transition":"1","d3-voronoi":"1","d3-zoom":"1"}},"../../node_modules/d3/index.js":(e,t,n)=>{n.r(t),n.d(t,{FormatSpecifier:()=>g.FormatSpecifier,active:()=>q.active,arc:()=>C.arc,area:()=>C.area,areaRadial:()=>C.areaRadial,ascending:()=>o.ascending,autoType:()=>h.autoType,axisBottom:()=>s.axisBottom,axisLeft:()=>s.axisLeft,axisRight:()=>s.axisRight,axisTop:()=>s.axisTop,bisect:()=>o.bisect,bisectLeft:()=>o.bisectLeft,bisectRight:()=>o.bisectRight,bisector:()=>o.bisector,blob:()=>p.blob,brush:()=>a.brush,brushSelection:()=>a.brushSelection,brushX:()=>a.brushX,brushY:()=>a.brushY,buffer:()=>p.buffer,chord:()=>i.chord,clientPoint:()=>E.clientPoint,cluster:()=>y.cluster,color:()=>u.color,contourDensity:()=>c.contourDensity,contours:()=>c.contours,create:()=>E.create,creator:()=>E.creator,cross:()=>o.cross,csv:()=>p.csv,csvFormat:()=>h.csvFormat,csvFormatBody:()=>h.csvFormatBody,csvFormatRow:()=>h.csvFormatRow,csvFormatRows:()=>h.csvFormatRows,csvFormatValue:()=>h.csvFormatValue,csvParse:()=>h.csvParse,csvParseRows:()=>h.csvParseRows,cubehelix:()=>u.cubehelix,curveBasis:()=>C.curveBasis,curveBasisClosed:()=>C.curveBasisClosed,curveBasisOpen:()=>C.curveBasisOpen,curveBundle:()=>C.curveBundle,curveCardinal:()=>C.curveCardinal,curveCardinalClosed:()=>C.curveCardinalClosed,curveCardinalOpen:()=>C.curveCardinalOpen,curveCatmullRom:()=>C.curveCatmullRom,curveCatmullRomClosed:()=>C.curveCatmullRomClosed,curveCatmullRomOpen:()=>C.curveCatmullRomOpen,curveLinear:()=>C.curveLinear,curveLinearClosed:()=>C.curveLinearClosed,curveMonotoneX:()=>C.curveMonotoneX,curveMonotoneY:()=>C.curveMonotoneY,curveNatural:()=>C.curveNatural,curveStep:()=>C.curveStep,curveStepAfter:()=>C.curveStepAfter,curveStepBefore:()=>C.curveStepBefore,customEvent:()=>E.customEvent,descending:()=>o.descending,deviation:()=>o.deviation,dispatch:()=>l.dispatch,drag:()=>f.drag,dragDisable:()=>f.dragDisable,dragEnable:()=>f.dragEnable,dsv:()=>p.dsv,dsvFormat:()=>h.dsvFormat,easeBack:()=>m.easeBack,easeBackIn:()=>m.easeBackIn,easeBackInOut:()=>m.easeBackInOut,easeBackOut:()=>m.easeBackOut,easeBounce:()=>m.easeBounce,easeBounceIn:()=>m.easeBounceIn,easeBounceInOut:()=>m.easeBounceInOut,easeBounceOut:()=>m.easeBounceOut,easeCircle:()=>m.easeCircle,easeCircleIn:()=>m.easeCircleIn,easeCircleInOut:()=>m.easeCircleInOut,easeCircleOut:()=>m.easeCircleOut,easeCubic:()=>m.easeCubic,easeCubicIn:()=>m.easeCubicIn,easeCubicInOut:()=>m.easeCubicInOut,easeCubicOut:()=>m.easeCubicOut,easeElastic:()=>m.easeElastic,easeElasticIn:()=>m.easeElasticIn,easeElasticInOut:()=>m.easeElasticInOut,easeElasticOut:()=>m.easeElasticOut,easeExp:()=>m.easeExp,easeExpIn:()=>m.easeExpIn,easeExpInOut:()=>m.easeExpInOut,easeExpOut:()=>m.easeExpOut,easeLinear:()=>m.easeLinear,easePoly:()=>m.easePoly,easePolyIn:()=>m.easePolyIn,easePolyInOut:()=>m.easePolyInOut,easePolyOut:()=>m.easePolyOut,easeQuad:()=>m.easeQuad,easeQuadIn:()=>m.easeQuadIn,easeQuadInOut:()=>m.easeQuadInOut,easeQuadOut:()=>m.easeQuadOut,easeSin:()=>m.easeSin,easeSinIn:()=>m.easeSinIn,easeSinInOut:()=>m.easeSinInOut,easeSinOut:()=>m.easeSinOut,entries:()=>d.entries,event:()=>E.event,extent:()=>o.extent,forceCenter:()=>_.forceCenter,forceCollide:()=>_.forceCollide,forceLink:()=>_.forceLink,forceManyBody:()=>_.forceManyBody,forceRadial:()=>_.forceRadial,forceSimulation:()=>_.forceSimulation,forceX:()=>_.forceX,forceY:()=>_.forceY,format:()=>g.format,formatDefaultLocale:()=>g.formatDefaultLocale,formatLocale:()=>g.formatLocale,formatPrefix:()=>g.formatPrefix,formatSpecifier:()=>g.formatSpecifier,geoAlbers:()=>v.geoAlbers,geoAlbersUsa:()=>v.geoAlbersUsa,geoArea:()=>v.geoArea,geoAzimuthalEqualArea:()=>v.geoAzimuthalEqualArea,geoAzimuthalEqualAreaRaw:()=>v.geoAzimuthalEqualAreaRaw,geoAzimuthalEquidistant:()=>v.geoAzimuthalEquidistant,geoAzimuthalEquidistantRaw:()=>v.geoAzimuthalEquidistantRaw,geoBounds:()=>v.geoBounds,geoCentroid:()=>v.geoCentroid,geoCircle:()=>v.geoCircle,geoClipAntimeridian:()=>v.geoClipAntimeridian,geoClipCircle:()=>v.geoClipCircle,geoClipExtent:()=>v.geoClipExtent,geoClipRectangle:()=>v.geoClipRectangle,geoConicConformal:()=>v.geoConicConformal,geoConicConformalRaw:()=>v.geoConicConformalRaw,geoConicEqualArea:()=>v.geoConicEqualArea,geoConicEqualAreaRaw:()=>v.geoConicEqualAreaRaw,geoConicEquidistant:()=>v.geoConicEquidistant,geoConicEquidistantRaw:()=>v.geoConicEquidistantRaw,geoContains:()=>v.geoContains,geoDistance:()=>v.geoDistance,geoEqualEarth:()=>v.geoEqualEarth,geoEqualEarthRaw:()=>v.geoEqualEarthRaw,geoEquirectangular:()=>v.geoEquirectangular,geoEquirectangularRaw:()=>v.geoEquirectangularRaw,geoGnomonic:()=>v.geoGnomonic,geoGnomonicRaw:()=>v.geoGnomonicRaw,geoGraticule:()=>v.geoGraticule,geoGraticule10:()=>v.geoGraticule10,geoIdentity:()=>v.geoIdentity,geoInterpolate:()=>v.geoInterpolate,geoLength:()=>v.geoLength,geoMercator:()=>v.geoMercator,geoMercatorRaw:()=>v.geoMercatorRaw,geoNaturalEarth1:()=>v.geoNaturalEarth1,geoNaturalEarth1Raw:()=>v.geoNaturalEarth1Raw,geoOrthographic:()=>v.geoOrthographic,geoOrthographicRaw:()=>v.geoOrthographicRaw,geoPath:()=>v.geoPath,geoProjection:()=>v.geoProjection,geoProjectionMutator:()=>v.geoProjectionMutator,geoRotation:()=>v.geoRotation,geoStereographic:()=>v.geoStereographic,geoStereographicRaw:()=>v.geoStereographicRaw,geoStream:()=>v.geoStream,geoTransform:()=>v.geoTransform,geoTransverseMercator:()=>v.geoTransverseMercator,geoTransverseMercatorRaw:()=>v.geoTransverseMercatorRaw,gray:()=>u.gray,hcl:()=>u.hcl,hierarchy:()=>y.hierarchy,histogram:()=>o.histogram,hsl:()=>u.hsl,html:()=>p.html,image:()=>p.image,interpolate:()=>j.interpolate,interpolateArray:()=>j.interpolateArray,interpolateBasis:()=>j.interpolateBasis,interpolateBasisClosed:()=>j.interpolateBasisClosed,interpolateBlues:()=>k.interpolateBlues,interpolateBrBG:()=>k.interpolateBrBG,interpolateBuGn:()=>k.interpolateBuGn,interpolateBuPu:()=>k.interpolateBuPu,interpolateCividis:()=>k.interpolateCividis,interpolateCool:()=>k.interpolateCool,interpolateCubehelix:()=>j.interpolateCubehelix,interpolateCubehelixDefault:()=>k.interpolateCubehelixDefault,interpolateCubehelixLong:()=>j.interpolateCubehelixLong,interpolateDate:()=>j.interpolateDate,interpolateDiscrete:()=>j.interpolateDiscrete,interpolateGnBu:()=>k.interpolateGnBu,interpolateGreens:()=>k.interpolateGreens,interpolateGreys:()=>k.interpolateGreys,interpolateHcl:()=>j.interpolateHcl,interpolateHclLong:()=>j.interpolateHclLong,interpolateHsl:()=>j.interpolateHsl,interpolateHslLong:()=>j.interpolateHslLong,interpolateHue:()=>j.interpolateHue,interpolateInferno:()=>k.interpolateInferno,interpolateLab:()=>j.interpolateLab,interpolateMagma:()=>k.interpolateMagma,interpolateNumber:()=>j.interpolateNumber,interpolateNumberArray:()=>j.interpolateNumberArray,interpolateObject:()=>j.interpolateObject,interpolateOrRd:()=>k.interpolateOrRd,interpolateOranges:()=>k.interpolateOranges,interpolatePRGn:()=>k.interpolatePRGn,interpolatePiYG:()=>k.interpolatePiYG,interpolatePlasma:()=>k.interpolatePlasma,interpolatePuBu:()=>k.interpolatePuBu,interpolatePuBuGn:()=>k.interpolatePuBuGn,interpolatePuOr:()=>k.interpolatePuOr,interpolatePuRd:()=>k.interpolatePuRd,interpolatePurples:()=>k.interpolatePurples,interpolateRainbow:()=>k.interpolateRainbow,interpolateRdBu:()=>k.interpolateRdBu,interpolateRdGy:()=>k.interpolateRdGy,interpolateRdPu:()=>k.interpolateRdPu,interpolateRdYlBu:()=>k.interpolateRdYlBu,interpolateRdYlGn:()=>k.interpolateRdYlGn,interpolateReds:()=>k.interpolateReds,interpolateRgb:()=>j.interpolateRgb,interpolateRgbBasis:()=>j.interpolateRgbBasis,interpolateRgbBasisClosed:()=>j.interpolateRgbBasisClosed,interpolateRound:()=>j.interpolateRound,interpolateSinebow:()=>k.interpolateSinebow,interpolateSpectral:()=>k.interpolateSpectral,interpolateString:()=>j.interpolateString,interpolateTransformCss:()=>j.interpolateTransformCss,interpolateTransformSvg:()=>j.interpolateTransformSvg,interpolateTurbo:()=>k.interpolateTurbo,interpolateViridis:()=>k.interpolateViridis,interpolateWarm:()=>k.interpolateWarm,interpolateYlGn:()=>k.interpolateYlGn,interpolateYlGnBu:()=>k.interpolateYlGnBu,interpolateYlOrBr:()=>k.interpolateYlOrBr,interpolateYlOrRd:()=>k.interpolateYlOrRd,interpolateZoom:()=>j.interpolateZoom,interrupt:()=>q.interrupt,interval:()=>R.interval,isoFormat:()=>T.isoFormat,isoParse:()=>T.isoParse,json:()=>p.json,keys:()=>d.keys,lab:()=>u.lab,lch:()=>u.lch,line:()=>C.line,lineRadial:()=>C.lineRadial,linkHorizontal:()=>C.linkHorizontal,linkRadial:()=>C.linkRadial,linkVertical:()=>C.linkVertical,local:()=>E.local,map:()=>d.map,matcher:()=>E.matcher,max:()=>o.max,mean:()=>o.mean,median:()=>o.median,merge:()=>o.merge,min:()=>o.min,mouse:()=>E.mouse,namespace:()=>E.namespace,namespaces:()=>E.namespaces,nest:()=>d.nest,now:()=>R.now,pack:()=>y.pack,packEnclose:()=>y.packEnclose,packSiblings:()=>y.packSiblings,pairs:()=>o.pairs,partition:()=>y.partition,path:()=>b.path,permute:()=>o.permute,pie:()=>C.pie,piecewise:()=>j.piecewise,pointRadial:()=>C.pointRadial,polygonArea:()=>x.polygonArea,polygonCentroid:()=>x.polygonCentroid,polygonContains:()=>x.polygonContains,polygonHull:()=>x.polygonHull,polygonLength:()=>x.polygonLength,precisionFixed:()=>g.precisionFixed,precisionPrefix:()=>g.precisionPrefix,precisionRound:()=>g.precisionRound,quadtree:()=>w.quadtree,quantile:()=>o.quantile,quantize:()=>j.quantize,radialArea:()=>C.radialArea,radialLine:()=>C.radialLine,randomBates:()=>M.randomBates,randomExponential:()=>M.randomExponential,randomIrwinHall:()=>M.randomIrwinHall,randomLogNormal:()=>M.randomLogNormal,randomNormal:()=>M.randomNormal,randomUniform:()=>M.randomUniform,range:()=>o.range,rgb:()=>u.rgb,ribbon:()=>i.ribbon,scaleBand:()=>S.scaleBand,scaleDiverging:()=>S.scaleDiverging,scaleDivergingLog:()=>S.scaleDivergingLog,scaleDivergingPow:()=>S.scaleDivergingPow,scaleDivergingSqrt:()=>S.scaleDivergingSqrt,scaleDivergingSymlog:()=>S.scaleDivergingSymlog,scaleIdentity:()=>S.scaleIdentity,scaleImplicit:()=>S.scaleImplicit,scaleLinear:()=>S.scaleLinear,scaleLog:()=>S.scaleLog,scaleOrdinal:()=>S.scaleOrdinal,scalePoint:()=>S.scalePoint,scalePow:()=>S.scalePow,scaleQuantile:()=>S.scaleQuantile,scaleQuantize:()=>S.scaleQuantize,scaleSequential:()=>S.scaleSequential,scaleSequentialLog:()=>S.scaleSequentialLog,scaleSequentialPow:()=>S.scaleSequentialPow,scaleSequentialQuantile:()=>S.scaleSequentialQuantile,scaleSequentialSqrt:()=>S.scaleSequentialSqrt,scaleSequentialSymlog:()=>S.scaleSequentialSymlog,scaleSqrt:()=>S.scaleSqrt,scaleSymlog:()=>S.scaleSymlog,scaleThreshold:()=>S.scaleThreshold,scaleTime:()=>S.scaleTime,scaleUtc:()=>S.scaleUtc,scan:()=>o.scan,schemeAccent:()=>k.schemeAccent,schemeBlues:()=>k.schemeBlues,schemeBrBG:()=>k.schemeBrBG,schemeBuGn:()=>k.schemeBuGn,schemeBuPu:()=>k.schemeBuPu,schemeCategory10:()=>k.schemeCategory10,schemeDark2:()=>k.schemeDark2,schemeGnBu:()=>k.schemeGnBu,schemeGreens:()=>k.schemeGreens,schemeGreys:()=>k.schemeGreys,schemeOrRd:()=>k.schemeOrRd,schemeOranges:()=>k.schemeOranges,schemePRGn:()=>k.schemePRGn,schemePaired:()=>k.schemePaired,schemePastel1:()=>k.schemePastel1,schemePastel2:()=>k.schemePastel2,schemePiYG:()=>k.schemePiYG,schemePuBu:()=>k.schemePuBu,schemePuBuGn:()=>k.schemePuBuGn,schemePuOr:()=>k.schemePuOr,schemePuRd:()=>k.schemePuRd,schemePurples:()=>k.schemePurples,schemeRdBu:()=>k.schemeRdBu,schemeRdGy:()=>k.schemeRdGy,schemeRdPu:()=>k.schemeRdPu,schemeRdYlBu:()=>k.schemeRdYlBu,schemeRdYlGn:()=>k.schemeRdYlGn,schemeReds:()=>k.schemeReds,schemeSet1:()=>k.schemeSet1,schemeSet2:()=>k.schemeSet2,schemeSet3:()=>k.schemeSet3,schemeSpectral:()=>k.schemeSpectral,schemeTableau10:()=>k.schemeTableau10,schemeYlGn:()=>k.schemeYlGn,schemeYlGnBu:()=>k.schemeYlGnBu,schemeYlOrBr:()=>k.schemeYlOrBr,schemeYlOrRd:()=>k.schemeYlOrRd,select:()=>E.select,selectAll:()=>E.selectAll,selection:()=>E.selection,selector:()=>E.selector,selectorAll:()=>E.selectorAll,set:()=>d.set,shuffle:()=>o.shuffle,stack:()=>C.stack,stackOffsetDiverging:()=>C.stackOffsetDiverging,stackOffsetExpand:()=>C.stackOffsetExpand,stackOffsetNone:()=>C.stackOffsetNone,stackOffsetSilhouette:()=>C.stackOffsetSilhouette,stackOffsetWiggle:()=>C.stackOffsetWiggle,stackOrderAppearance:()=>C.stackOrderAppearance,stackOrderAscending:()=>C.stackOrderAscending,stackOrderDescending:()=>C.stackOrderDescending,stackOrderInsideOut:()=>C.stackOrderInsideOut,stackOrderNone:()=>C.stackOrderNone,stackOrderReverse:()=>C.stackOrderReverse,stratify:()=>y.stratify,style:()=>E.style,sum:()=>o.sum,svg:()=>p.svg,symbol:()=>C.symbol,symbolCircle:()=>C.symbolCircle,symbolCross:()=>C.symbolCross,symbolDiamond:()=>C.symbolDiamond,symbolSquare:()=>C.symbolSquare,symbolStar:()=>C.symbolStar,symbolTriangle:()=>C.symbolTriangle,symbolWye:()=>C.symbolWye,symbols:()=>C.symbols,text:()=>p.text,thresholdFreedmanDiaconis:()=>o.thresholdFreedmanDiaconis,thresholdScott:()=>o.thresholdScott,thresholdSturges:()=>o.thresholdSturges,tickFormat:()=>S.tickFormat,tickIncrement:()=>o.tickIncrement,tickStep:()=>o.tickStep,ticks:()=>o.ticks,timeDay:()=>A.timeDay,timeDays:()=>A.timeDays,timeFormat:()=>T.timeFormat,timeFormatDefaultLocale:()=>T.timeFormatDefaultLocale,timeFormatLocale:()=>T.timeFormatLocale,timeFriday:()=>A.timeFriday,timeFridays:()=>A.timeFridays,timeHour:()=>A.timeHour,timeHours:()=>A.timeHours,timeInterval:()=>A.timeInterval,timeMillisecond:()=>A.timeMillisecond,timeMilliseconds:()=>A.timeMilliseconds,timeMinute:()=>A.timeMinute,timeMinutes:()=>A.timeMinutes,timeMonday:()=>A.timeMonday,timeMondays:()=>A.timeMondays,timeMonth:()=>A.timeMonth,timeMonths:()=>A.timeMonths,timeParse:()=>T.timeParse,timeSaturday:()=>A.timeSaturday,timeSaturdays:()=>A.timeSaturdays,timeSecond:()=>A.timeSecond,timeSeconds:()=>A.timeSeconds,timeSunday:()=>A.timeSunday,timeSundays:()=>A.timeSundays,timeThursday:()=>A.timeThursday,timeThursdays:()=>A.timeThursdays,timeTuesday:()=>A.timeTuesday,timeTuesdays:()=>A.timeTuesdays,timeWednesday:()=>A.timeWednesday,timeWednesdays:()=>A.timeWednesdays,timeWeek:()=>A.timeWeek,timeWeeks:()=>A.timeWeeks,timeYear:()=>A.timeYear,timeYears:()=>A.timeYears,timeout:()=>R.timeout,timer:()=>R.timer,timerFlush:()=>R.timerFlush,touch:()=>E.touch,touches:()=>E.touches,transition:()=>q.transition,transpose:()=>o.transpose,tree:()=>y.tree,treemap:()=>y.treemap,treemapBinary:()=>y.treemapBinary,treemapDice:()=>y.treemapDice,treemapResquarify:()=>y.treemapResquarify,treemapSlice:()=>y.treemapSlice,treemapSliceDice:()=>y.treemapSliceDice,treemapSquarify:()=>y.treemapSquarify,tsv:()=>p.tsv,tsvFormat:()=>h.tsvFormat,tsvFormatBody:()=>h.tsvFormatBody,tsvFormatRow:()=>h.tsvFormatRow,tsvFormatRows:()=>h.tsvFormatRows,tsvFormatValue:()=>h.tsvFormatValue,tsvParse:()=>h.tsvParse,tsvParseRows:()=>h.tsvParseRows,utcDay:()=>A.utcDay,utcDays:()=>A.utcDays,utcFormat:()=>T.utcFormat,utcFriday:()=>A.utcFriday,utcFridays:()=>A.utcFridays,utcHour:()=>A.utcHour,utcHours:()=>A.utcHours,utcMillisecond:()=>A.utcMillisecond,utcMilliseconds:()=>A.utcMilliseconds,utcMinute:()=>A.utcMinute,utcMinutes:()=>A.utcMinutes,utcMonday:()=>A.utcMonday,utcMondays:()=>A.utcMondays,utcMonth:()=>A.utcMonth,utcMonths:()=>A.utcMonths,utcParse:()=>T.utcParse,utcSaturday:()=>A.utcSaturday,utcSaturdays:()=>A.utcSaturdays,utcSecond:()=>A.utcSecond,utcSeconds:()=>A.utcSeconds,utcSunday:()=>A.utcSunday,utcSundays:()=>A.utcSundays,utcThursday:()=>A.utcThursday,utcThursdays:()=>A.utcThursdays,utcTuesday:()=>A.utcTuesday,utcTuesdays:()=>A.utcTuesdays,utcWednesday:()=>A.utcWednesday,utcWednesdays:()=>A.utcWednesdays,utcWeek:()=>A.utcWeek,utcWeeks:()=>A.utcWeeks,utcYear:()=>A.utcYear,utcYears:()=>A.utcYears,values:()=>d.values,variance:()=>o.variance,version:()=>r.version,voronoi:()=>N.voronoi,window:()=>E.window,xml:()=>p.xml,zip:()=>o.zip,zoom:()=>P.zoom,zoomIdentity:()=>P.zoomIdentity,zoomTransform:()=>P.zoomTransform});var r=n("../../node_modules/d3/dist/package.js"),o=n("../../node_modules/d3-array/src/index.js"),s=n("../../node_modules/d3-axis/src/index.js"),a=n("../../node_modules/d3-brush/src/index.js"),i=n("../../node_modules/d3-chord/src/index.js"),d=n("../../node_modules/d3-collection/src/index.js"),u=n("../../node_modules/d3-color/src/index.js"),c=n("../../node_modules/d3-contour/src/index.js"),l=n("../../node_modules/d3-dispatch/src/index.js"),f=n("../../node_modules/d3-drag/src/index.js"),h=n("../../node_modules/d3-dsv/src/index.js"),m=n("../../node_modules/d3-ease/src/index.js"),p=n("../../node_modules/d3-fetch/src/index.js"),_=n("../../node_modules/d3-force/src/index.js"),g=n("../../node_modules/d3-format/src/index.js"),v=n("../../node_modules/d3-geo/src/index.js"),y=n("../../node_modules/d3-hierarchy/src/index.js"),j=n("../../node_modules/d3-interpolate/src/index.js"),b=n("../../node_modules/d3-path/src/index.js"),x=n("../../node_modules/d3-polygon/src/index.js"),w=n("../../node_modules/d3-quadtree/src/index.js"),M=n("../../node_modules/d3-random/src/index.js"),S=n("../../node_modules/d3-scale/src/index.js"),k=n("../../node_modules/d3-scale-chromatic/src/index.js"),E=n("../../node_modules/d3-selection/src/index.js"),C=n("../../node_modules/d3-shape/src/index.js"),A=n("../../node_modules/d3-time/src/index.js"),T=n("../../node_modules/d3-time-format/src/index.js"),R=n("../../node_modules/d3-timer/src/index.js"),q=n("../../node_modules/d3-transition/src/index.js"),N=n("../../node_modules/d3-voronoi/src/index.js"),P=n("../../node_modules/d3-zoom/src/index.js")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,