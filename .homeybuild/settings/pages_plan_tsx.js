/*! For license information please see pages_plan_tsx.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["pages_plan_tsx"],{"./api/devices/index.tsx":(e,t,a)=>{a.r(t),a.d(t,{deviceAPI:()=>o});var l=a("../../node_modules/tslib/tslib.es6.js"),n=a("../../node_modules/lodash/lodash.js"),s=a("./api/callAPI.tsx");const o={fetchHeatingDevices:()=>(0,l.__awaiter)(void 0,void 0,void 0,(function*(){const e=yield(0,s.default)("GET","/devices"),t=(0,n.sortBy)(e,"name").reduce(((e,t,a)=>(e[a]=t,e[t.id]=t,e)),{});return t.length=e.length,t}))}},"./api/zones/index.tsx":(e,t,a)=>{a.r(t),a.d(t,{zoneAPI:()=>o});var l=a("../../node_modules/tslib/tslib.es6.js"),n=a("../../node_modules/lodash/lodash.js"),s=a("./api/callAPI.tsx");const o={fetchHeatingZones:()=>(0,l.__awaiter)(void 0,void 0,void 0,(function*(){const e=yield(0,s.default)("GET","/zones"),t=(0,n.sortBy)(e,"name").reduce(((e,t,a)=>(e[a]=t,e[t.id]=t,e)),{});return t.length=e.length,t}))}},"./components/ConfirmDialog.tsx":(e,t,a)=>{a.r(t),a.d(t,{useConfirmDialog:()=>f});var l=a("../../node_modules/tslib/tslib.es6.js"),n=a("../../node_modules/@material-ui/core/esm/Button/Button.js"),s=a("../../node_modules/@material-ui/core/esm/Dialog/Dialog.js"),o=a("../../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js"),i=a("../../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js"),d=a("../../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js"),r=a("../../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"),c=a("../../node_modules/react/index.js"),u=a("./i18n/Translation.tsx"),m=a("./components/Transition.tsx");const p=e=>{const{open:t,title:a,content:p,onOK:f,onCancel:h}=e,v=(0,l.__rest)(e,["open","title","content","onOK","onCancel"]);return c.createElement(s.default,Object.assign({open:t,onClose:()=>{h()},TransitionComponent:m.default},v),c.createElement(r.default,null,a||(0,u.default)("confirm.title")),c.createElement(i.default,null,c.createElement(d.default,null,p)),c.createElement(o.default,null,c.createElement(n.default,{onClick:()=>{h()},color:"primary"},(0,u.default)("confirm.cancel")),c.createElement(n.default,{onClick:()=>{f()},color:"primary"},(0,u.default)("confirm.ok"))))},f=e=>{const{onConfirm:t}=e,a=(0,l.__rest)(e,["onConfirm"]),[n,s]=(0,c.useState)(!1);return{dialog:c.createElement(p,Object.assign({open:n,onCancel:()=>{s(!1)},onOK:t},a)),isOpen:n,open:()=>{s(!0)}}}},"./components/FormTextField.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>i});var l=a("../../node_modules/tslib/tslib.es6.js"),n=a("../../node_modules/@material-ui/core/esm/TextField/TextField.js"),s=a("../../node_modules/react/index.js"),o=a("./components/InputContainer.tsx");const i=e=>{var{classes:t}=e,a=(0,l.__rest)(e,["classes"]);return s.createElement(o.default,null,s.createElement(n.default,Object.assign({fullWidth:!0,margin:"normal"},a)))}},"./components/Icons.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var l=a("../../node_modules/@material-ui/icons/esm/Home.js"),n=a("../../node_modules/@material-ui/icons/esm/Hotel.js"),s=a("../../node_modules/@material-ui/icons/esm/People.js"),o=a("../../node_modules/@material-ui/icons/esm/HotTub.js"),i=a("../../node_modules/@material-ui/icons/esm/BusinessCenter.js"),d=a("../../node_modules/@material-ui/icons/esm/FreeBreakfast.js"),r=a("../../node_modules/@material-ui/icons/esm/DirectionsWalk.js"),c=a("../../node_modules/react/index.js");function u(e){switch(e.name){case"home":return c.createElement(l.default,null);case"bed":return c.createElement(n.default,null);case"living":return c.createElement(s.default,null);case"toilet":case"shower":return c.createElement(o.default,null);case"books":case"study":return c.createElement(i.default,null);case"kitchen":return c.createElement(d.default,null);default:return c.createElement(r.default,null)}}},"./components/InputContainer.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>s});var l=a("../../node_modules/@material-ui/core/esm/styles/withStyles.js"),n=a("../../node_modules/react/index.js");const s=(0,l.default)((e=>({inputContainer:{width:"100%",paddingLeft:e.spacing(2),paddingRight:e.spacing(3)}})))((e=>n.createElement("div",{className:e.classes.inputContainer},e.children)))},"./components/Transition.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>s});var l=a("../../node_modules/@material-ui/core/esm/Zoom/Zoom.js"),n=a("../../node_modules/react/index.js");function s(e){return n.createElement(l.default,Object.assign({},e))}},"./pages/plan.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>$});var l=a("../../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js"),n=a("../../node_modules/@material-ui/core/esm/Button/Button.js"),s=a("../../node_modules/@material-ui/core/esm/Tabs/Tabs.js"),o=a("../../node_modules/@material-ui/core/esm/Tab/Tab.js"),i=a("../../node_modules/@material-ui/core/esm/Avatar/Avatar.js"),d=a("../../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"),r=a("../../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"),c=a("../../node_modules/@material-ui/core/esm/List/List.js"),u=a("../../node_modules/@material-ui/core/esm/ListItem/ListItem.js"),m=a("../../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js"),p=a("../../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js"),f=a("../../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js"),h=a("../../node_modules/@material-ui/core/esm/styles/withStyles.js"),v=a("../../node_modules/@material-ui/core/esm/Switch/Switch.js"),b=a("../../node_modules/@material-ui/icons/ArrowBackIos.js"),g=a("../../node_modules/@material-ui/icons/Cancel.js"),x=a("../../node_modules/@material-ui/icons/Delete.js"),E=a("../../node_modules/@material-ui/icons/FileCopy.js"),y=a("../../node_modules/lodash/lodash.js"),_=a("../../node_modules/notistack/dist/notistack.esm.js"),C=a("../../node_modules/react/index.js"),j=a("../../node_modules/react-router-dom/esm/react-router-dom.js"),P=a("../../node_modules/react-router/esm/react-router.js"),k=a("../../node_modules/react-scroll-locky/dist/es2015/component.js"),D=a("../../node_modules/uuid/v1.js"),T=a("./api/heating/index.tsx"),S=a("./components/AppHeader.tsx"),w=a("./components/BodyText.tsx"),I=a("./components/ConfirmDialog.tsx"),A=a("./components/FormTextField.tsx"),z=a("./components/Icons.tsx"),L=a("./components/Menu.tsx"),B=a("./components/SubHeader.tsx"),O=a("./i18n/Translation.tsx"),H=a("./layouts/Page.tsx"),F=a("./state/deviceHooks.tsx"),G=a("./state/planHooks.tsx"),Z=a("./state/zoneHooks.tsx");const M=C.lazy((()=>a.e("dialogs_CloneDialog_tsx").then(a.bind(a,"./dialogs/CloneDialog.tsx")))),N=C.lazy((()=>Promise.all([a.e("vendors-node_modules_material-ui_core_colors_amber_js-node_modules_material-ui_core_colors_gr-05f7ff"),a.e("components_TemperatureChart_index_tsx")]).then(a.bind(a,"./components/TemperatureChart/index.tsx")))),R=e=>{const{children:t,id:a,activeTab:n}=e;return C.createElement(C.Suspense,{fallback:C.createElement(l.default,{style:{margin:16},color:"secondary"})},a===n&&t)},$=(0,_.withSnackbar)((0,P.withRouter)((0,h.default)((e=>({button:{margin:e.spacing(2)},divider:{marginTop:e.spacing(3),marginBottom:e.spacing(1)},avatar:{width:"24px",height:"24px"}})))((e=>{const{classes:t}=e,[a,l]=C.useState(0),{plan:h,isDirty:_}=(0,G.usePlan)(e.match.params.id,!0===e.location.state),{setName:P,setDescription:$,toggleState:q,toggleZone:K,toggleDevice:W}=(0,G.useModifyPlan)(),J=(0,Z.useZones)(!0===e.location.state),Q=(0,F.useDevices)(!0===e.location.state);(0,C.useEffect)((()=>{V(!1),l(!0===e.location.state?1:0)}),[e.location]);const[U,V]=(0,C.useState)(!1),{dialog:X,open:Y,isOpen:ee}=(0,I.useConfirmDialog)({title:(0,O.default)("plan.confirm.title"),content:(0,O.default)("plan.confirm.content"),onConfirm:()=>{te()}}),te=()=>{T.planAPI.removePlan(h.id).then((t=>{e.history.push({pathname:"/",state:!1}),e.enqueueSnackbar((0,O.default)("plan.removed",{name:h.name}))}))};return C.createElement(C.Fragment,null,X,C.createElement(M,{open:U,name:h.name,onConfirm:t=>{const a=Object.assign(Object.assign({},h),{enabled:!1,id:D(),name:t});T.planAPI.updatePlan(a).then((t=>{e.history.push({pathname:`/plans/${a.id}`,state:!1}),e.enqueueSnackbar((0,O.default)("plan.duplicated",{name:h.name}))})).catch((e=>{throw e}))},onCancel:()=>{V(!1)}}),C.createElement(H.default,null,{header:C.createElement(S.default,null,{title:h.name||(0,O.default)("plan.unnamed"),button:C.createElement(L.MenuButton,Object.assign({first:!0},{to:"/"},{component:j.Link,icon:_?C.createElement(g.default,null):C.createElement(b.default,null)})),actions:C.createElement(C.Fragment,null,"new"!==h.id&&!_&&C.createElement(L.MenuButton,{onClick:()=>{V(!0)},icon:C.createElement(E.default,null)}),"new"!==h.id&&C.createElement(L.MenuButton,{onClick:Y,icon:C.createElement(x.default,null)}),_&&C.createElement(n.default,{color:"inherit",onClick:()=>{T.planAPI.updatePlan(h).then((t=>{e.history.push({pathname:"/",state:!1}),e.enqueueSnackbar((0,O.default)("plan.saved",{name:h.name}))}))}},(0,O.default)("plan.save"))),subBar:C.createElement(s.default,{value:a,onChange:(e,t)=>l(t),variant:"scrollable",scrollButtons:"off"},C.createElement(o.default,{classes:{root:e.classes.tab},disableRipple:!0,label:(0,O.default)("plan.tabs.overview")}),C.createElement(o.default,{classes:{root:e.classes.tab},disableRipple:!0,label:(0,O.default)("plan.tabs.schedule")}),C.createElement(o.default,{classes:{root:e.classes.tab},disableRipple:!0,label:(0,O.default)("plan.tabs.zones",{n:h.zones.length})}),C.createElement(o.default,{classes:{root:e.classes.tab},disableRipple:!0,label:(0,O.default)("plan.tabs.devices",{n:h.devices.length})}))}),paddingTop:100,body:C.createElement(k.ScrollLocky,{enabled:U||ee,isolation:!1},C.createElement(C.Fragment,null,C.createElement(R,{id:0,activeTab:a},C.createElement(B.default,{text:(0,O.default)("plan.overview.section")}),C.createElement(w.default,{text:(0,O.default)("plan.overview.text")}),C.createElement(A.default,{label:(0,O.default)("plan.overview.name.label"),placeholder:(0,O.default)("plan.overview.name.placeholder"),value:h.name,onChange:P}),C.createElement(w.default,{style:{paddingTop:16},text:(0,O.default)("plan.overview.text_enable")}),C.createElement(r.default,{control:C.createElement(v.default,{onChange:q,checked:h.enabled}),label:(0,O.default)("plan.overview.enabled.label"),labelPlacement:"start"}),C.createElement(w.default,{style:{paddingTop:16},text:(0,O.default)("plan.overview.text_description")}),C.createElement(A.default,{label:(0,O.default)("plan.overview.description.label"),placeholder:(0,O.default)("plan.overview.description.placeholder"),multiline:!0,value:h.description,onChange:$})),C.createElement(R,{id:1,activeTab:a},C.createElement(B.default,{text:(0,O.default)("plan.schedules.section")}),C.createElement(w.default,{text:(0,O.default)("plan.schedules.text")}),C.createElement("div",{style:{paddingTop:16,display:"flex",flexDirection:"row"}},C.createElement(j.Link,{style:{textDecoration:"none"},to:{pathname:`/plans/${h.id}/schedule`,state:h},replace:!0},C.createElement(n.default,{variant:"contained",color:"primary",className:t.button},(0,O.default)("plan.schedules.edit"))),C.createElement(j.Link,{style:{textDecoration:"none"},to:{pathname:`/plans/${h.id}/exceptions`,state:h},replace:!0},C.createElement(n.default,{variant:"contained",color:"primary",className:t.button},(0,O.default)("plan.schedules.exceptions")))),0!==h.schedule.length&&C.createElement(B.default,{text:(0,O.default)("plan.schedules.section_summary")}),0!==h.schedule.length&&C.createElement(N,{plan:h})),C.createElement(R,{id:2,activeTab:a},C.createElement(B.default,{text:(0,O.default)("plan.zones.section")}),C.createElement(w.default,{text:(0,O.default)("plan.zones.text")}),0===J.length?C.createElement(w.default,{style:{paddingTop:16},text:(0,O.default)("plan.zones.empty")}):C.createElement(c.default,null,(0,y.map)(J,(e=>C.createElement(u.default,{key:e.id,button:!0,onClick:()=>K(e.id)},null!=e.icon&&C.createElement(m.default,null,C.createElement(z.default,{name:e.icon})),C.createElement(f.default,{primary:e.name}),C.createElement(p.default,null,C.createElement(d.default,{onChange:()=>K(e.id),checked:null!=h.zones.find((t=>t===e.id))}))))))),C.createElement(R,{id:3,activeTab:a},C.createElement(B.default,{text:(0,O.default)("plan.devices.section")}),C.createElement(w.default,{text:(0,O.default)("plan.devices.text")}),0===Q.length?C.createElement(w.default,{style:{paddingTop:16},text:(0,O.default)("plan.devices.empty")}):C.createElement(c.default,null,(0,y.map)(Q,(e=>C.createElement(u.default,{key:e.id,button:!0,onClick:()=>W(e.id)},null!=e.icon&&C.createElement(m.default,null,C.createElement(i.default,{className:t.avatar,src:`http://homey-pro.iot.home.arpa${e.icon}`})),C.createElement(f.default,{primary:e.name}),C.createElement(p.default,null,C.createElement(d.default,{onChange:()=>W(e.id),checked:null!=h.devices.find((t=>t===e.id))})))))))))}))}))))},"./state/deviceHooks.tsx":(e,t,a)=>{a.r(t),a.d(t,{useDevices:()=>i});var l=a("../../node_modules/react/index.js"),n=a("./api/devices/index.tsx"),s=a("./state/PlanProvider.tsx");let o=!1;const i=e=>{const t=(0,s.usePlanDispatch)(),a=(0,s.usePlanGlobalState)("devices");if(!e&&!o)throw o=!0,n.deviceAPI.fetchHeatingDevices().then((e=>{t({type:"loadDevices",devices:e})}));return(0,l.useEffect)((()=>()=>{o=!1}),[e]),a}},"./state/planHooks.tsx":(e,t,a)=>{a.r(t),a.d(t,{useHistory:()=>i,useModifyExceptions:()=>r,useModifyPlan:()=>d,useModifySetPoints:()=>c,usePlan:()=>m});var l=a("../../node_modules/react/index.js"),n=a("../../node_modules/uuid/v1.js"),s=a("./api/heating/index.tsx"),o=a("./state/PlanProvider.tsx");const i=()=>{const e=(0,o.usePlanDispatch)(),t=(0,o.usePlanGlobalState)("loaded"),a=(0,l.useCallback)((()=>e({type:"savePoint"})),[e]),n=(0,l.useCallback)((()=>e({type:"undo"})),[e]),s=(0,l.useCallback)((()=>e({type:"commit"})),[e]);return(0,l.useEffect)((()=>{a()}),[t]),{savePoint:a,undo:n,commit:s}},d=()=>{const e=(0,o.usePlanDispatch)();return{setName:(0,l.useCallback)((t=>e({type:"setName",name:t.target.value})),[e]),setDescription:(0,l.useCallback)((t=>e({type:"setDescription",description:t.target.value})),[e]),toggleState:(0,l.useCallback)((()=>e({type:"toggleEnabled"})),[e]),toggleZone:(0,l.useCallback)((t=>e({type:"toggleZone",zone:t})),[e]),toggleDevice:(0,l.useCallback)((t=>e({type:"toggleDevice",device:t})),[e])}},r=()=>{const e=(0,o.usePlanDispatch)(),[t,a]=(0,l.useState)(!1),n=(0,l.useCallback)(((t,l)=>{e({type:"setOverride",mode:t,temperature:l}),a(!0)}),[e]),s=(0,l.useCallback)((t=>{e({type:"clearOverride",mode:t}),a(!0)}),[e]),i=(0,l.useCallback)(((e,t)=>{0===t?s(e):n(e,t)}),[e]);return(0,l.useEffect)((()=>{a(!1)}),[]),{isDirty:t,setOverride:n,clearOverride:s,updateOverride:i}},c=()=>{const[e,t]=(0,l.useState)(!1),a=(0,o.usePlanDispatch)(),n=(0,l.useCallback)((e=>{a({type:"selectDay",day:e})}),[a]),s=(0,o.usePlanGlobalState)("selectedDay"),i=(0,o.usePlanGlobalState)("setPoint"),d=(0,l.useCallback)(((e,l)=>{null!=l&&l.length>0&&(t(!0),a({type:"copyDays",source:e,targets:l}))}),[a]),r=(0,l.useCallback)((e=>{t(!0),a({type:"removeSetPoint",index:e})}),[a]),c=(0,l.useCallback)((e=>{a({type:"loadSetPoint",setPoint:e})}),[a]),u=(0,l.useCallback)((e=>{a({type:"newSetPoint",day:e})}),[a]),m=(0,l.useCallback)((e=>{-1===e.index?a({type:"addSetPoint",setPoint:e}):a({type:"updateSetPoint",setPoint:e})}),[a]),p=(0,l.useCallback)((e=>a({type:"setStart",start:e})),[a]),f=(0,l.useCallback)((e=>a({type:"setTargetTemperature",temperature:parseFloat(e.target.value)})),[a]);return(0,l.useEffect)((()=>{t(!1)}),[]),{setDirty:t,isDirty:e,selectedDay:s,setPoint:i,copyDays:d,removeSetPoint:r,loadSetPoint:c,newSetPoint:u,selectDay:n,saveSetPoint:m,setStart:p,setTargetTemperature:f}};let u=!1;const m=(e,t=!0)=>{const a=(0,o.usePlanDispatch)(),i=(0,o.usePlanGlobalState)("plan"),d=(0,o.usePlanGlobalState)("loaded"),r=(0,o.usePlanGlobalState)("dirty");if(!d||!t)if(null!=e&&"new"!==e||u){if(!u)throw s.planAPI.fetchPlanById(e).then((e=>{u=!0,a({type:"loadPlan",plan:e})}))}else u=!0,a({type:"loadPlan",plan:{id:n(),enabled:!1,name:"",zones:[],devices:[],schedule:[],overrides:void 0}});return(0,l.useEffect)((()=>()=>{u=!1}),[e,t]),{plan:i,isDirty:r,loaded:d}}},"./state/zoneHooks.tsx":(e,t,a)=>{a.r(t),a.d(t,{useZones:()=>i});var l=a("../../node_modules/react/index.js"),n=a("./api/zones/index.tsx"),s=a("./state/PlanProvider.tsx");let o=!1;const i=e=>{const t=(0,s.usePlanDispatch)(),a=(0,s.usePlanGlobalState)("zones");if(!e&&!o)throw o=!0,n.zoneAPI.fetchHeatingZones().then((e=>{t({type:"loadZones",zones:e})}));return(0,l.useEffect)((()=>()=>{o=!1}),[e]),a}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,