'use strict';

const FlowV3 = require('../../HomeyAPIV3/ManagerFlow/Flow');

class Flow extends FlowV3 {

  static transformGet(item) {
    item = super.transformGet(item);

    if (item.trigger) {
      item.trigger.id = `${item.trigger.uri}:${item.trigger.id}`;
      delete item.trigger.uri;
    }

    if (Array.isArray(item.conditions)) {
      item.conditions.forEach(card => {
        card.id = `${card.uri}:${card.id}`;
        delete card.uri;
      });
    }

    if (Array.isArray(item.actions)) {
      item.actions.forEach(card => {
        card.id = `${card.uri}:${card.id}`;
        delete card.uri;
      });
    }

    delete item.broken;

    return item;
  }

  static transformSet(item) {
    if (item.trigger) {
      item.trigger.uri = item.trigger.id.split(':', 3).join(':');
      item.trigger.id = item.trigger.id.split(':').reverse()[0];
    }

    if (Array.isArray(item.conditions)) {
      item.conditions.forEach(card => {
        card.uri = card.id.split(':', 3).join(':');
        card.id = card.id.split(':').reverse()[0];
      });
    }

    if (Array.isArray(item.actions)) {
      item.actions.forEach(card => {
        card.uri = card.id.split(':', 3).join(':');
        card.id = card.id.split(':').reverse()[0];
      });
    }

    return item;
  }

}

module.exports = Flow;
